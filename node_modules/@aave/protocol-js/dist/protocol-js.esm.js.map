{"version":3,"file":"protocol-js.esm.js","sources":["../src/helpers/bignumber.ts","../src/helpers/ray-math.ts","../src/v1/types.ts","../src/helpers/constants.ts","../src/helpers/pool-math.ts","../src/v1/computations-and-formatting.ts","../src/v2/computations-and-formatting.ts","../src/tx-builder/types/index.ts","../node_modules/regenerator-runtime/runtime.js","../src/tx-builder/config/index.ts","../src/tx-builder/contract-types/factories/IAaveGovernanceV2__factory.ts","../src/tx-builder/contract-types/factories/IAaveIncentivesController__factory.ts","../src/tx-builder/contract-types/factories/IAaveStakingHelper__factory.ts","../src/tx-builder/contract-types/factories/IDebtTokenBase__factory.ts","../src/tx-builder/contract-types/factories/IERC20Detailed__factory.ts","../src/tx-builder/contract-types/factories/IFaucet__factory.ts","../src/tx-builder/contract-types/factories/IGovernancePowerDelegationToken__factory.ts","../src/tx-builder/contract-types/factories/IGovernanceStrategy__factory.ts","../src/tx-builder/contract-types/factories/IGovernanceV2Helper__factory.ts","../src/tx-builder/contract-types/factories/ILendingPool__factory.ts","../src/tx-builder/contract-types/factories/ILendToAaveMigrator__factory.ts","../src/tx-builder/contract-types/factories/IMinter__factory.ts","../src/tx-builder/contract-types/factories/IRepayWithCollateral__factory.ts","../src/tx-builder/contract-types/factories/IStakedToken__factory.ts","../src/tx-builder/contract-types/factories/IParaSwapLiquiditySwapAdapter__factory.ts","../src/tx-builder/contract-types/factories/ISynthetix__factory.ts","../src/tx-builder/contract-types/factories/IWETHGateway__factory.ts","../src/tx-builder/utils/parsings.ts","../src/tx-builder/validators/paramValidators.ts","../src/tx-builder/validators/validations.ts","../src/tx-builder/validators/methodValidators.ts","../src/tx-builder/utils/gasStation.ts","../src/tx-builder/services/BaseService.ts","../src/tx-builder/services/LiquiditySwapAdapterParaswap.ts","../src/tx-builder/services/v2/LendingPool.ts","../src/tx-builder/services/ERC20.ts","../src/tx-builder/services/Faucet.ts","../src/tx-builder/services/LTAMigrator.ts","../src/tx-builder/services/Staking.ts","../src/tx-builder/services/SynthetixService.ts","../src/tx-builder/services/IncentivesController.ts","../src/tx-builder/config/defaultConfig.ts","../src/tx-builder/txBuilder.ts","../src/tx-builder/services/WETHGateway.ts","../src/tx-builder/services/BaseDebtToken.ts","../src/tx-builder/services/RepayWithCollateralAdapter.ts","../src/tx-builder/types/GovernanceV2MethodTypes.ts","../src/tx-builder/types/GovernanceV2ReturnTypes.ts","../src/tx-builder/utils/ipfs.ts","../src/tx-builder/services/v2/AaveGovernanceV2.ts","../src/tx-builder/services/v2/GovernanceDelegationTokenService.ts","../src/tx-builder/v2.ts"],"sourcesContent":["import BigNumber from 'bignumber.js';\n\nexport type BigNumberValue = string | number | BigNumber;\n\nexport const BigNumberZD = BigNumber.clone({\n  DECIMAL_PLACES: 0,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n});\n\nexport function valueToBigNumber(amount: BigNumberValue): BigNumber {\n  return new BigNumber(amount);\n}\n\nexport function valueToZDBigNumber(amount: BigNumberValue): BigNumber {\n  return new BigNumberZD(amount);\n}\n\nconst bn10 = new BigNumber(10);\n\nconst bn10PowLookup: { [key: number]: BigNumber } = {};\n\n/**\n * It's a performance optimized version of 10 ** x, which essentially memoizes previously used pows and resolves them as lookup.\n * @param decimals\n * @returns 10 ** decimals\n */\nexport function pow10(decimals: number): BigNumber {\n  if (!bn10PowLookup[decimals]) bn10PowLookup[decimals] = bn10.pow(decimals);\n  return bn10PowLookup[decimals];\n}\n\nexport function normalize(n: BigNumberValue, decimals: number): string {\n  return normalizeBN(n, decimals).toString(10);\n}\n\nexport function normalizeBN(n: BigNumberValue, decimals: number): BigNumber {\n  return valueToBigNumber(n).dividedBy(pow10(decimals));\n}\n","import BigNumber from 'bignumber.js';\nimport { BigNumberValue, valueToZDBigNumber } from './bignumber';\n\nexport const WAD = valueToZDBigNumber(10).pow(18);\nexport const HALF_WAD = WAD.dividedBy(2);\n\nexport const RAY = valueToZDBigNumber(10).pow(27);\nexport const HALF_RAY = RAY.dividedBy(2);\n\nexport const WAD_RAY_RATIO = valueToZDBigNumber(10).pow(9);\n\nexport function wadMul(a: BigNumberValue, b: BigNumberValue): BigNumber {\n  return HALF_WAD.plus(valueToZDBigNumber(a).multipliedBy(b)).div(WAD);\n}\n\nexport function wadDiv(a: BigNumberValue, b: BigNumberValue): BigNumber {\n  const halfB = valueToZDBigNumber(b).div(2);\n\n  return halfB.plus(valueToZDBigNumber(a).multipliedBy(WAD)).div(b);\n}\n\nexport function rayMul(a: BigNumberValue, b: BigNumberValue): BigNumber {\n  return HALF_RAY.plus(valueToZDBigNumber(a).multipliedBy(b)).div(RAY);\n}\n\nexport function rayDiv(a: BigNumberValue, b: BigNumberValue): BigNumber {\n  const halfB = valueToZDBigNumber(b).div(2);\n\n  return halfB.plus(valueToZDBigNumber(a).multipliedBy(RAY)).div(b);\n}\n\nexport function rayToWad(a: BigNumberValue): BigNumber {\n  const halfRatio = valueToZDBigNumber(WAD_RAY_RATIO).div(2);\n\n  return halfRatio.plus(a).div(WAD_RAY_RATIO);\n}\n\nexport function wadToRay(a: BigNumberValue): BigNumber {\n  return valueToZDBigNumber(a).multipliedBy(WAD_RAY_RATIO).decimalPlaces(0);\n}\n\nexport function rayPow(a: BigNumberValue, p: BigNumberValue): BigNumber {\n  let x = valueToZDBigNumber(a);\n  let n = valueToZDBigNumber(p);\n  let z = !n.modulo(2).eq(0) ? x : valueToZDBigNumber(RAY);\n\n  for (n = n.div(2); !n.eq(0); n = n.div(2)) {\n    x = rayMul(x, x);\n\n    if (!n.modulo(2).eq(0)) {\n      z = rayMul(z, x);\n    }\n  }\n  return z;\n}\n\n/**\n * RayPow is slow and gas intensive therefore in v2 we switched to binomial approximation on the contract level.\n * While the results ar not exact to the last decimal, they are close enough.\n */\nexport function binomialApproximatedRayPow(\n  a: BigNumberValue,\n  p: BigNumberValue\n): BigNumber {\n  const base = valueToZDBigNumber(a);\n  const exp = valueToZDBigNumber(p);\n  if (exp.eq(0)) return RAY;\n  const expMinusOne = exp.minus(1);\n  const expMinusTwo = exp.gt(2) ? exp.minus(2) : 0;\n\n  const basePowerTwo = rayMul(base, base);\n  const basePowerThree = rayMul(basePowerTwo, base);\n\n  const firstTerm = exp.multipliedBy(base);\n  const secondTerm = exp\n    .multipliedBy(expMinusOne)\n    .multipliedBy(basePowerTwo)\n    .div(2);\n  const thirdTerm = exp\n    .multipliedBy(expMinusOne)\n    .multipliedBy(expMinusTwo)\n    .multipliedBy(basePowerThree)\n    .div(6);\n\n  return RAY.plus(firstTerm).plus(secondTerm).plus(thirdTerm);\n}\n\nexport function rayToDecimal(a: BigNumberValue): BigNumber {\n  return valueToZDBigNumber(a).dividedBy(RAY);\n}\n","export enum BorrowRateMode {\n  None = 'None',\n  Stable = 'Stable',\n  Variable = 'Variable',\n}\n\nexport type ReserveRatesData = {\n  id: string;\n  symbol: string;\n  paramsHistory: {\n    variableBorrowIndex: string;\n    liquidityIndex: string;\n    timestamp: number;\n  }[];\n};\n\nexport type ReserveData = {\n  id: string;\n  underlyingAsset: string;\n  name: string;\n  symbol: string;\n  decimals: number;\n  isActive: boolean;\n  isFreezed: boolean;\n  usageAsCollateralEnabled: boolean;\n  borrowingEnabled: boolean;\n  stableBorrowRateEnabled: boolean;\n  baseLTVasCollateral: string;\n  optimalUtilisationRate: string;\n  stableRateSlope1: string;\n  stableRateSlope2: string;\n  averageStableBorrowRate: string;\n  baseVariableBorrowRate: string;\n  variableRateSlope1: string;\n  variableRateSlope2: string;\n  liquidityIndex: string;\n  reserveLiquidationThreshold: string;\n  reserveLiquidationBonus: string;\n  variableBorrowIndex: string;\n  variableBorrowRate: string;\n  avg30DaysVariableBorrowRate?: string;\n  availableLiquidity: string;\n  stableBorrowRate: string;\n  liquidityRate: string;\n  avg30DaysLiquidityRate?: string;\n  totalBorrows: string;\n  totalBorrowsStable: string;\n  totalBorrowsVariable: string;\n  totalLiquidity: string;\n  utilizationRate: string;\n  lastUpdateTimestamp: number;\n  aToken: {\n    id: string;\n  };\n  price: {\n    priceInEth: string;\n  };\n};\n\nexport type UserReserveData = {\n  principalATokenBalance: string;\n  userBalanceIndex: string;\n  redirectedBalance: string;\n  interestRedirectionAddress: string;\n  usageAsCollateralEnabledOnUser: boolean;\n  borrowRate: string;\n  borrowRateMode: BorrowRateMode;\n  originationFee: string;\n  principalBorrows: string;\n  variableBorrowIndex: string;\n  lastUpdateTimestamp: number;\n  reserve: {\n    id: string;\n    underlyingAsset: string;\n    name: string;\n    symbol: string;\n    decimals: number;\n    liquidityRate: string;\n    reserveLiquidationBonus: string;\n    lastUpdateTimestamp: number;\n    aToken: {\n      id: string;\n    };\n  };\n};\n\nexport type ComputedUserReserve = UserReserveData & {\n  currentUnderlyingBalance: string;\n  currentUnderlyingBalanceETH: string;\n  currentUnderlyingBalanceUSD: string;\n\n  currentBorrows: string;\n  currentBorrowsETH: string;\n  currentBorrowsUSD: string;\n\n  principalBorrowsETH: string;\n  principalBorrowsUSD: string;\n\n  originationFeeETH: string;\n  originationFeeUSD: string;\n};\n\nexport type UserSummaryData = {\n  id: string;\n  totalLiquidityETH: string;\n  totalCollateralETH: string;\n  totalBorrowsETH: string;\n  totalFeesETH: string;\n  totalFeesUSD: string;\n  totalLiquidityUSD: string;\n  totalCollateralUSD: string;\n  totalBorrowsUSD: string;\n  totalBorrowsWithFeesETH: string;\n  totalBorrowsWithFeesUSD: string;\n  availableBorrowsETH: string;\n  currentLoanToValue: string;\n  currentLiquidationThreshold: string;\n  maxAmountToWithdrawInEth: string;\n  healthFactor: string;\n  reservesData: ComputedUserReserve[];\n};\n","import { valueToBigNumber } from './bignumber';\n\nexport const SECONDS_PER_YEAR = valueToBigNumber('31536000');\nexport const ETH_DECIMALS = 18;\nexport const USD_DECIMALS = 10;\nexport const RAY_DECIMALS = 27;\n","import BigNumber from 'bignumber.js';\n\nimport {\n  BigNumberValue,\n  valueToBigNumber,\n  valueToZDBigNumber,\n  pow10,\n} from './bignumber';\nimport * as RayMath from './ray-math';\nimport { SECONDS_PER_YEAR } from './constants';\n\nexport const LTV_PRECISION = 4;\n\nexport function calculateCompoundedInterest(\n  rate: BigNumberValue,\n  currentTimestamp: number,\n  lastUpdateTimestamp: number\n): BigNumber {\n  const timeDelta = valueToZDBigNumber(currentTimestamp - lastUpdateTimestamp);\n  const ratePerSecond = valueToZDBigNumber(rate).dividedBy(SECONDS_PER_YEAR);\n  return RayMath.binomialApproximatedRayPow(ratePerSecond, timeDelta);\n}\n\nexport function getCompoundedBalance(\n  _principalBalance: BigNumberValue,\n  _reserveIndex: BigNumberValue,\n  _reserveRate: BigNumberValue,\n  _lastUpdateTimestamp: number,\n  currentTimestamp: number\n): BigNumber {\n  const principalBalance = valueToZDBigNumber(_principalBalance);\n  if (principalBalance.eq('0')) {\n    return principalBalance;\n  }\n\n  const compoundedInterest = calculateCompoundedInterest(\n    _reserveRate,\n    currentTimestamp,\n    _lastUpdateTimestamp\n  );\n  const cumulatedInterest = RayMath.rayMul(compoundedInterest, _reserveIndex);\n  const principalBalanceRay = RayMath.wadToRay(principalBalance);\n\n  return RayMath.rayToWad(\n    RayMath.rayMul(principalBalanceRay, cumulatedInterest)\n  );\n}\n\nexport const calculateLinearInterest = (\n  rate: BigNumberValue,\n  currentTimestamp: number,\n  lastUpdateTimestamp: number\n) => {\n  const timeDelta = RayMath.wadToRay(\n    valueToZDBigNumber(currentTimestamp - lastUpdateTimestamp)\n  );\n  const timeDeltaInSeconds = RayMath.rayDiv(\n    timeDelta,\n    RayMath.wadToRay(SECONDS_PER_YEAR)\n  );\n  return RayMath.rayMul(rate, timeDeltaInSeconds).plus(RayMath.RAY);\n};\n\nexport function getReserveNormalizedIncome(\n  rate: BigNumberValue,\n  index: BigNumberValue,\n  lastUpdateTimestamp: number,\n  currentTimestamp: number\n): BigNumber {\n  if (valueToZDBigNumber(rate).eq('0')) {\n    return valueToZDBigNumber(index);\n  }\n\n  const cumulatedInterest = calculateLinearInterest(\n    rate,\n    currentTimestamp,\n    lastUpdateTimestamp\n  );\n\n  return RayMath.rayMul(cumulatedInterest, index);\n}\n\nexport function getLinearBalance(\n  balance: BigNumberValue,\n  index: BigNumberValue,\n  rate: BigNumberValue,\n  lastUpdateTimestamp: number,\n  currentTimestamp: number\n) {\n  return RayMath.rayToWad(\n    RayMath.rayMul(\n      RayMath.wadToRay(balance),\n      getReserveNormalizedIncome(\n        rate,\n        index,\n        lastUpdateTimestamp,\n        currentTimestamp\n      )\n    )\n  );\n}\n\nexport function getCompoundedStableBalance(\n  _principalBalance: BigNumberValue,\n  _userStableRate: BigNumberValue,\n  _lastUpdateTimestamp: number,\n  currentTimestamp: number\n): BigNumber {\n  const principalBalance = valueToZDBigNumber(_principalBalance);\n  if (principalBalance.eq('0')) {\n    return principalBalance;\n  }\n\n  const cumulatedInterest = calculateCompoundedInterest(\n    _userStableRate,\n    currentTimestamp,\n    _lastUpdateTimestamp\n  );\n  const principalBalanceRay = RayMath.wadToRay(principalBalance);\n\n  return RayMath.rayToWad(\n    RayMath.rayMul(principalBalanceRay, cumulatedInterest)\n  );\n}\n\nexport function calculateHealthFactorFromBalances(\n  collateralBalanceETH: BigNumberValue,\n  borrowBalanceETH: BigNumberValue,\n  currentLiquidationThreshold: BigNumberValue\n): BigNumber {\n  if (valueToBigNumber(borrowBalanceETH).eq(0)) {\n    return valueToBigNumber('-1'); // invalid number\n  }\n  return valueToBigNumber(collateralBalanceETH)\n    .multipliedBy(currentLiquidationThreshold)\n    .dividedBy(pow10(LTV_PRECISION))\n    .div(borrowBalanceETH);\n}\n\nexport function calculateHealthFactorFromBalancesBigUnits(\n  collateralBalanceETH: BigNumberValue,\n  borrowBalanceETH: BigNumberValue,\n  currentLiquidationThreshold: BigNumberValue\n): BigNumber {\n  return calculateHealthFactorFromBalances(\n    collateralBalanceETH,\n    borrowBalanceETH,\n    new BigNumber(currentLiquidationThreshold)\n      .multipliedBy(pow10(LTV_PRECISION))\n      .decimalPlaces(0, BigNumber.ROUND_DOWN)\n  );\n}\n\nexport function calculateAvailableBorrowsETH(\n  collateralBalanceETH: BigNumberValue,\n  borrowBalanceETH: BigNumberValue,\n  currentLtv: BigNumberValue\n): BigNumber {\n  if (valueToZDBigNumber(currentLtv).eq(0)) {\n    return valueToZDBigNumber('0');\n  }\n  const availableBorrowsETH = valueToZDBigNumber(collateralBalanceETH)\n    .multipliedBy(currentLtv)\n    .dividedBy(pow10(LTV_PRECISION))\n    .minus(borrowBalanceETH);\n  return availableBorrowsETH.gt('0')\n    ? availableBorrowsETH\n    : valueToZDBigNumber('0');\n}\n\nexport function calculateAverageRate(\n  index0: string,\n  index1: string,\n  timestamp0: number,\n  timestamp1: number\n): string {\n  return valueToBigNumber(index1)\n    .dividedBy(index0)\n    .minus('1')\n    .dividedBy(timestamp1 - timestamp0)\n    .multipliedBy(SECONDS_PER_YEAR)\n    .toString();\n}\n","import BigNumber from 'bignumber.js';\nimport * as RayMath from '../helpers/ray-math';\nimport {\n  ReserveData,\n  ComputedUserReserve,\n  UserReserveData,\n  UserSummaryData,\n  BorrowRateMode,\n  ReserveRatesData,\n} from './types';\nimport {\n  BigNumberValue,\n  valueToBigNumber,\n  valueToZDBigNumber,\n  normalize,\n  pow10,\n} from '../helpers/bignumber';\nimport {\n  ETH_DECIMALS,\n  RAY_DECIMALS,\n  SECONDS_PER_YEAR,\n  USD_DECIMALS,\n} from '../helpers/constants';\nimport {\n  calculateAverageRate,\n  getReserveNormalizedIncome,\n} from '../helpers/pool-math';\n\nexport type GetCompoundedBorrowBalanceParamsReserve = Pick<\n  ReserveData,\n  'variableBorrowRate' | 'lastUpdateTimestamp' | 'variableBorrowIndex'\n>;\nexport type GetCompoundedBorrowBalanceParamsUserReserve = Pick<\n  UserReserveData,\n  | 'principalBorrows'\n  | 'borrowRateMode'\n  | 'variableBorrowIndex'\n  | 'borrowRate'\n  | 'lastUpdateTimestamp'\n>;\n\nexport function getCompoundedBorrowBalance(\n  reserve: GetCompoundedBorrowBalanceParamsReserve,\n  userReserve: GetCompoundedBorrowBalanceParamsUserReserve,\n  currentTimestamp: number\n): BigNumber {\n  const principalBorrows = valueToZDBigNumber(userReserve.principalBorrows);\n  if (principalBorrows.eq('0')) {\n    return valueToZDBigNumber('0');\n  }\n\n  let cumulatedInterest;\n  if (userReserve.borrowRateMode === BorrowRateMode.Variable) {\n    const compoundedInterest = calculateCompoundedInterest(\n      reserve.variableBorrowRate,\n      currentTimestamp,\n      reserve.lastUpdateTimestamp\n    );\n\n    cumulatedInterest = RayMath.rayDiv(\n      RayMath.rayMul(compoundedInterest, reserve.variableBorrowIndex),\n      userReserve.variableBorrowIndex\n    );\n  } else {\n    // if stable\n    cumulatedInterest = calculateCompoundedInterest(\n      userReserve.borrowRate,\n      currentTimestamp,\n      userReserve.lastUpdateTimestamp\n    );\n  }\n\n  const borrowBalanceRay = RayMath.wadToRay(principalBorrows);\n\n  return RayMath.rayToWad(RayMath.rayMul(borrowBalanceRay, cumulatedInterest));\n}\n\nexport const calculateCompoundedInterest = (\n  rate: BigNumberValue,\n  currentTimestamp: number,\n  lastUpdateTimestamp: number\n): BigNumber => {\n  const timeDelta = valueToZDBigNumber(currentTimestamp - lastUpdateTimestamp);\n  const ratePerSecond = valueToZDBigNumber(rate).dividedBy(SECONDS_PER_YEAR);\n  return RayMath.binomialApproximatedRayPow(ratePerSecond, timeDelta);\n};\n\nexport function calculateHealthFactorFromBalances(\n  collateralBalanceETH: BigNumberValue,\n  borrowBalanceETH: BigNumberValue,\n  totalFeesETH: BigNumberValue,\n  currentLiquidationThreshold: BigNumberValue\n): BigNumber {\n  if (valueToBigNumber(borrowBalanceETH).eq(0)) {\n    return valueToBigNumber('-1'); // invalid number\n  }\n  return valueToBigNumber(collateralBalanceETH)\n    .multipliedBy(currentLiquidationThreshold)\n    .dividedBy(100)\n    .div(valueToBigNumber(borrowBalanceETH).plus(totalFeesETH));\n}\n\nexport function calculateHealthFactorFromBalancesBigUnits(\n  collateralBalanceETH: BigNumberValue,\n  borrowBalanceETH: BigNumberValue,\n  totalFeesETH: BigNumberValue,\n  currentLiquidationThreshold: BigNumberValue\n): BigNumber {\n  return calculateHealthFactorFromBalances(\n    collateralBalanceETH,\n    borrowBalanceETH,\n    totalFeesETH,\n    new BigNumber(currentLiquidationThreshold)\n      .multipliedBy(100)\n      .decimalPlaces(0, BigNumber.ROUND_DOWN)\n  );\n}\n\nexport function calculateAvailableBorrowsETH(\n  collateralBalanceETH: BigNumberValue,\n  borrowBalanceETH: BigNumberValue,\n  totalFeesETH: BigNumberValue,\n  currentLtv: BigNumberValue\n): BigNumber {\n  if (valueToZDBigNumber(currentLtv).eq(0)) {\n    return valueToZDBigNumber('0');\n  }\n  let availableBorrowsETH = valueToZDBigNumber(collateralBalanceETH)\n    .multipliedBy(currentLtv)\n    .dividedBy(100);\n  if (availableBorrowsETH.lt(borrowBalanceETH)) {\n    return valueToZDBigNumber('0');\n  }\n  availableBorrowsETH = availableBorrowsETH\n    .minus(borrowBalanceETH)\n    .minus(totalFeesETH);\n  const borrowFee = availableBorrowsETH.multipliedBy('0.0025');\n  return availableBorrowsETH.minus(borrowFee);\n}\n\nexport type CalculateCumulatedBalancePoolReserve = {\n  liquidityRate: BigNumberValue;\n  liquidityIndex: BigNumberValue;\n  lastUpdateTimestamp: number;\n};\nexport type CalculateCumulatedBalanceUserReserve = Pick<\n  UserReserveData,\n  'userBalanceIndex'\n>;\n\nexport function calculateCumulatedBalance(\n  balance: BigNumberValue,\n  userReserve: CalculateCumulatedBalanceUserReserve,\n  poolReserve: CalculateCumulatedBalancePoolReserve,\n  currentTimestamp: number\n): BigNumber {\n  return RayMath.rayToWad(\n    RayMath.rayDiv(\n      RayMath.rayMul(\n        RayMath.wadToRay(balance),\n        getReserveNormalizedIncome(\n          poolReserve.liquidityRate,\n          poolReserve.liquidityIndex,\n          poolReserve.lastUpdateTimestamp,\n          currentTimestamp\n        )\n      ),\n      userReserve.userBalanceIndex\n    )\n  );\n}\n\nexport type CalculateCurrentUnderlyingBalancePoolReserve = CalculateCumulatedBalancePoolReserve;\nexport type CalculateCurrentUnderlyingBalanceUserReserve = CalculateCumulatedBalanceUserReserve &\n  Pick<\n    UserReserveData,\n    | 'principalATokenBalance'\n    | 'redirectedBalance'\n    | 'interestRedirectionAddress'\n  >;\n\nexport function calculateCurrentUnderlyingBalance(\n  userReserve: CalculateCurrentUnderlyingBalanceUserReserve,\n  poolReserve: CalculateCurrentUnderlyingBalancePoolReserve,\n  currentTimestamp: number\n): BigNumber {\n  if (\n    userReserve.principalATokenBalance === '0' &&\n    userReserve.redirectedBalance === '0'\n  ) {\n    return valueToZDBigNumber('0');\n  }\n  if (\n    userReserve.interestRedirectionAddress !==\n    '0x0000000000000000000000000000000000000000'\n  ) {\n    return valueToZDBigNumber(userReserve.principalATokenBalance).plus(\n      calculateCumulatedBalance(\n        userReserve.redirectedBalance,\n        userReserve,\n        poolReserve,\n        currentTimestamp\n      ).minus(userReserve.redirectedBalance)\n    );\n  }\n  return calculateCumulatedBalance(\n    valueToBigNumber(userReserve.redirectedBalance)\n      .plus(userReserve.principalATokenBalance)\n      .toString(),\n    userReserve,\n    poolReserve,\n    currentTimestamp\n  ).minus(userReserve.redirectedBalance);\n}\n\nfunction computeUserReserveData(\n  poolReserve: ReserveData,\n  userReserve: UserReserveData,\n  usdPriceEth: BigNumberValue,\n  currentTimestamp: number\n): ComputedUserReserve {\n  const {\n    price: { priceInEth },\n    decimals,\n  } = poolReserve;\n  const currentUnderlyingBalance = calculateCurrentUnderlyingBalance(\n    userReserve,\n    poolReserve,\n    currentTimestamp\n  );\n  const currentUnderlyingBalanceETH = currentUnderlyingBalance\n    .multipliedBy(priceInEth)\n    .dividedBy(pow10(decimals));\n  const currentUnderlyingBalanceUSD = currentUnderlyingBalanceETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toFixed(0);\n\n  const principalBorrowsETH = valueToZDBigNumber(userReserve.principalBorrows)\n    .multipliedBy(priceInEth)\n    .dividedBy(pow10(decimals));\n  const principalBorrowsUSD = principalBorrowsETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toFixed(0);\n\n  const currentBorrows = getCompoundedBorrowBalance(\n    poolReserve,\n    userReserve,\n    currentTimestamp\n  );\n  const currentBorrowsETH = currentBorrows\n    .multipliedBy(priceInEth)\n    .dividedBy(pow10(decimals));\n  const currentBorrowsUSD = currentBorrowsETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toFixed(0);\n\n  const originationFeeETH = valueToZDBigNumber(userReserve.originationFee)\n    .multipliedBy(priceInEth)\n    .dividedBy(pow10(decimals));\n  const originationFeeUSD = originationFeeETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toFixed(0);\n\n  return {\n    ...userReserve,\n    principalBorrowsUSD,\n    currentBorrowsUSD,\n    originationFeeUSD,\n    currentUnderlyingBalanceUSD,\n    originationFeeETH: originationFeeETH.toString(),\n    currentBorrows: currentBorrows.toString(),\n    currentBorrowsETH: currentBorrowsETH.toString(),\n    principalBorrowsETH: principalBorrowsETH.toString(),\n    currentUnderlyingBalance: currentUnderlyingBalance.toFixed(),\n    currentUnderlyingBalanceETH: currentUnderlyingBalanceETH.toFixed(),\n  };\n}\n\nexport function computeRawUserSummaryData(\n  poolReservesData: ReserveData[],\n  rawUserReserves: UserReserveData[],\n  userId: string,\n  usdPriceEth: BigNumberValue,\n  currentTimestamp: number\n): UserSummaryData {\n  let totalLiquidityETH = valueToZDBigNumber('0');\n  let totalCollateralETH = valueToZDBigNumber('0');\n  let totalBorrowsETH = valueToZDBigNumber('0');\n  let totalFeesETH = valueToZDBigNumber('0');\n  let currentLtv = valueToBigNumber('0');\n  let currentLiquidationThreshold = valueToBigNumber('0');\n\n  const userReservesData = rawUserReserves\n    .map((userReserve) => {\n      const poolReserve = poolReservesData.find(\n        (reserve) => reserve.id === userReserve.reserve.id\n      );\n      if (!poolReserve) {\n        throw new Error(\n          'Reserve is not registered on platform, please contact support'\n        );\n      }\n      const computedUserReserve = computeUserReserveData(\n        poolReserve,\n        userReserve,\n        usdPriceEth,\n        currentTimestamp\n      );\n      totalLiquidityETH = totalLiquidityETH.plus(\n        computedUserReserve.currentUnderlyingBalanceETH\n      );\n      totalBorrowsETH = totalBorrowsETH.plus(\n        computedUserReserve.currentBorrowsETH\n      );\n      totalFeesETH = totalFeesETH.plus(computedUserReserve.originationFeeETH);\n\n      // asset enabled as collateral\n      if (\n        poolReserve.usageAsCollateralEnabled &&\n        userReserve.usageAsCollateralEnabledOnUser\n      ) {\n        totalCollateralETH = totalCollateralETH.plus(\n          computedUserReserve.currentUnderlyingBalanceETH\n        );\n        currentLtv = currentLtv.plus(\n          valueToBigNumber(\n            computedUserReserve.currentUnderlyingBalanceETH\n          ).multipliedBy(poolReserve.baseLTVasCollateral)\n        );\n        currentLiquidationThreshold = currentLiquidationThreshold.plus(\n          valueToBigNumber(\n            computedUserReserve.currentUnderlyingBalanceETH\n          ).multipliedBy(poolReserve.reserveLiquidationThreshold)\n        );\n      }\n      return computedUserReserve;\n    })\n    .sort((a, b) =>\n      a.reserve.symbol > b.reserve.symbol\n        ? 1\n        : a.reserve.symbol < b.reserve.symbol\n        ? -1\n        : 0\n    );\n\n  if (currentLtv.gt(0)) {\n    currentLtv = currentLtv\n      .div(totalCollateralETH)\n      .decimalPlaces(0, BigNumber.ROUND_DOWN);\n  }\n  if (currentLiquidationThreshold.gt(0)) {\n    currentLiquidationThreshold = currentLiquidationThreshold\n      .div(totalCollateralETH)\n      .decimalPlaces(0, BigNumber.ROUND_DOWN);\n  }\n\n  const healthFactor = calculateHealthFactorFromBalances(\n    totalCollateralETH,\n    totalBorrowsETH,\n    totalFeesETH,\n    currentLiquidationThreshold\n  );\n\n  const totalCollateralUSD = totalCollateralETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toString();\n\n  const totalLiquidityUSD = totalLiquidityETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toString();\n\n  const totalBorrowsUSD = totalBorrowsETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toString();\n\n  const totalFeesUSD = totalFeesETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth);\n\n  const totalBorrowsWithFeesETH = totalFeesETH.plus(totalBorrowsETH);\n  const totalBorrowsWithFeesUSD = totalFeesUSD.plus(totalBorrowsUSD);\n  const availableBorrowsETH = calculateAvailableBorrowsETH(\n    totalCollateralETH,\n    totalBorrowsETH,\n    totalFeesETH,\n    currentLtv\n  );\n\n  const totalBorrowsAndFeesETH = totalBorrowsETH.plus(totalFeesETH);\n  const maxAmountToWithdrawInEth = totalLiquidityETH.minus(\n    totalBorrowsAndFeesETH.eq(0)\n      ? '0'\n      : totalBorrowsAndFeesETH\n          .multipliedBy(100)\n          .dividedBy(currentLiquidationThreshold)\n  );\n\n  return {\n    totalLiquidityUSD,\n    totalCollateralUSD,\n    totalBorrowsUSD,\n    id: userId,\n    totalLiquidityETH: totalLiquidityETH.toString(),\n    totalCollateralETH: totalCollateralETH.toString(),\n    totalFeesETH: totalFeesETH.toString(),\n    totalBorrowsETH: totalBorrowsETH.toString(),\n    availableBorrowsETH: availableBorrowsETH.toString(),\n    currentLoanToValue: currentLtv.toString(),\n    currentLiquidationThreshold: currentLiquidationThreshold.toString(),\n    maxAmountToWithdrawInEth: maxAmountToWithdrawInEth.toString(),\n    healthFactor: healthFactor.toString(),\n    reservesData: userReservesData,\n    totalFeesUSD: totalFeesUSD.toString(),\n    totalBorrowsWithFeesETH: totalBorrowsWithFeesETH.toString(),\n    totalBorrowsWithFeesUSD: totalBorrowsWithFeesUSD.toString(),\n  };\n}\n\nexport function formatUserSummaryData(\n  poolReservesData: ReserveData[],\n  rawUserReserves: UserReserveData[],\n  userId: string,\n  usdPriceEth: BigNumberValue,\n  currentTimestamp: number\n): UserSummaryData {\n  const userData = computeRawUserSummaryData(\n    poolReservesData,\n    rawUserReserves,\n    userId,\n    usdPriceEth,\n    currentTimestamp\n  );\n  const userReservesData = userData.reservesData.map(\n    ({ reserve, ...userReserve }): ComputedUserReserve => {\n      const reserveDecimals = reserve.decimals;\n      return {\n        ...userReserve,\n        reserve: {\n          ...reserve,\n          reserveLiquidationBonus: normalize(\n            valueToBigNumber(reserve.reserveLiquidationBonus).minus(100),\n            2\n          ),\n          liquidityRate: normalize(reserve.liquidityRate, RAY_DECIMALS),\n        },\n        redirectedBalance: normalize(\n          userReserve.redirectedBalance,\n          reserveDecimals\n        ),\n        principalATokenBalance: normalize(\n          userReserve.principalATokenBalance,\n          reserveDecimals\n        ),\n        borrowRate: normalize(userReserve.borrowRate, RAY_DECIMALS),\n        lastUpdateTimestamp: userReserve.lastUpdateTimestamp,\n        variableBorrowIndex: normalize(\n          userReserve.variableBorrowIndex,\n          RAY_DECIMALS\n        ),\n        userBalanceIndex: normalize(userReserve.userBalanceIndex, RAY_DECIMALS),\n        currentUnderlyingBalance: normalize(\n          userReserve.currentUnderlyingBalance,\n          reserveDecimals\n        ),\n        currentUnderlyingBalanceETH: normalize(\n          userReserve.currentUnderlyingBalanceETH,\n          ETH_DECIMALS\n        ),\n        currentUnderlyingBalanceUSD: normalize(\n          userReserve.currentUnderlyingBalanceUSD,\n          USD_DECIMALS\n        ),\n        principalBorrows: normalize(\n          userReserve.principalBorrows,\n          reserveDecimals\n        ),\n        principalBorrowsETH: normalize(\n          userReserve.principalBorrowsETH,\n          ETH_DECIMALS\n        ),\n        principalBorrowsUSD: normalize(\n          userReserve.principalBorrowsUSD,\n          USD_DECIMALS\n        ),\n        currentBorrows: normalize(userReserve.currentBorrows, reserveDecimals),\n        currentBorrowsETH: normalize(\n          userReserve.currentBorrowsETH,\n          ETH_DECIMALS\n        ),\n        currentBorrowsUSD: normalize(\n          userReserve.currentBorrowsUSD,\n          USD_DECIMALS\n        ),\n        originationFee: normalize(userReserve.originationFee, reserveDecimals),\n        originationFeeETH: normalize(\n          userReserve.originationFeeETH,\n          ETH_DECIMALS\n        ),\n        originationFeeUSD: normalize(\n          userReserve.originationFeeUSD,\n          USD_DECIMALS\n        ),\n      };\n    }\n  );\n  return {\n    id: userData.id,\n    reservesData: userReservesData,\n    totalLiquidityETH: normalize(userData.totalLiquidityETH, ETH_DECIMALS),\n    totalLiquidityUSD: normalize(userData.totalLiquidityUSD, USD_DECIMALS),\n    totalCollateralETH: normalize(userData.totalCollateralETH, ETH_DECIMALS),\n    totalCollateralUSD: normalize(userData.totalCollateralUSD, USD_DECIMALS),\n    totalFeesETH: normalize(userData.totalFeesETH, ETH_DECIMALS),\n    totalFeesUSD: normalize(userData.totalFeesUSD, USD_DECIMALS),\n    totalBorrowsETH: normalize(userData.totalBorrowsETH, ETH_DECIMALS),\n    totalBorrowsUSD: normalize(userData.totalBorrowsUSD, USD_DECIMALS),\n    totalBorrowsWithFeesETH: normalize(\n      userData.totalBorrowsWithFeesETH,\n      ETH_DECIMALS\n    ),\n    totalBorrowsWithFeesUSD: normalize(\n      userData.totalBorrowsWithFeesUSD,\n      USD_DECIMALS\n    ),\n    availableBorrowsETH: normalize(userData.availableBorrowsETH, ETH_DECIMALS),\n    currentLoanToValue: normalize(userData.currentLoanToValue, 2),\n    currentLiquidationThreshold: normalize(\n      userData.currentLiquidationThreshold,\n      2\n    ),\n    maxAmountToWithdrawInEth: normalize(\n      userData.maxAmountToWithdrawInEth,\n      ETH_DECIMALS\n    ),\n    healthFactor: userData.healthFactor,\n  };\n}\n\nexport function formatReserves(\n  reserves: ReserveData[],\n  reserveIndexes30DaysAgo?: ReserveRatesData[]\n): ReserveData[] {\n  return reserves.map((reserve) => {\n    const reserve30DaysAgo = reserveIndexes30DaysAgo?.find(\n      (res) => res.id === reserve.id\n    )?.paramsHistory?.[0];\n\n    return {\n      ...reserve,\n      price: {\n        ...reserve.price,\n        priceInEth: normalize(reserve.price.priceInEth, ETH_DECIMALS),\n      },\n      baseLTVasCollateral: normalize(reserve.baseLTVasCollateral, 2),\n      variableBorrowRate: normalize(reserve.variableBorrowRate, RAY_DECIMALS),\n      avg30DaysVariableBorrowRate: reserve30DaysAgo\n        ? calculateAverageRate(\n            reserve30DaysAgo.variableBorrowIndex,\n            reserve.variableBorrowIndex,\n            reserve30DaysAgo.timestamp,\n            reserve.lastUpdateTimestamp\n          )\n        : undefined,\n      avg30DaysLiquidityRate: reserve30DaysAgo\n        ? calculateAverageRate(\n            reserve30DaysAgo.liquidityIndex,\n            reserve.liquidityIndex,\n            reserve30DaysAgo.timestamp,\n            reserve.lastUpdateTimestamp\n          )\n        : undefined,\n\n      stableBorrowRate: normalize(reserve.stableBorrowRate, RAY_DECIMALS),\n      liquidityRate: normalize(reserve.liquidityRate, RAY_DECIMALS),\n      totalLiquidity: normalize(reserve.totalLiquidity, reserve.decimals),\n      availableLiquidity: normalize(\n        reserve.availableLiquidity,\n        reserve.decimals\n      ),\n      liquidityIndex: normalize(reserve.liquidityIndex, RAY_DECIMALS),\n      reserveLiquidationThreshold: normalize(\n        reserve.reserveLiquidationThreshold,\n        2\n      ),\n      reserveLiquidationBonus: normalize(\n        valueToBigNumber(reserve.reserveLiquidationBonus).minus(100),\n        2\n      ),\n      totalBorrows: normalize(reserve.totalBorrows, reserve.decimals),\n      totalBorrowsVariable: normalize(\n        reserve.totalBorrowsVariable,\n        reserve.decimals\n      ),\n      totalBorrowsStable: normalize(\n        reserve.totalBorrowsStable,\n        reserve.decimals\n      ),\n      variableBorrowIndex: normalize(reserve.variableBorrowIndex, RAY_DECIMALS),\n    };\n  });\n}\n\nexport function calculateInterestRates(\n  reserve: ReserveData,\n  amountToDeposit: BigNumberValue,\n  amountToBorrow: BigNumberValue,\n  borrowMode: 'stable' | 'variable' = 'variable'\n) {\n  const { optimalUtilisationRate } = reserve;\n  const baseVariableBorrowRate = valueToBigNumber(\n    reserve.baseVariableBorrowRate\n  );\n  const totalBorrowsStable = valueToBigNumber(reserve.totalBorrowsStable).plus(\n    borrowMode === 'stable' ? amountToBorrow : '0'\n  );\n  const totalBorrowsVariable = valueToBigNumber(\n    reserve.totalBorrowsVariable\n  ).plus(borrowMode === 'variable' ? amountToBorrow : '0');\n  const totalBorrows = totalBorrowsStable.plus(totalBorrowsVariable);\n  const totalDeposits = valueToBigNumber(reserve.totalLiquidity).plus(\n    amountToDeposit\n  );\n  const utilizationRate =\n    totalDeposits.eq(0) && totalBorrows.eq(0)\n      ? valueToBigNumber(0)\n      : totalBorrows.dividedBy(totalDeposits);\n\n  let currentStableBorrowRate = valueToBigNumber(reserve.stableBorrowRate);\n  let currentVariableBorrowRate = valueToBigNumber(0);\n  let currentLiquidityRate = valueToBigNumber(0);\n\n  if (utilizationRate.gt(optimalUtilisationRate)) {\n    const excessUtilizationRateRatio = utilizationRate\n      .minus(optimalUtilisationRate)\n      .dividedBy(valueToBigNumber(1).minus(optimalUtilisationRate));\n\n    currentStableBorrowRate = currentStableBorrowRate\n      .plus(reserve.stableRateSlope1)\n      .plus(excessUtilizationRateRatio.multipliedBy(reserve.stableRateSlope2));\n    currentVariableBorrowRate = baseVariableBorrowRate\n      .plus(reserve.variableRateSlope1)\n      .plus(\n        excessUtilizationRateRatio.multipliedBy(reserve.variableRateSlope2)\n      );\n  } else {\n    currentStableBorrowRate = currentVariableBorrowRate.plus(\n      utilizationRate\n        .dividedBy(optimalUtilisationRate)\n        .multipliedBy(reserve.stableRateSlope1)\n    );\n    currentVariableBorrowRate = baseVariableBorrowRate.plus(\n      utilizationRate\n        .dividedBy(optimalUtilisationRate)\n        .multipliedBy(reserve.variableRateSlope1)\n    );\n  }\n\n  if (!totalBorrows.eq(0)) {\n    const weightedVariableRate = currentVariableBorrowRate.multipliedBy(\n      totalBorrowsVariable\n    );\n    const weightedStableRate = valueToBigNumber(\n      reserve.averageStableBorrowRate\n    ).multipliedBy(totalBorrowsStable);\n\n    currentLiquidityRate = weightedVariableRate\n      .plus(weightedStableRate)\n      .dividedBy(totalBorrows);\n  }\n\n  return {\n    variableBorrowRate: currentVariableBorrowRate.toString(),\n    stableBorrowRate: currentStableBorrowRate.toString(),\n    liquidityRate: currentLiquidityRate.toString(),\n  };\n}\n","import BigNumber from 'bignumber.js';\n\nimport {\n  BigNumberValue,\n  valueToBigNumber,\n  valueToZDBigNumber,\n  normalize,\n  pow10,\n  normalizeBN,\n} from '../helpers/bignumber';\nimport {\n  calculateAvailableBorrowsETH,\n  calculateHealthFactorFromBalances,\n  getCompoundedBalance,\n  getCompoundedStableBalance,\n  calculateAverageRate,\n  LTV_PRECISION,\n  calculateCompoundedInterest,\n  getLinearBalance,\n} from '../helpers/pool-math';\nimport { RAY, rayDiv, rayMul, rayPow } from '../helpers/ray-math';\nimport {\n  ComputedUserReserve,\n  ReserveData,\n  UserReserveData,\n  UserSummaryData,\n  ReserveRatesData,\n  ComputedReserveData,\n  Supplies,\n  ReserveSupplyData,\n  RewardsInformation,\n} from './types';\nimport {\n  ETH_DECIMALS,\n  RAY_DECIMALS,\n  SECONDS_PER_YEAR,\n  USD_DECIMALS,\n} from '../helpers/constants';\n\nexport function getEthAndUsdBalance(\n  balance: BigNumberValue,\n  priceInEth: BigNumberValue,\n  decimals: number,\n  usdPriceEth: BigNumberValue\n): [string, string] {\n  const balanceInEth = valueToZDBigNumber(balance)\n    .multipliedBy(priceInEth)\n    .dividedBy(pow10(decimals));\n  const balanceInUsd = balanceInEth\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toFixed(0);\n  return [balanceInEth.toString(), balanceInUsd];\n}\n\n/*\ntype ComputeUserReserveDataPoolReserve = Pick<\n  ReserveData,\n  | 'price'\n  | 'decimals'\n  | 'liquidityIndex'\n  | 'liquidityRate'\n  | 'lastUpdateTimestamp'\n  | 'variableBorrowIndex'\n  | 'variableBorrowRate'\n>;\n\ntype ComputeUserReserveDataUserReserve = Pick<\n  UserReserveData,\n  | 'scaledATokenBalance'\n  | 'scaledVariableDebt'\n  | 'principalStableDebt'\n  | 'stableBorrowRate'\n  | 'stableBorrowLastUpdateTimestamp'\n>;\n*/\n\nexport function computeUserReserveData(\n  poolReserve: ReserveData,\n  userReserve: UserReserveData,\n  usdPriceEth: BigNumberValue,\n  currentTimestamp: number,\n  rewardsInfo: RewardsInformation\n): ComputedUserReserve {\n  const {\n    price: { priceInEth },\n    decimals,\n  } = poolReserve;\n  const underlyingBalance = getLinearBalance(\n    userReserve.scaledATokenBalance,\n    poolReserve.liquidityIndex,\n    poolReserve.liquidityRate,\n    poolReserve.lastUpdateTimestamp,\n    currentTimestamp\n  ).toString();\n  const [underlyingBalanceETH, underlyingBalanceUSD] = getEthAndUsdBalance(\n    underlyingBalance,\n    priceInEth,\n    decimals,\n    usdPriceEth\n  );\n\n  const variableBorrows = getCompoundedBalance(\n    userReserve.scaledVariableDebt,\n    poolReserve.variableBorrowIndex,\n    poolReserve.variableBorrowRate,\n    poolReserve.lastUpdateTimestamp,\n    currentTimestamp\n  ).toString();\n\n  const [variableBorrowsETH, variableBorrowsUSD] = getEthAndUsdBalance(\n    variableBorrows,\n    priceInEth,\n    decimals,\n    usdPriceEth\n  );\n\n  const stableBorrows = getCompoundedStableBalance(\n    userReserve.principalStableDebt,\n    poolReserve.stableBorrowRate,\n    userReserve.stableBorrowLastUpdateTimestamp,\n    currentTimestamp\n  ).toString();\n\n  const [stableBorrowsETH, stableBorrowsUSD] = getEthAndUsdBalance(\n    stableBorrows,\n    priceInEth,\n    decimals,\n    usdPriceEth\n  );\n  const {\n    totalLiquidity,\n    totalStableDebt,\n    totalVariableDebt,\n  } = calculateSupplies(\n    {\n      totalScaledVariableDebt: poolReserve.totalScaledVariableDebt,\n      variableBorrowIndex: poolReserve.variableBorrowIndex,\n      variableBorrowRate: poolReserve.variableBorrowRate,\n      totalPrincipalStableDebt: poolReserve.totalPrincipalStableDebt,\n      averageStableRate: poolReserve.averageStableRate,\n      availableLiquidity: poolReserve.availableLiquidity,\n      stableDebtLastUpdateTimestamp: poolReserve.stableDebtLastUpdateTimestamp,\n      lastUpdateTimestamp: poolReserve.lastUpdateTimestamp,\n    },\n    currentTimestamp\n  );\n\n  const aTokenRewards = totalLiquidity.gt(0)\n    ? calculateRewards(\n        userReserve.scaledATokenBalance,\n        poolReserve.aTokenIncentivesIndex,\n        userReserve.aTokenincentivesUserIndex,\n        rewardsInfo.incentivePrecision,\n        rewardsInfo.rewardTokenDecimals,\n        poolReserve.aIncentivesLastUpdateTimestamp,\n        poolReserve.aEmissionPerSecond,\n        rayDiv(totalLiquidity, poolReserve.liquidityIndex),\n        currentTimestamp,\n        rewardsInfo.emissionEndTimestamp\n      )\n    : '0';\n\n  const [aTokenRewardsETH, aTokenRewardsUSD] = getEthAndUsdBalance(\n    aTokenRewards,\n    rewardsInfo.rewardTokenPriceEth,\n    rewardsInfo.rewardTokenDecimals,\n    usdPriceEth\n  );\n\n  const vTokenRewards = totalVariableDebt.gt(0)\n    ? calculateRewards(\n        userReserve.scaledVariableDebt,\n        poolReserve.vTokenIncentivesIndex,\n        userReserve.vTokenincentivesUserIndex,\n        rewardsInfo.incentivePrecision,\n        rewardsInfo.rewardTokenDecimals,\n        poolReserve.vIncentivesLastUpdateTimestamp,\n        poolReserve.vEmissionPerSecond,\n        new BigNumber(poolReserve.totalScaledVariableDebt),\n        currentTimestamp,\n        rewardsInfo.emissionEndTimestamp\n      )\n    : '0';\n\n  const [vTokenRewardsETH, vTokenRewardsUSD] = getEthAndUsdBalance(\n    vTokenRewards,\n    rewardsInfo.rewardTokenPriceEth,\n    rewardsInfo.rewardTokenDecimals,\n    usdPriceEth\n  );\n  const sTokenRewards = totalStableDebt.gt(0)\n    ? calculateRewards(\n        userReserve.principalStableDebt,\n        poolReserve.sTokenIncentivesIndex,\n        userReserve.sTokenincentivesUserIndex,\n        rewardsInfo.incentivePrecision,\n        rewardsInfo.rewardTokenDecimals,\n        poolReserve.sIncentivesLastUpdateTimestamp,\n        poolReserve.sEmissionPerSecond,\n        new BigNumber(poolReserve.totalPrincipalStableDebt),\n        currentTimestamp,\n        rewardsInfo.emissionEndTimestamp\n      )\n    : '0';\n\n  const [sTokenRewardsETH, sTokenRewardsUSD] = getEthAndUsdBalance(\n    sTokenRewards,\n    rewardsInfo.rewardTokenPriceEth,\n    rewardsInfo.rewardTokenDecimals,\n    usdPriceEth\n  );\n\n  const exactStableBorrowRate = rayPow(\n    valueToZDBigNumber(userReserve.stableBorrowRate)\n      .dividedBy(SECONDS_PER_YEAR)\n      .plus(RAY),\n    SECONDS_PER_YEAR\n  ).minus(RAY);\n\n  return {\n    ...userReserve,\n    underlyingBalance,\n    underlyingBalanceETH,\n    underlyingBalanceUSD,\n    variableBorrows,\n    variableBorrowsETH,\n    variableBorrowsUSD,\n    stableBorrows,\n    stableBorrowsETH,\n    stableBorrowsUSD,\n    totalBorrows: valueToZDBigNumber(variableBorrows)\n      .plus(stableBorrows)\n      .toString(),\n    totalBorrowsETH: valueToZDBigNumber(variableBorrowsETH)\n      .plus(stableBorrowsETH)\n      .toString(),\n    totalBorrowsUSD: valueToZDBigNumber(variableBorrowsUSD)\n      .plus(stableBorrowsUSD)\n      .toString(),\n    aTokenRewards,\n    aTokenRewardsETH,\n    aTokenRewardsUSD,\n    vTokenRewards,\n    vTokenRewardsETH,\n    vTokenRewardsUSD,\n    sTokenRewards,\n    sTokenRewardsETH,\n    sTokenRewardsUSD,\n    totalRewards: valueToZDBigNumber(aTokenRewards)\n      .plus(vTokenRewards)\n      .plus(sTokenRewards)\n      .toString(),\n    totalRewardsETH: valueToZDBigNumber(aTokenRewardsETH)\n      .plus(vTokenRewardsETH)\n      .plus(sTokenRewardsETH)\n      .toString(),\n    totalRewardsUSD: valueToZDBigNumber(aTokenRewardsUSD)\n      .plus(vTokenRewardsUSD)\n      .plus(sTokenRewardsUSD)\n      .toString(),\n    stableBorrowAPR: normalize(userReserve.stableBorrowRate, RAY_DECIMALS),\n    stableBorrowAPY: normalize(exactStableBorrowRate, RAY_DECIMALS),\n  };\n}\n\nexport function computeRawUserSummaryData(\n  poolReservesData: ReserveData[],\n  rawUserReserves: UserReserveData[],\n  userId: string,\n  usdPriceEth: BigNumberValue,\n  currentTimestamp: number,\n  rewardsInfo: RewardsInformation\n): UserSummaryData {\n  let totalLiquidityETH = valueToZDBigNumber('0');\n  let totalCollateralETH = valueToZDBigNumber('0');\n  let totalBorrowsETH = valueToZDBigNumber('0');\n  let currentLtv = valueToBigNumber('0');\n  let currentLiquidationThreshold = valueToBigNumber('0');\n\n  let totalRewards = valueToBigNumber('0');\n  let totalRewardsETH = valueToBigNumber('0');\n  let totalRewardsUSD = valueToBigNumber('0');\n\n  const userReservesData = rawUserReserves\n    .map((userReserve) => {\n      const poolReserve = poolReservesData.find(\n        (reserve) => reserve.id === userReserve.reserve.id\n      );\n      if (!poolReserve) {\n        throw new Error(\n          'Reserve is not registered on platform, please contact support'\n        );\n      }\n      const computedUserReserve = computeUserReserveData(\n        poolReserve,\n        userReserve,\n        usdPriceEth,\n        currentTimestamp,\n        rewardsInfo\n      );\n\n      totalRewards = totalRewards.plus(computedUserReserve.totalRewards);\n      totalRewardsETH = totalRewardsETH.plus(\n        computedUserReserve.totalRewardsETH\n      );\n      totalRewardsUSD = totalRewardsUSD.plus(\n        computedUserReserve.totalRewardsUSD\n      );\n\n      totalLiquidityETH = totalLiquidityETH.plus(\n        computedUserReserve.underlyingBalanceETH\n      );\n      totalBorrowsETH = totalBorrowsETH\n        .plus(computedUserReserve.variableBorrowsETH)\n        .plus(computedUserReserve.stableBorrowsETH);\n\n      // asset enabled as collateral\n      if (\n        poolReserve.usageAsCollateralEnabled &&\n        userReserve.usageAsCollateralEnabledOnUser\n      ) {\n        totalCollateralETH = totalCollateralETH.plus(\n          computedUserReserve.underlyingBalanceETH\n        );\n        currentLtv = currentLtv.plus(\n          valueToBigNumber(\n            computedUserReserve.underlyingBalanceETH\n          ).multipliedBy(poolReserve.baseLTVasCollateral)\n        );\n        currentLiquidationThreshold = currentLiquidationThreshold.plus(\n          valueToBigNumber(\n            computedUserReserve.underlyingBalanceETH\n          ).multipliedBy(poolReserve.reserveLiquidationThreshold)\n        );\n      }\n      return computedUserReserve;\n    })\n    .sort((a, b) =>\n      a.reserve.symbol > b.reserve.symbol\n        ? 1\n        : a.reserve.symbol < b.reserve.symbol\n        ? -1\n        : 0\n    );\n\n  if (currentLtv.gt(0)) {\n    currentLtv = currentLtv\n      .div(totalCollateralETH)\n      .decimalPlaces(0, BigNumber.ROUND_DOWN);\n  }\n  if (currentLiquidationThreshold.gt(0)) {\n    currentLiquidationThreshold = currentLiquidationThreshold\n      .div(totalCollateralETH)\n      .decimalPlaces(0, BigNumber.ROUND_DOWN);\n  }\n\n  const healthFactor = calculateHealthFactorFromBalances(\n    totalCollateralETH,\n    totalBorrowsETH,\n    currentLiquidationThreshold\n  );\n\n  const totalCollateralUSD = totalCollateralETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toString();\n\n  const totalLiquidityUSD = totalLiquidityETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toString();\n\n  const totalBorrowsUSD = totalBorrowsETH\n    .multipliedBy(pow10(USD_DECIMALS))\n    .dividedBy(usdPriceEth)\n    .toString();\n\n  const availableBorrowsETH = calculateAvailableBorrowsETH(\n    totalCollateralETH,\n    totalBorrowsETH,\n    currentLtv\n  );\n\n  return {\n    totalLiquidityUSD,\n    totalCollateralUSD,\n    totalBorrowsUSD,\n    totalRewards: totalRewards.toString(),\n    totalRewardsETH: totalRewardsETH.toString(),\n    totalRewardsUSD: totalRewardsUSD.toString(),\n    id: userId,\n    totalLiquidityETH: totalLiquidityETH.toString(),\n    totalCollateralETH: totalCollateralETH.toString(),\n    totalBorrowsETH: totalBorrowsETH.toString(),\n    availableBorrowsETH: availableBorrowsETH.toString(),\n    currentLoanToValue: currentLtv.toString(),\n    currentLiquidationThreshold: currentLiquidationThreshold.toString(),\n    healthFactor: healthFactor.toString(),\n    reservesData: userReservesData,\n  };\n}\n\nexport function formatUserSummaryData(\n  poolReservesData: ReserveData[],\n  rawUserReserves: UserReserveData[],\n  userId: string,\n  usdPriceEth: BigNumberValue,\n  currentTimestamp: number,\n  rewardsInfo: RewardsInformation\n): UserSummaryData {\n  const userData = computeRawUserSummaryData(\n    poolReservesData,\n    rawUserReserves,\n    userId,\n    usdPriceEth,\n    currentTimestamp,\n    rewardsInfo\n  );\n  const userReservesData = userData.reservesData.map(\n    ({ reserve, ...userReserve }): ComputedUserReserve => {\n      const reserveDecimals = reserve.decimals;\n\n      const exactStableBorrowRate = rayPow(\n        valueToZDBigNumber(userReserve.stableBorrowRate)\n          .dividedBy(SECONDS_PER_YEAR)\n          .plus(RAY),\n        SECONDS_PER_YEAR\n      ).minus(RAY);\n\n      return {\n        ...userReserve,\n        reserve: {\n          ...reserve,\n          reserveLiquidationBonus: normalize(\n            valueToBigNumber(reserve.reserveLiquidationBonus).minus(\n              pow10(LTV_PRECISION)\n            ),\n            4\n          ),\n        },\n        scaledATokenBalance: normalize(\n          userReserve.scaledATokenBalance,\n          reserveDecimals\n        ),\n        stableBorrowAPR: normalize(userReserve.stableBorrowRate, RAY_DECIMALS),\n        stableBorrowAPY: normalize(exactStableBorrowRate, RAY_DECIMALS),\n        variableBorrowIndex: normalize(\n          userReserve.variableBorrowIndex,\n          RAY_DECIMALS\n        ),\n        underlyingBalance: normalize(\n          userReserve.underlyingBalance,\n          reserveDecimals\n        ),\n        underlyingBalanceETH: normalize(\n          userReserve.underlyingBalanceETH,\n          ETH_DECIMALS\n        ),\n        underlyingBalanceUSD: normalize(\n          userReserve.underlyingBalanceUSD,\n          USD_DECIMALS\n        ),\n        stableBorrows: normalize(userReserve.stableBorrows, reserveDecimals),\n        stableBorrowsETH: normalize(userReserve.stableBorrowsETH, ETH_DECIMALS),\n        stableBorrowsUSD: normalize(userReserve.stableBorrowsUSD, USD_DECIMALS),\n        variableBorrows: normalize(\n          userReserve.variableBorrows,\n          reserveDecimals\n        ),\n        variableBorrowsETH: normalize(\n          userReserve.variableBorrowsETH,\n          ETH_DECIMALS\n        ),\n        variableBorrowsUSD: normalize(\n          userReserve.variableBorrowsUSD,\n          USD_DECIMALS\n        ),\n        totalBorrows: normalize(userReserve.totalBorrows, reserveDecimals),\n        totalBorrowsETH: normalize(userReserve.totalBorrowsETH, ETH_DECIMALS),\n        totalBorrowsUSD: normalize(userReserve.totalBorrowsUSD, USD_DECIMALS),\n      };\n    }\n  );\n  return {\n    id: userData.id,\n    reservesData: userReservesData,\n    totalLiquidityETH: normalize(userData.totalLiquidityETH, ETH_DECIMALS),\n    totalLiquidityUSD: normalize(userData.totalLiquidityUSD, USD_DECIMALS),\n    totalCollateralETH: normalize(userData.totalCollateralETH, ETH_DECIMALS),\n    totalCollateralUSD: normalize(userData.totalCollateralUSD, USD_DECIMALS),\n    totalBorrowsETH: normalize(userData.totalBorrowsETH, ETH_DECIMALS),\n    totalBorrowsUSD: normalize(userData.totalBorrowsUSD, USD_DECIMALS),\n    availableBorrowsETH: normalize(userData.availableBorrowsETH, ETH_DECIMALS),\n    currentLoanToValue: normalize(userData.currentLoanToValue, 4),\n    currentLiquidationThreshold: normalize(\n      userData.currentLiquidationThreshold,\n      4\n    ),\n    healthFactor: userData.healthFactor,\n    totalRewards: userData.totalRewards,\n    totalRewardsETH: userData.totalRewardsETH,\n    totalRewardsUSD: userData.totalRewardsUSD,\n  };\n}\n\n/**\n * Calculates the formatted debt accrued to a given point in time.\n * @param reserve\n * @param currentTimestamp unix timestamp which must be higher than reserve.lastUpdateTimestamp\n */\nexport function calculateReserveDebt(\n  reserve: ReserveData,\n  currentTimestamp: number\n) {\n  const totalVariableDebt = normalize(\n    rayMul(\n      rayMul(reserve.totalScaledVariableDebt, reserve.variableBorrowIndex),\n      calculateCompoundedInterest(\n        reserve.variableBorrowRate,\n        currentTimestamp,\n        reserve.lastUpdateTimestamp\n      )\n    ),\n    reserve.decimals\n  );\n  const totalStableDebt = normalize(\n    rayMul(\n      reserve.totalPrincipalStableDebt,\n      calculateCompoundedInterest(\n        reserve.averageStableRate,\n        currentTimestamp,\n        reserve.stableDebtLastUpdateTimestamp\n      )\n    ),\n    reserve.decimals\n  );\n  return { totalVariableDebt, totalStableDebt };\n}\n\nexport function formatReserves(\n  reserves: ReserveData[],\n  currentTimestamp?: number,\n  reserveIndexes30DaysAgo?: ReserveRatesData[],\n  rewardTokenPriceEth = '0',\n  emissionEndTimestamp?: number\n): ComputedReserveData[] {\n  return reserves.map((reserve) => {\n    const reserve30DaysAgo = reserveIndexes30DaysAgo?.find(\n      (res) => res.id === reserve.id\n    )?.paramsHistory?.[0];\n\n    const availableLiquidity = normalize(\n      reserve.availableLiquidity,\n      reserve.decimals\n    );\n\n    const { totalVariableDebt, totalStableDebt } = calculateReserveDebt(\n      reserve,\n      currentTimestamp || reserve.lastUpdateTimestamp\n    );\n\n    const totalDebt = valueToBigNumber(totalStableDebt).plus(totalVariableDebt);\n\n    const totalLiquidity = totalDebt.plus(availableLiquidity).toString();\n    const utilizationRate =\n      totalLiquidity !== '0'\n        ? totalDebt.dividedBy(totalLiquidity).toString()\n        : '0';\n\n    const hasEmission =\n      emissionEndTimestamp &&\n      emissionEndTimestamp >\n        (currentTimestamp || Math.floor(Date.now() / 1000));\n\n    const aIncentivesAPY =\n      hasEmission && totalLiquidity !== '0'\n        ? calculateIncentivesAPY(\n            reserve.aEmissionPerSecond,\n            rewardTokenPriceEth,\n            totalLiquidity,\n            reserve.price.priceInEth\n          )\n        : '0';\n\n    const vIncentivesAPY =\n      hasEmission && totalVariableDebt !== '0'\n        ? calculateIncentivesAPY(\n            reserve.vEmissionPerSecond,\n            rewardTokenPriceEth,\n            totalVariableDebt,\n            reserve.price.priceInEth\n          )\n        : '0';\n\n    const sIncentivesAPY =\n      hasEmission && totalStableDebt !== '0'\n        ? calculateIncentivesAPY(\n            reserve.sEmissionPerSecond,\n            rewardTokenPriceEth,\n            totalStableDebt,\n            reserve.price.priceInEth\n          )\n        : '0';\n\n    const supplyAPY = rayPow(\n      valueToZDBigNumber(reserve.liquidityRate)\n        .dividedBy(SECONDS_PER_YEAR)\n        .plus(RAY),\n      SECONDS_PER_YEAR\n    ).minus(RAY);\n\n    const variableBorrowAPY = rayPow(\n      valueToZDBigNumber(reserve.variableBorrowRate)\n        .dividedBy(SECONDS_PER_YEAR)\n        .plus(RAY),\n      SECONDS_PER_YEAR\n    ).minus(RAY);\n\n    const stableBorrowAPY = rayPow(\n      valueToZDBigNumber(reserve.stableBorrowRate)\n        .dividedBy(SECONDS_PER_YEAR)\n        .plus(RAY),\n      SECONDS_PER_YEAR\n    ).minus(RAY);\n\n    return {\n      ...reserve,\n      totalVariableDebt,\n      totalStableDebt,\n      totalLiquidity,\n      availableLiquidity,\n      utilizationRate,\n      aIncentivesAPY,\n      vIncentivesAPY,\n      sIncentivesAPY,\n      totalDebt: totalDebt.toString(),\n      price: {\n        ...reserve.price,\n        priceInEth: normalize(reserve.price.priceInEth, ETH_DECIMALS),\n      },\n      baseLTVasCollateral: normalize(\n        reserve.baseLTVasCollateral,\n        LTV_PRECISION\n      ),\n      reserveFactor: normalize(reserve.reserveFactor, LTV_PRECISION),\n      variableBorrowAPR: normalize(reserve.variableBorrowRate, RAY_DECIMALS),\n      variableBorrowAPY: normalize(variableBorrowAPY, RAY_DECIMALS),\n      avg30DaysVariableBorrowRate: reserve30DaysAgo\n        ? calculateAverageRate(\n            reserve30DaysAgo.variableBorrowIndex,\n            reserve.variableBorrowIndex,\n            reserve30DaysAgo.timestamp,\n            reserve.lastUpdateTimestamp\n          )\n        : undefined,\n      avg30DaysLiquidityRate: reserve30DaysAgo\n        ? calculateAverageRate(\n            reserve30DaysAgo.liquidityIndex,\n            reserve.liquidityIndex,\n            reserve30DaysAgo.timestamp,\n            reserve.lastUpdateTimestamp\n          )\n        : undefined,\n\n      stableBorrowAPR: normalize(reserve.stableBorrowRate, RAY_DECIMALS),\n      stableBorrowAPY: normalize(stableBorrowAPY, RAY_DECIMALS),\n      supplyAPR: normalize(reserve.liquidityRate, RAY_DECIMALS),\n      supplyAPY: normalize(supplyAPY, RAY_DECIMALS),\n      liquidityIndex: normalize(reserve.liquidityIndex, RAY_DECIMALS),\n      reserveLiquidationThreshold: normalize(\n        reserve.reserveLiquidationThreshold,\n        4\n      ),\n      reserveLiquidationBonus: normalize(\n        valueToBigNumber(reserve.reserveLiquidationBonus).minus(\n          10 ** LTV_PRECISION\n        ),\n        4\n      ),\n      totalScaledVariableDebt: normalize(\n        reserve.totalScaledVariableDebt,\n        reserve.decimals\n      ),\n      totalPrincipalStableDebt: normalize(\n        reserve.totalPrincipalStableDebt,\n        reserve.decimals\n      ),\n      variableBorrowIndex: normalize(reserve.variableBorrowIndex, RAY_DECIMALS),\n    };\n  });\n}\n\n/**\n * Calculates the debt accrued to a given point in time.\n * @param reserve\n * @param currentTimestamp unix timestamp which must be higher than reserve.lastUpdateTimestamp\n */\nexport function calculateReserveDebtSuppliesRaw(\n  reserve: ReserveSupplyData,\n  currentTimestamp: number\n) {\n  const totalVariableDebt = rayMul(\n    rayMul(reserve.totalScaledVariableDebt, reserve.variableBorrowIndex),\n    calculateCompoundedInterest(\n      reserve.variableBorrowRate,\n      currentTimestamp,\n      reserve.lastUpdateTimestamp\n    )\n  );\n  const totalStableDebt = rayMul(\n    reserve.totalPrincipalStableDebt,\n    calculateCompoundedInterest(\n      reserve.averageStableRate,\n      currentTimestamp,\n      reserve.stableDebtLastUpdateTimestamp\n    )\n  );\n  return { totalVariableDebt, totalStableDebt };\n}\n\nexport function calculateSupplies(\n  reserve: ReserveSupplyData,\n  currentTimestamp: number\n): Supplies {\n  const {\n    totalVariableDebt,\n    totalStableDebt,\n  } = calculateReserveDebtSuppliesRaw(reserve, currentTimestamp);\n\n  const totalDebt = totalVariableDebt.plus(totalStableDebt);\n\n  const totalLiquidity = totalDebt.plus(reserve.availableLiquidity);\n  return {\n    totalVariableDebt,\n    totalStableDebt,\n    totalLiquidity,\n  };\n}\n\nexport function calculateIncentivesAPY(\n  emissionPerSecond: string,\n  rewardTokenPriceInEth: string,\n  tokenTotalSupplyNormalized: string,\n  tokenPriceInEth: string\n): string {\n  const emissionPerSecondNormalized = normalizeBN(\n    emissionPerSecond,\n    ETH_DECIMALS\n  ).multipliedBy(rewardTokenPriceInEth);\n  const emissionPerYear = emissionPerSecondNormalized.multipliedBy(\n    SECONDS_PER_YEAR\n  );\n\n  const totalSupplyNormalized = valueToBigNumber(\n    tokenTotalSupplyNormalized\n  ).multipliedBy(tokenPriceInEth);\n\n  return emissionPerYear.dividedBy(totalSupplyNormalized).toString(10);\n}\n\nexport function calculateRewards(\n  principalUserBalance: string,\n  reserveIndex: string,\n  userIndex: string,\n  precision: number,\n  rewardTokenDecimals: number,\n  reserveIndexTimestamp: number,\n  emissionPerSecond: string,\n  totalSupply: BigNumber,\n  currentTimestamp: number,\n  emissionEndTimestamp: number\n): string {\n  const actualCurrentTimestamp =\n    currentTimestamp > emissionEndTimestamp\n      ? emissionEndTimestamp\n      : currentTimestamp;\n\n  const timeDelta = actualCurrentTimestamp - reserveIndexTimestamp;\n\n  let currentReserveIndex;\n  if (\n    reserveIndexTimestamp == +currentTimestamp ||\n    reserveIndexTimestamp >= emissionEndTimestamp\n  ) {\n    currentReserveIndex = valueToZDBigNumber(reserveIndex);\n  } else {\n    currentReserveIndex = valueToZDBigNumber(emissionPerSecond)\n      .multipliedBy(timeDelta)\n      .multipliedBy(pow10(precision))\n      .dividedBy(totalSupply)\n      .plus(reserveIndex);\n  }\n\n  const reward = valueToZDBigNumber(principalUserBalance)\n    .multipliedBy(currentReserveIndex.minus(userIndex))\n    .dividedBy(pow10(precision));\n\n  return normalize(reward, rewardTokenDecimals);\n}\n","import { providers, BigNumber, BytesLike, PopulatedTransaction } from 'ethers';\n\nexport type tEthereumAddress = string;\nexport type tStringCurrencyUnits = string; // ex 2.5 eth\nexport type tStringDecimalUnits = string; // ex 2500000000000000000\nexport type ENS = string; // something.eth\n\n/** InterestRate options */\nexport enum InterestRate {\n  None = 'None',\n  Stable = 'Stable',\n  Variable = 'Variable',\n}\n\nexport enum Market {\n  Proto = 'proto',\n  AMM = 'amm',\n}\n\nexport enum Network {\n  mainnet = 'mainnet',\n  ropsten = 'ropsten',\n  kovan = 'kovan',\n  polygon = 'polygon',\n  fork = 'fork',\n  mumbai = 'mumbai',\n  polygon_fork = 'polygon_fork',\n  avalanche = 'avalanche',\n  avalanche_fork = 'avalanche_fork',\n  fuji = 'fuji', // avalanche test network\n  arbitrum_one = 'arbitrum_one',\n  arbitrum_rinkeby = 'arbitrum_rinkeby',\n}\n\nexport enum ChainId {\n  mainnet = 1,\n  ropsten = 3,\n  kovan = 42,\n  polygon = 137,\n  fork = 1337,\n  mumbai = 80001,\n  polygon_fork = 1338,\n  avalanche = 43114,\n  avalanche_fork = 1337,\n  fuji = 43113, // avalanche test network\n  arbitrum_one = 42161,\n  arbitrum_rinkeby = 421611,\n}\nexport type ConstantAddressesByNetwork = {\n  [network: string]: {\n    SYNTHETIX_PROXY_ADDRESS?: tEthereumAddress;\n  };\n};\nexport type GovernanceConfig = {\n  AAVE_GOVERNANCE_V2: tEthereumAddress;\n  AAVE_GOVERNANCE_V2_EXECUTOR_SHORT: tEthereumAddress;\n  AAVE_GOVERNANCE_V2_EXECUTOR_LONG: tEthereumAddress;\n  AAVE_GOVERNANCE_V2_HELPER: tEthereumAddress;\n};\n\nexport type IncentivesConfig = {\n  INCENTIVES_CONTROLLER: tEthereumAddress;\n  INCENTIVES_CONTROLLER_REWARD_TOKEN: tEthereumAddress;\n};\n\nexport type MigratorConfig = {\n  LEND_TO_AAVE_MIGRATOR: tEthereumAddress;\n};\n\nexport type LendingPoolMarketConfig = {\n  LENDING_POOL: tEthereumAddress;\n  WETH_GATEWAY?: tEthereumAddress;\n  FLASH_LIQUIDATION_ADAPTER?: tEthereumAddress;\n  REPAY_WITH_COLLATERAL_ADAPTER?: tEthereumAddress;\n  SWAP_COLLATERAL_ADAPTER?: tEthereumAddress;\n  FAUCET?: tEthereumAddress;\n};\n\nexport type LendingPoolConfig = {\n  [network: string]: {\n    [market: string]: LendingPoolMarketConfig;\n  };\n};\n\nexport type StakingNetworkConfig = {\n  TOKEN_STAKING: tEthereumAddress;\n  STAKING_REWARD_TOKEN: tEthereumAddress;\n  STAKING_HELPER?: tEthereumAddress;\n};\n\nexport type StakingConfig = {\n  [network: string]: { [stake: string]: StakingNetworkConfig };\n};\n\nexport type TxBuilderConfig = {\n  governance?: {\n    [network: string]: GovernanceConfig;\n  };\n  incentives?: {\n    [network: string]: IncentivesConfig;\n  };\n  migrator?: { [network: string]: MigratorConfig };\n  lendingPool?: LendingPoolConfig;\n  staking?: StakingConfig;\n};\n\nexport enum eEthereumTxType {\n  ERC20_APPROVAL = 'ERC20_APPROVAL',\n  DLP_ACTION = 'DLP_ACTION',\n  GOVERNANCE_ACTION = 'GOVERNANCE_ACTION',\n  GOV_DELEGATION_ACTION = 'GOV_DELEGATION_ACTION',\n  STAKE_ACTION = 'STAKE_ACTION',\n  MIGRATION_LEND_AAVE = 'MIGRATION_LEND_AAVE',\n  FAUCET_MINT = 'FAUCET_MINT',\n  REWARD_ACTION = 'REWARD_ACTION',\n}\n\nexport enum ProtocolAction {\n  default = 'default',\n  withdraw = 'withdraw',\n  deposit = 'deposit',\n  liquidationCall = 'liquidationCall',\n  liquidationFlash = 'liquidationFlash',\n  repay = 'repay',\n  swapCollateral = 'swapCollateral',\n  repayCollateral = 'repayCollateral',\n  withdrawETH = 'withdrawETH',\n  borrowETH = 'borrwoETH',\n}\n\nexport enum GovernanceVote {\n  Abstain = 0,\n  Yes = 1,\n  No = 2,\n}\n\nexport enum Stake {\n  aave = 'aave',\n  bpt = 'bpt',\n}\n\nexport type GasRecommendationType = {\n  [action: string]: {\n    limit: string;\n    recommended: string;\n  };\n};\n\nexport type GeneratedTx = {\n  tx: transactionType;\n  gas: {\n    price: string;\n    limit: string;\n  };\n};\n\nexport type transactionType = {\n  value?: string;\n  from?: string;\n  to?: string;\n  nonce?: number;\n  gasLimit?: BigNumber;\n  gasPrice?: BigNumber;\n  data?: string;\n  chainId?: number;\n};\n\nexport type AddressModel = {\n  ADDRESS_PROVIDER_ADDRESS: tEthereumAddress;\n  LENDINGPOOL_ADDRESS: tEthereumAddress;\n  LENDINGPOOL_CORE_ADDRESS: tEthereumAddress;\n  SYNTHETIX_PROXY_ADDRESS: tEthereumAddress;\n  GOVERNANCE_PROTO_CONTRACT: tEthereumAddress;\n  LEND_TO_AAVE_MIGRATOR: tEthereumAddress;\n  WETH_GATEWAY: tEthereumAddress;\n  FAUCET: tEthereumAddress;\n  SWAP_COLLATERAL_ADAPTER: tEthereumAddress;\n  REPAY_WITH_COLLATERAL_ADAPTER: tEthereumAddress;\n  AAVE_GOVERNANCE_V2: tEthereumAddress;\n  AAVE_GOVERNANCE_V2_EXECUTOR_SHORT: tEthereumAddress;\n  AAVE_GOVERNANCE_V2_EXECUTOR_LONG: tEthereumAddress;\n  AAVE_GOVERNANCE_V2_HELPER: tEthereumAddress;\n  FLASHLIQUIDATION: tEthereumAddress;\n  INCENTIVES_CONTROLLER: tEthereumAddress;\n  INCENTIVES_CONTROLLER_REWARD_TOKEN: tEthereumAddress;\n};\n\nexport type tCommonContractAddressBetweenMarkets = Pick<\n  AddressModel,\n  | 'SYNTHETIX_PROXY_ADDRESS'\n  | 'GOVERNANCE_PROTO_CONTRACT'\n  | 'LEND_TO_AAVE_MIGRATOR'\n  | 'WETH_GATEWAY'\n  | 'FAUCET'\n  | 'SWAP_COLLATERAL_ADAPTER'\n  | 'REPAY_WITH_COLLATERAL_ADAPTER'\n  | 'FLASHLIQUIDATION'\n  | 'INCENTIVES_CONTROLLER'\n  | 'INCENTIVES_CONTROLLER_REWARD_TOKEN'\n>;\n\nexport type tDistinctContractAddressBetweenMarkets = Pick<\n  AddressModel,\n  | 'ADDRESS_PROVIDER_ADDRESS'\n  | 'LENDINGPOOL_ADDRESS'\n  | 'LENDINGPOOL_CORE_ADDRESS'\n>;\n\nexport type tDistinctContractAddressBetweenMarketsV2 = Pick<\n  AddressModel,\n  'LENDINGPOOL_ADDRESS'\n>;\n\nexport type tDistinctGovernanceV2Addresses = Pick<\n  AddressModel,\n  | 'AAVE_GOVERNANCE_V2'\n  | 'AAVE_GOVERNANCE_V2_EXECUTOR_SHORT'\n  | 'AAVE_GOVERNANCE_V2_EXECUTOR_LONG'\n  | 'AAVE_GOVERNANCE_V2_HELPER'\n>;\n\nexport type tdistinctStakingAddressesBetweenTokens = {\n  TOKEN_STAKING_ADDRESS: tEthereumAddress;\n  STAKING_REWARD_TOKEN_ADDRESS: tEthereumAddress;\n  STAKING_HELPER_ADDRESS: tEthereumAddress;\n  canUsePermit: boolean;\n};\n\nexport type ContractAddresses = {\n  [contractName: string]: tEthereumAddress;\n};\n\nexport type Configuration = {\n  network: Network;\n  provider: providers.Provider;\n};\n\nexport type EthereumTransactionTypeExtended = {\n  txType: eEthereumTxType;\n  tx: () => Promise<transactionType>;\n  gas: GasResponse;\n};\n\nexport type TransactionGenerationMethod = {\n  rawTxMethod: () => Promise<PopulatedTransaction>;\n  from: tEthereumAddress;\n  value?: string;\n  gasSurplus?: number;\n  action?: ProtocolAction;\n};\n\nexport type TransactionGasGenerationMethod = {\n  txCallback: () => Promise<transactionType>;\n  action?: ProtocolAction;\n};\n\nexport type GasType = {\n  gasLimit: string | undefined;\n  gasPrice: string;\n};\nexport type GasResponse = (force?: boolean) => Promise<GasType | null>;\n\nexport type TokenMetadataType = {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n};\n\nexport type DefaultProviderKeys = {\n  etherscan?: string;\n  infura?: string;\n  alchemy?: string;\n};\n\nexport type GovernanceConfigType = {\n  [network: string]: tDistinctGovernanceV2Addresses;\n};\nexport type StakingConfigType = {\n  [sToken: string]: {\n    [network: string]: tdistinctStakingAddressesBetweenTokens;\n  };\n};\n\nexport type CommonConfigType = {\n  [network: string]: tCommonContractAddressBetweenMarkets;\n};\n\nexport type LendingPoolConfigType = {\n  [pool: string]: {\n    [network: string]: tDistinctContractAddressBetweenMarketsV2;\n  };\n};\n\nexport type EnabledNetworksType = {\n  staking: {\n    [sToken: string]: Network[];\n  };\n  lendingPool: {\n    [market: string]: Network[];\n  };\n  governance: Network[];\n  wethGateway: Network[];\n  faucet: Network[];\n  liquiditySwapAdapter: Network[];\n  repayWithCollateralAdapter: Network[];\n  aaveGovernanceV2: Network[];\n  ltaMigrator: Network[];\n  incentivesController: Network[];\n};\n\nexport type PermitSignature = {\n  amount: tStringCurrencyUnits;\n  deadline: string;\n  v: number;\n  r: BytesLike;\n  s: BytesLike;\n};\n\nexport type FlashLoanParams = {\n  assetToSwapToList: tEthereumAddress[]; // List of the addresses of the reserve to be swapped to and deposited\n  minAmountsToReceive: string[]; // List of min amounts to be received from the swap\n  swapAllBalance: boolean[]; // Flag indicating if all the user balance should be swapped\n  permitAmount: string[]; // List of amounts for the permit signature\n  deadline: string[]; // List of deadlines for the permit signature\n  v: number[]; // List of v param for the permit signature\n  r: BytesLike[]; // List of r param for the permit signature\n  s: BytesLike[]; // List of s param for the permit signature\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { BigNumber, constants } from 'ethers';\nimport {\n  ConstantAddressesByNetwork,\n  GasRecommendationType,\n  Network,\n  ProtocolAction,\n} from '../types';\n\nexport const DEFAULT_NULL_VALUE_ON_TX = BigNumber.from(0).toHexString();\nexport const DEFAULT_APPROVE_AMOUNT = constants.MaxUint256.toString();\nexport const MAX_UINT_AMOUNT =\n  '115792089237316195423570985008687907853269984665640564039457584007913129639935';\nexport const SUPER_BIG_ALLOWANCE_NUMBER =\n  '11579208923731619542357098500868790785326998466564056403945758400791';\nexport const API_ETH_MOCK_ADDRESS =\n  '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE';\nexport const uniswapEthAmount = '0.1';\nexport const SURPLUS = '0.05';\n\nexport const gasLimitRecommendations: GasRecommendationType = {\n  [ProtocolAction.default]: {\n    limit: '210000',\n    recommended: '210000',\n  },\n  [ProtocolAction.deposit]: {\n    limit: '300000',\n    recommended: '300000',\n  },\n  [ProtocolAction.withdraw]: {\n    limit: '230000',\n    recommended: '300000',\n  },\n  [ProtocolAction.liquidationCall]: {\n    limit: '700000',\n    recommended: '700000',\n  },\n  [ProtocolAction.liquidationFlash]: {\n    limit: '995000',\n    recommended: '995000',\n  },\n  [ProtocolAction.repay]: {\n    limit: '300000',\n    recommended: '300000',\n  },\n  [ProtocolAction.borrowETH]: {\n    limit: '450000',\n    recommended: '450000',\n  },\n  [ProtocolAction.withdrawETH]: {\n    limit: '640000',\n    recommended: '640000',\n  },\n  [ProtocolAction.swapCollateral]: {\n    limit: '1000000',\n    recommended: '1000000',\n  },\n  [ProtocolAction.repayCollateral]: {\n    limit: '700000',\n    recommended: '700000',\n  },\n};\n\nexport const cosntantAddressesByNetwork: ConstantAddressesByNetwork = {\n  [Network.mainnet]: {\n    SYNTHETIX_PROXY_ADDRESS: '0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f',\n  },\n};\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IAaveGovernanceV2 } from \"../IAaveGovernanceV2\";\n\nexport class IAaveGovernanceV2__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IAaveGovernanceV2 {\n    return new Contract(address, _abi, signerOrProvider) as IAaveGovernanceV2;\n  }\n}\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"executor\",\n        type: \"address\",\n      },\n    ],\n    name: \"ExecutorAuthorized\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"executor\",\n        type: \"address\",\n      },\n    ],\n    name: \"ExecutorUnauthorized\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newStrategy\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"initiatorChange\",\n        type: \"address\",\n      },\n    ],\n    name: \"GovernanceStrategyChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalCanceled\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"creator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"contract IExecutorWithTimelock\",\n        name: \"executor\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"string[]\",\n        name: \"signatures\",\n        type: \"string[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool[]\",\n        name: \"withDelegatecalls\",\n        type: \"bool[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"startBlock\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"endBlock\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"strategy\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"ipfsHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"ProposalCreated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"initiatorExecution\",\n        type: \"address\",\n      },\n    ],\n    name: \"ProposalExecuted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"executionTime\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"initiatorQueueing\",\n        type: \"address\",\n      },\n    ],\n    name: \"ProposalQueued\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"voter\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"support\",\n        type: \"bool\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"votingPower\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"VoteEmitted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newVotingDelay\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"initiatorChange\",\n        type: \"address\",\n      },\n    ],\n    name: \"VotingDelayChanged\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"__abdicate\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"executors\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"authorizeExecutors\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"cancel\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract IExecutorWithTimelock\",\n        name: \"executor\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"string[]\",\n        name: \"signatures\",\n        type: \"string[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"bool[]\",\n        name: \"withDelegatecalls\",\n        type: \"bool[]\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"ipfsHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"create\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"execute\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getGovernanceStrategy\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getGuardian\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getProposalById\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"id\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"creator\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IExecutorWithTimelock\",\n            name: \"executor\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"targets\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"values\",\n            type: \"uint256[]\",\n          },\n          {\n            internalType: \"string[]\",\n            name: \"signatures\",\n            type: \"string[]\",\n          },\n          {\n            internalType: \"bytes[]\",\n            name: \"calldatas\",\n            type: \"bytes[]\",\n          },\n          {\n            internalType: \"bool[]\",\n            name: \"withDelegatecalls\",\n            type: \"bool[]\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"startBlock\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"endBlock\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"executionTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"forVotes\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"againstVotes\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"executed\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"canceled\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"address\",\n            name: \"strategy\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"ipfsHash\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct IAaveGovernanceV2.ProposalWithoutVotes\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getProposalState\",\n    outputs: [\n      {\n        internalType: \"enum IAaveGovernanceV2.ProposalState\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getProposalsCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"voter\",\n        type: \"address\",\n      },\n    ],\n    name: \"getVoteOnProposal\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bool\",\n            name: \"support\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"uint248\",\n            name: \"votingPower\",\n            type: \"uint248\",\n          },\n        ],\n        internalType: \"struct IAaveGovernanceV2.Vote\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getVotingDelay\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"executor\",\n        type: \"address\",\n      },\n    ],\n    name: \"isExecutorAuthorized\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"queue\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"governanceStrategy\",\n        type: \"address\",\n      },\n    ],\n    name: \"setGovernanceStrategy\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"votingDelay\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setVotingDelay\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"support\",\n        type: \"bool\",\n      },\n    ],\n    name: \"submitVote\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"support\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"submitVoteBySignature\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"executors\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"unauthorizeExecutors\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IAaveIncentivesController } from \"../IAaveIncentivesController\";\n\nexport class IAaveIncentivesController__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IAaveIncentivesController {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IAaveIncentivesController;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"assets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n    ],\n    name: \"claimRewards\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IAaveStakingHelper } from \"../IAaveStakingHelper\";\n\nexport class IAaveStakingHelper__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IAaveStakingHelper {\n    return new Contract(address, _abi, signerOrProvider) as IAaveStakingHelper;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"stake\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IDebtTokenBase } from \"../IDebtTokenBase\";\n\nexport class IDebtTokenBase__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IDebtTokenBase {\n    return new Contract(address, _abi, signerOrProvider) as IDebtTokenBase;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approveDelegation\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"fromUser\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"toUser\",\n        type: \"address\",\n      },\n    ],\n    name: \"borrowAllowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IERC20Detailed } from \"../IERC20Detailed\";\n\nexport class IERC20Detailed__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IERC20Detailed {\n    return new Contract(address, _abi, signerOrProvider) as IERC20Detailed;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IFaucet } from \"../IFaucet\";\n\nexport class IFaucet__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IFaucet {\n    return new Contract(address, _abi, signerOrProvider) as IFaucet;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n    ],\n    name: \"getMinter\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IGovernancePowerDelegationToken } from \"../IGovernancePowerDelegationToken\";\n\nexport class IGovernancePowerDelegationToken__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IGovernancePowerDelegationToken {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IGovernancePowerDelegationToken;\n  }\n}\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"delegator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"enum IGovernancePowerDelegationToken.DelegationType\",\n        name: \"delegationType\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"DelegateChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"enum IGovernancePowerDelegationToken.DelegationType\",\n        name: \"delegationType\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"DelegatedPowerChanged\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"_nonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n    ],\n    name: \"delegate\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"nonce\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"expiry\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"delegateBySig\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n      {\n        internalType: \"enum IGovernancePowerDelegationToken.DelegationType\",\n        name: \"delegationType\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"delegateByType\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n      {\n        internalType: \"enum IGovernancePowerDelegationToken.DelegationType\",\n        name: \"delegationType\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"nonce\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"expiry\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"delegateByTypeBySig\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"enum IGovernancePowerDelegationToken.DelegationType\",\n        name: \"delegationType\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"getDelegateeByType\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum IGovernancePowerDelegationToken.DelegationType\",\n        name: \"delegationType\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"getPowerAtBlock\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"enum IGovernancePowerDelegationToken.DelegationType\",\n        name: \"delegationType\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"getPowerCurrent\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"totalSupplyAt\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IGovernanceStrategy } from \"../IGovernanceStrategy\";\n\nexport class IGovernanceStrategy__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IGovernanceStrategy {\n    return new Contract(address, _abi, signerOrProvider) as IGovernanceStrategy;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"AAVE\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"STK_AAVE\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getPropositionPowerAt\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getTotalPropositionSupplyAt\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getTotalVotingSupplyAt\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getVotingPowerAt\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IGovernanceV2Helper } from \"../IGovernanceV2Helper\";\n\nexport class IGovernanceV2Helper__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IGovernanceV2Helper {\n    return new Contract(address, _abi, signerOrProvider) as IGovernanceV2Helper;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"contract IAaveGovernanceV2\",\n        name: \"governance\",\n        type: \"address\",\n      },\n    ],\n    name: \"getProposal\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"totalVotingSupply\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"minimumQuorum\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"minimumDiff\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"executionTimeWithGracePeriod\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"proposalCreated\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"id\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"creator\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IExecutorWithTimelock\",\n            name: \"executor\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"targets\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"values\",\n            type: \"uint256[]\",\n          },\n          {\n            internalType: \"string[]\",\n            name: \"signatures\",\n            type: \"string[]\",\n          },\n          {\n            internalType: \"bytes[]\",\n            name: \"calldatas\",\n            type: \"bytes[]\",\n          },\n          {\n            internalType: \"bool[]\",\n            name: \"withDelegatecalls\",\n            type: \"bool[]\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"startBlock\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"endBlock\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"executionTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"forVotes\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"againstVotes\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"executed\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"canceled\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"address\",\n            name: \"strategy\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"ipfsHash\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"enum IAaveGovernanceV2.ProposalState\",\n            name: \"proposalState\",\n            type: \"uint8\",\n          },\n        ],\n        internalType: \"struct IGovernanceV2Helper.ProposalStats\",\n        name: \"proposalStats\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"skip\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"limit\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"contract IAaveGovernanceV2\",\n        name: \"governance\",\n        type: \"address\",\n      },\n    ],\n    name: \"getProposals\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"totalVotingSupply\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"minimumQuorum\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"minimumDiff\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"executionTimeWithGracePeriod\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"proposalCreated\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"id\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"creator\",\n            type: \"address\",\n          },\n          {\n            internalType: \"contract IExecutorWithTimelock\",\n            name: \"executor\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"targets\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"uint256[]\",\n            name: \"values\",\n            type: \"uint256[]\",\n          },\n          {\n            internalType: \"string[]\",\n            name: \"signatures\",\n            type: \"string[]\",\n          },\n          {\n            internalType: \"bytes[]\",\n            name: \"calldatas\",\n            type: \"bytes[]\",\n          },\n          {\n            internalType: \"bool[]\",\n            name: \"withDelegatecalls\",\n            type: \"bool[]\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"startBlock\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"endBlock\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"executionTime\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"forVotes\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"againstVotes\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"executed\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"canceled\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"address\",\n            name: \"strategy\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"ipfsHash\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"enum IAaveGovernanceV2.ProposalState\",\n            name: \"proposalState\",\n            type: \"uint8\",\n          },\n        ],\n        internalType: \"struct IGovernanceV2Helper.ProposalStats[]\",\n        name: \"proposalsStats\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"tokens\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"getTokensPower\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"votingPower\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"delegatedAddressVotingPower\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"propositionPower\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"delegatedAddressPropositionPower\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct IGovernanceV2Helper.Power[]\",\n        name: \"power\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { ILendingPool } from \"../ILendingPool\";\n\nexport class ILendingPool__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ILendingPool {\n    return new Contract(address, _abi, signerOrProvider) as ILendingPool;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"FLASHLOAN_PREMIUM_TOTAL\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"reserve\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"interestRateMode\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"referralCode\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"address\",\n        name: \"onBehalfOf\",\n        type: \"address\",\n      },\n    ],\n    name: \"borrow\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"reserve\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"onBehalfOf\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"referralCode\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"deposit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"receiver\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"assets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"modes\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"onBehalfOf\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"params\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"referralCode\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"flashLoan\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"collateral\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"reserve\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"purchaseAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"receiveAToken\",\n        type: \"bool\",\n      },\n    ],\n    name: \"liquidationCall\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"reserve\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"rateMode\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"onBehalfOf\",\n        type: \"address\",\n      },\n    ],\n    name: \"repay\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"reserve\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"useAsCollateral\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setUserUseReserveAsCollateral\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"reserve\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"rateMode\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"swapBorrowRateMode\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"reserve\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n    ],\n    name: \"withdraw\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { ILendToAaveMigrator } from \"../ILendToAaveMigrator\";\n\nexport class ILendToAaveMigrator__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ILendToAaveMigrator {\n    return new Contract(address, _abi, signerOrProvider) as ILendToAaveMigrator;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"LEND\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"migrateFromLEND\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IMinter } from \"../IMinter\";\n\nexport class IMinter__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IMinter {\n    return new Contract(address, _abi, signerOrProvider) as IMinter;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"isEthRequired\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IRepayWithCollateral } from \"../IRepayWithCollateral\";\n\nexport class IRepayWithCollateral__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IRepayWithCollateral {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IRepayWithCollateral;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"collateralAsset\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"debtAsset\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"collateralAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"debtRepayAmount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"debtRateMode\",\n        type: \"uint256\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"deadline\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"v\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"r\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"s\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct IRepayWithCollateral.PermitSignature\",\n        name: \"permitSignature\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"useEthPath\",\n        type: \"bool\",\n      },\n    ],\n    name: \"swapAndRepay\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IStakedToken } from \"../IStakedToken\";\n\nexport class IStakedToken__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IStakedToken {\n    return new Contract(address, _abi, signerOrProvider) as IStakedToken;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"REWARD_TOKEN\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"STAKED_TOKEN\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"claimRewards\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"cooldown\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"redeem\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"onBehalfOf\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"stake\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IParaSwapLiquiditySwapAdapter } from \"../IParaSwapLiquiditySwapAdapter\";\n\nexport class IParaSwapLiquiditySwapAdapter__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IParaSwapLiquiditySwapAdapter {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IParaSwapLiquiditySwapAdapter;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"assetToSwapFrom\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"assetToSwapTo\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountToSwap\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"minAmountToReceive\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"swapAllBalanceOffset\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"swapCalldata\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"address\",\n        name: \"augustus\",\n        type: \"address\",\n      },\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"deadline\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"v\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"r\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"s\",\n            type: \"bytes32\",\n          },\n        ],\n        internalType: \"struct IParaSwapLiquiditySwapAdapter.PermitSignature\",\n        name: \"permitParams\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"swapAndDeposit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { ISynthetix } from \"../ISynthetix\";\n\nexport class ISynthetix__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ISynthetix {\n    return new Contract(address, _abi, signerOrProvider) as ISynthetix;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferableSynthetix\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"transferable\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { IWETHGateway } from \"../IWETHGateway\";\n\nexport class IWETHGateway__factory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IWETHGateway {\n    return new Contract(address, _abi, signerOrProvider) as IWETHGateway;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"lendingPool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"interesRateMode\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"referralCode\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"borrowETH\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"lendingPool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"onBehalfOf\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"referralCode\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"depositETH\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"lendingPool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"rateMode\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"onBehalfOf\",\n        type: \"address\",\n      },\n    ],\n    name: \"repayETH\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"lendingPool\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"onBehalfOf\",\n        type: \"address\",\n      },\n    ],\n    name: \"withdrawETH\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","import BigNumber from 'bignumber.js';\nimport {\n  API_ETH_MOCK_ADDRESS,\n  DEFAULT_NULL_VALUE_ON_TX,\n  uniswapEthAmount,\n} from '../config';\nimport { tStringDecimalUnits } from '../types';\n\nexport const parseNumber = (value: string, decimals: number): string => {\n  return new BigNumber(value)\n    .multipliedBy(new BigNumber(10).pow(decimals))\n    .toFixed(0);\n};\n\nexport const decimalsToCurrencyUnits = (\n  value: string,\n  decimals: number\n): string =>\n  new BigNumber(value).div(new BigNumber(10).pow(decimals)).toFixed();\n\nexport const getTxValue = (reserve: string, amount: string): string => {\n  return reserve.toLowerCase() === API_ETH_MOCK_ADDRESS.toLowerCase()\n    ? amount\n    : DEFAULT_NULL_VALUE_ON_TX;\n};\n\nexport const mintAmountsPerToken: { [token: string]: tStringDecimalUnits } = {\n  AAVE: parseNumber('100', 18),\n  BAT: parseNumber('100000', 18),\n  BUSD: parseNumber('10000', 18),\n  DAI: parseNumber('10000', 18),\n  ENJ: parseNumber('100000', 18),\n  KNC: parseNumber('10000', 18),\n  LEND: parseNumber('1000', 18), // Not available on v2, but to support v1 faucet\n  LINK: parseNumber('1000', 18),\n  MANA: parseNumber('100000', 18),\n  MKR: parseNumber('10', 18),\n  WETH: parseNumber('10', 18),\n  REN: parseNumber('10000', 18),\n  REP: parseNumber('1000', 18),\n  SNX: parseNumber('100', 18),\n  SUSD: parseNumber('10000', 18),\n  TUSD: '0', // The TusdMinter contract already mints the maximum\n  UNI: parseNumber('1000', 18),\n  USDC: parseNumber('10000', 6),\n  USDT: parseNumber('10000', 6),\n  WBTC: parseNumber('1', 8),\n  YFI: parseNumber('1', 18),\n  ZRX: parseNumber('100000', 18),\n  UNIUSDC: parseNumber(uniswapEthAmount, 6),\n  UNIDAI: parseNumber(uniswapEthAmount, 18),\n  UNIUSDT: parseNumber(uniswapEthAmount, 6),\n  UNIDAIETH: parseNumber(uniswapEthAmount, 18),\n  UNIUSDCETH: parseNumber(uniswapEthAmount, 18),\n  UNISETHETH: parseNumber(uniswapEthAmount, 18),\n  UNILENDETH: parseNumber(uniswapEthAmount, 18),\n  UNILINKETH: parseNumber(uniswapEthAmount, 18),\n  UNIMKRETH: parseNumber(uniswapEthAmount, 18),\n};\n\nexport const canBeEnsAddress = (ensAddress: string): boolean => {\n  return ensAddress.toLowerCase().endsWith('.eth');\n};\n","/* eslint-disable prefer-rest-params */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport 'reflect-metadata';\n\nexport const isEthAddressMetadataKey = Symbol('ethAddress');\nexport const isEthAddressArrayMetadataKey = Symbol('ethAddressArray');\nexport const isEthAddressOrENSMetadataKey = Symbol('ethOrENSAddress');\nexport const isPositiveMetadataKey = Symbol('isPositive');\nexport const isPositiveOrMinusOneMetadataKey = Symbol('isPositiveOrMinusOne');\nexport const is0OrPositiveMetadataKey = Symbol('is0OrPositiveMetadataKey');\nexport const optionalMetadataKey = Symbol('Optional');\n\nexport type paramsType = {\n  index: number;\n  field: string | undefined;\n};\n\n// tslint:disable-next-line: function-name\nexport function IsEthAddress(field?: string) {\n  return function (\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    target: any,\n    propertyKey: string | symbol,\n    parameterIndex: number\n  ): void {\n    const existingPossibleAddresses: paramsType[] =\n      Reflect.getOwnMetadata(isEthAddressMetadataKey, target, propertyKey) ||\n      [];\n\n    existingPossibleAddresses.push({\n      index: parameterIndex,\n      field,\n    });\n\n    Reflect.defineMetadata(\n      isEthAddressMetadataKey,\n      existingPossibleAddresses,\n      target,\n      propertyKey\n    );\n  };\n}\n\n// tslint:disable-next-line: function-name\nexport function IsEthAddressArray(field?: string) {\n  return function (\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    target: any,\n    propertyKey: string | symbol,\n    parameterIndex: number\n  ): void {\n    const existingPossibleAddresses: paramsType[] =\n      Reflect.getOwnMetadata(isEthAddressMetadataKey, target, propertyKey) ||\n      [];\n\n    existingPossibleAddresses.push({\n      index: parameterIndex,\n      field,\n    });\n\n    Reflect.defineMetadata(\n      isEthAddressArrayMetadataKey,\n      existingPossibleAddresses,\n      target,\n      propertyKey\n    );\n  };\n}\n\nexport function IsEthAddressOrENS(field?: string) {\n  return function (\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    target: any,\n    propertyKey: string | symbol,\n    parameterIndex: number\n  ): void {\n    const existingPossibleAddresses: paramsType[] =\n      Reflect.getOwnMetadata(\n        isEthAddressOrENSMetadataKey,\n        target,\n        propertyKey\n      ) || [];\n\n    existingPossibleAddresses.push({\n      index: parameterIndex,\n      field,\n    });\n\n    Reflect.defineMetadata(\n      isEthAddressOrENSMetadataKey,\n      existingPossibleAddresses,\n      target,\n      propertyKey\n    );\n  };\n}\n\nexport function IsPositiveAmount(field?: string) {\n  return function (\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    target: any,\n    propertyKey: string | symbol,\n    parameterIndex: number\n  ): void {\n    const params: paramsType[] =\n      Reflect.getOwnMetadata(isPositiveMetadataKey, target, propertyKey) || [];\n\n    params.push({ index: parameterIndex, field });\n\n    Reflect.defineMetadata(isPositiveMetadataKey, params, target, propertyKey);\n  };\n}\n\nexport function Is0OrPositiveAmount(field?: string) {\n  return function (\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    target: any,\n    propertyKey: string | symbol,\n    parameterIndex: number\n  ): void {\n    const params: paramsType[] =\n      Reflect.getOwnMetadata(is0OrPositiveMetadataKey, target, propertyKey) ||\n      [];\n\n    params.push({ index: parameterIndex, field });\n\n    Reflect.defineMetadata(\n      is0OrPositiveMetadataKey,\n      params,\n      target,\n      propertyKey\n    );\n  };\n}\n\nexport function IsPositiveOrMinusOneAmount(field?: string) {\n  return function (\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    target: any,\n    propertyKey: string | symbol,\n    parameterIndex: number\n  ): void {\n    const params: paramsType[] =\n      Reflect.getOwnMetadata(\n        isPositiveOrMinusOneMetadataKey,\n        target,\n        propertyKey\n      ) || [];\n\n    params.push({ index: parameterIndex, field });\n\n    Reflect.defineMetadata(\n      isPositiveOrMinusOneMetadataKey,\n      params,\n      target,\n      propertyKey\n    );\n  };\n}\n\nexport function Optional(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyKey: string | symbol,\n  parameterIndex: number\n): void {\n  const existingOptionalParameters =\n    Reflect.getOwnMetadata(optionalMetadataKey, target, propertyKey) || [];\n  existingOptionalParameters.push(parameterIndex);\n  Reflect.defineMetadata(\n    optionalMetadataKey,\n    existingOptionalParameters,\n    target,\n    propertyKey\n  );\n}\n","/* eslint-disable prefer-rest-params */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { utils } from 'ethers';\nimport { canBeEnsAddress } from '../utils/parsings';\n// import 'reflect-metadata';\nimport {\n  is0OrPositiveMetadataKey,\n  isEthAddressArrayMetadataKey,\n  isEthAddressMetadataKey,\n  isEthAddressOrENSMetadataKey,\n  isPositiveMetadataKey,\n  isPositiveOrMinusOneMetadataKey,\n  optionalMetadataKey,\n  paramsType,\n} from './paramValidators';\n\nexport function optionalValidator(\n  target: any,\n  propertyName: string,\n  methodArguments: any\n): boolean[] {\n  const optionalParameters = Reflect.getOwnMetadata(\n    optionalMetadataKey,\n    target,\n    propertyName\n  );\n\n  const isParamOptional: boolean[] = [];\n  if (optionalParameters) {\n    optionalParameters.forEach((parameterIndex: number) => {\n      if (methodArguments[parameterIndex] == null) {\n        isParamOptional[parameterIndex] = true;\n      }\n    });\n  }\n  return isParamOptional;\n}\n\nexport function isEthAddressValidator(\n  target: any,\n  propertyName: string,\n  methodArguments: any,\n  isParamOptional?: boolean[]\n): void {\n  const addressParameters: paramsType[] = Reflect.getOwnMetadata(\n    isEthAddressMetadataKey,\n    target,\n    propertyName\n  );\n\n  if (addressParameters) {\n    addressParameters.forEach((storedParams) => {\n      if (storedParams.field) {\n        if (\n          methodArguments[0][storedParams.field] &&\n          !utils.isAddress(methodArguments[0][storedParams.field])\n        ) {\n          throw new Error(\n            `Address: ${\n              methodArguments[0][storedParams.field]\n            } is not a valid ethereum Address`\n          );\n        }\n      } else {\n        const isOptional =\n          isParamOptional && isParamOptional[storedParams.index];\n        if (\n          methodArguments[storedParams.index] &&\n          !isOptional &&\n          !utils.isAddress(methodArguments[storedParams.index])\n        ) {\n          throw new Error(\n            `Address: ${\n              methodArguments[storedParams.index]\n            } is not a valid ethereum Address`\n          );\n        }\n      }\n    });\n  }\n}\n\nexport function isEthAddressArrayValidator(\n  target: any,\n  propertyName: string,\n  methodArguments: any,\n  isParamOptional?: boolean[]\n): void {\n  const addressParameters: paramsType[] = Reflect.getOwnMetadata(\n    isEthAddressArrayMetadataKey,\n    target,\n    propertyName\n  );\n\n  if (addressParameters) {\n    addressParameters.forEach((storedParams) => {\n      if (storedParams.field) {\n        if (\n          methodArguments[0][storedParams.field]\n          // !utils.isAddress(methodArguments[0][storedParams.field])\n        ) {\n          if (methodArguments[0][storedParams.field].length > 0) {\n            const fieldArray = methodArguments[0][storedParams.field].split(\n              ','\n            );\n            fieldArray.forEach((address: string) => {\n              if (!utils.isAddress(address)) {\n                throw new Error(\n                  `Address: ${address} is not a valid ethereum Address`\n                );\n              }\n            });\n          }\n        }\n      } else {\n        const isOptional =\n          isParamOptional && isParamOptional[storedParams.index];\n        if (\n          methodArguments[storedParams.index] &&\n          !isOptional\n          // !utils.isAddress(methodArguments[storedParams.index])\n        ) {\n          if (methodArguments[storedParams.index].length > 0) {\n            const fieldArray = methodArguments[storedParams.index].split(',');\n            fieldArray.forEach((address: string) => {\n              if (!utils.isAddress(address)) {\n                throw new Error(\n                  `Address: ${address} is not a valid ethereum Address`\n                );\n              }\n            });\n          }\n        }\n      }\n    });\n  }\n}\n\nexport function isEthAddressOrEnsValidator(\n  target: any,\n  propertyName: string,\n  methodArguments: any,\n  isParamOptional?: boolean[]\n): void {\n  const addressParameters: paramsType[] = Reflect.getOwnMetadata(\n    isEthAddressOrENSMetadataKey,\n    target,\n    propertyName\n  );\n\n  if (addressParameters) {\n    addressParameters.forEach((storedParams) => {\n      if (storedParams.field) {\n        if (\n          methodArguments[0][storedParams.field] &&\n          !utils.isAddress(methodArguments[0][storedParams.field])\n        ) {\n          if (!canBeEnsAddress(methodArguments[0][storedParams.field])) {\n            throw new Error(\n              `Address ${\n                methodArguments[0][storedParams.field]\n              } is not valid ENS format or a valid ethereum Address`\n            );\n          }\n        }\n      } else {\n        const isOptional =\n          isParamOptional && isParamOptional[storedParams.index];\n        if (\n          methodArguments[storedParams.index] &&\n          !isOptional &&\n          !utils.isAddress(methodArguments[storedParams.index])\n        ) {\n          if (!canBeEnsAddress(methodArguments[storedParams.index])) {\n            throw new Error(\n              `Address ${\n                methodArguments[storedParams.index]\n              } is not valid ENS format or a valid ethereum Address`\n            );\n          }\n        }\n      }\n    });\n  }\n}\n\nexport function amountGtThan0Validator(\n  target: any,\n  propertyName: string,\n  methodArguments: any,\n  isParamOptional?: boolean[]\n): void {\n  const amountParameters: paramsType[] = Reflect.getOwnMetadata(\n    isPositiveMetadataKey,\n    target,\n    propertyName\n  );\n\n  if (amountParameters) {\n    amountParameters.forEach((storedParams) => {\n      if (storedParams.field) {\n        if (\n          methodArguments[0][storedParams.field] &&\n          !(Number(methodArguments[0][storedParams.field]) > 0)\n        ) {\n          throw new Error(\n            `Amount: ${\n              methodArguments[0][storedParams.field]\n            } needs to be greater than 0`\n          );\n        }\n      } else {\n        const isOptional =\n          isParamOptional && isParamOptional[storedParams.index];\n        if (!isOptional && !(Number(methodArguments[storedParams.index]) > 0)) {\n          throw new Error(\n            `Amount: ${\n              methodArguments[storedParams.index]\n            } needs to be greater than 0`\n          );\n        }\n      }\n    });\n  }\n}\n\nexport function amount0OrPositiveValidator(\n  target: any,\n  propertyName: string,\n  methodArguments: any,\n  isParamOptional?: boolean[]\n): void {\n  const amountParameters: paramsType[] = Reflect.getOwnMetadata(\n    is0OrPositiveMetadataKey,\n    target,\n    propertyName\n  );\n\n  if (amountParameters) {\n    amountParameters.forEach((storedParams) => {\n      if (storedParams.field) {\n        if (\n          methodArguments[0][storedParams.field] &&\n          !(Number(methodArguments[0][storedParams.field]) >= 0)\n        ) {\n          throw new Error(\n            `Amount: ${\n              methodArguments[0][storedParams.field]\n            } needs to be greater than 0`\n          );\n        }\n      } else {\n        const isOptional =\n          isParamOptional && isParamOptional[storedParams.index];\n        if (\n          !isOptional &&\n          !(Number(methodArguments[storedParams.index]) >= 0)\n        ) {\n          throw new Error(\n            `Amount: ${\n              methodArguments[storedParams.index]\n            } needs to be greater than 0`\n          );\n        }\n      }\n    });\n  }\n}\n\nexport function amountGtThan0OrMinus1(\n  target: any,\n  propertyName: string,\n  methodArguments: any,\n  isParamOptional?: boolean[]\n): void {\n  const amountMinusOneParameters: paramsType[] = Reflect.getOwnMetadata(\n    isPositiveOrMinusOneMetadataKey,\n    target,\n    propertyName\n  );\n\n  if (amountMinusOneParameters) {\n    amountMinusOneParameters.forEach((storedParams) => {\n      if (storedParams.field) {\n        if (\n          methodArguments[0][storedParams.field] &&\n          !(\n            Number(methodArguments[0][storedParams.field]) > 0 ||\n            methodArguments[0][storedParams.field] === '-1'\n          )\n        ) {\n          throw new Error(\n            `Amount: ${\n              methodArguments[0][storedParams.field]\n            } needs to be greater than 0 or -1`\n          );\n        }\n      } else {\n        const isOptional =\n          isParamOptional && isParamOptional[storedParams.index];\n        if (\n          !isOptional &&\n          !(\n            Number(methodArguments[storedParams.index]) > 0 ||\n            methodArguments[storedParams.index] === '-1'\n          )\n        ) {\n          throw new Error(\n            `Amount: ${\n              methodArguments[storedParams.index]\n            } needs to be greater than 0 or -1`\n          );\n        }\n      }\n    });\n  }\n}\n","/* eslint-disable prefer-rest-params */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  amount0OrPositiveValidator,\n  amountGtThan0OrMinus1,\n  amountGtThan0Validator,\n  isEthAddressOrEnsValidator,\n  isEthAddressValidator,\n  optionalValidator,\n} from './validations';\nimport { utils } from 'ethers';\n\nexport function LPFlashLiquidationValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    const { LENDING_POOL, FLASH_LIQUIDATION_ADAPTER } =\n      this.lendingPoolConfig || {};\n\n    if (\n      !utils.isAddress(LENDING_POOL) ||\n      !FLASH_LIQUIDATION_ADAPTER ||\n      !utils.isAddress(FLASH_LIQUIDATION_ADAPTER)\n    ) {\n      console.error(\n        `[LPFlahsLiquidationValidator] You need to pass valid addresses`\n      );\n      return [];\n    }\n\n    isEthAddressValidator(target, propertyName, arguments);\n\n    amountGtThan0Validator(target, propertyName, arguments);\n\n    amountGtThan0OrMinus1(target, propertyName, arguments);\n\n    return method?.apply(this, arguments);\n  };\n}\n\nexport function LPRepayWithCollateralValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    const { LENDING_POOL, REPAY_WITH_COLLATERAL_ADAPTER } =\n      this.lendingPoolConfig || {};\n\n    if (\n      !utils.isAddress(LENDING_POOL) ||\n      !REPAY_WITH_COLLATERAL_ADAPTER ||\n      !utils.isAddress(REPAY_WITH_COLLATERAL_ADAPTER)\n    ) {\n      console.error(\n        `[LPRepayWithCollateralValidator] You need to pass valid addresses`\n      );\n      return [];\n    }\n\n    isEthAddressValidator(target, propertyName, arguments);\n\n    amountGtThan0Validator(target, propertyName, arguments);\n\n    amountGtThan0OrMinus1(target, propertyName, arguments);\n\n    return method?.apply(this, arguments);\n  };\n}\n\nexport function LPSwapCollateralValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    const { LENDING_POOL, SWAP_COLLATERAL_ADAPTER } =\n      this.lendingPoolConfig || {};\n\n    if (\n      !utils.isAddress(LENDING_POOL) ||\n      !SWAP_COLLATERAL_ADAPTER ||\n      !utils.isAddress(SWAP_COLLATERAL_ADAPTER)\n    ) {\n      console.error(\n        `[LPSwapCollateralValidator] You need to pass valid addresses`\n      );\n      return [];\n    }\n\n    isEthAddressValidator(target, propertyName, arguments);\n\n    amountGtThan0Validator(target, propertyName, arguments);\n\n    amountGtThan0OrMinus1(target, propertyName, arguments);\n\n    return method?.apply(this, arguments);\n  };\n}\n\nexport function LPValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    const { LENDING_POOL } = this.lendingPoolConfig || {};\n\n    if (!utils.isAddress(LENDING_POOL)) {\n      console.error(`[LendingPoolValidator] You need to pass valid addresses`);\n      return [];\n    }\n\n    isEthAddressValidator(target, propertyName, arguments);\n\n    amountGtThan0Validator(target, propertyName, arguments);\n\n    amountGtThan0OrMinus1(target, propertyName, arguments);\n\n    return method?.apply(this, arguments);\n  };\n}\n\nexport function LTAMigratorValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    const LEND_TO_AAVE_MIGRATOR =\n      this.migratorConfig?.LEND_TO_AAVE_MIGRATOR || '';\n\n    if (!utils.isAddress(LEND_TO_AAVE_MIGRATOR)) {\n      console.error(`[MigratorValidator] You need to pass valid addresses`);\n      return [];\n    }\n\n    isEthAddressValidator(target, propertyName, arguments);\n\n    amountGtThan0Validator(target, propertyName, arguments);\n\n    return method?.apply(this, arguments);\n  };\n}\n\nexport function IncentivesValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    const { INCENTIVES_CONTROLLER, INCENTIVES_CONTROLLER_REWARD_TOKEN } =\n      this.incentivesConfig || {};\n\n    if (\n      !utils.isAddress(INCENTIVES_CONTROLLER_REWARD_TOKEN) ||\n      !utils.isAddress(INCENTIVES_CONTROLLER)\n    ) {\n      console.error(`[IncentivesValidator] You need to pass valid addresses`);\n      return [];\n    }\n\n    isEthAddressValidator(target, propertyName, arguments);\n\n    // isEthAddressArrayValidator(target, propertyName, arguments);\n\n    return method?.apply(this, arguments);\n  };\n}\n\nexport function LiquiditySwapValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    const SWAP_COLLATERAL_ADAPTER =\n      this.swapCollateralConfig.SWAP_COLLATERAL_ADAPTER || '';\n\n    if (!utils.isAddress(SWAP_COLLATERAL_ADAPTER)) {\n      console.error(\n        `[LiquiditySwapValidator] You need to pass valid addresses`\n      );\n      return [];\n    }\n\n    isEthAddressValidator(target, propertyName, arguments);\n\n    amountGtThan0Validator(target, propertyName, arguments);\n\n    amountGtThan0OrMinus1(target, propertyName, arguments);\n\n    return method?.apply(this, arguments);\n  };\n}\n\nexport function RepayWithCollateralValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    const REPAY_WITH_COLLATERAL_ADAPTER =\n      this.repayWithCollateralConfig?.REPAY_WITH_COLLATERAL_ADAPTER || '';\n\n    if (!utils.isAddress(REPAY_WITH_COLLATERAL_ADAPTER)) {\n      console.error(\n        `[RepayWithCollateralValidator] You need to pass valid addresses`\n      );\n      return [];\n    }\n\n    isEthAddressValidator(target, propertyName, arguments);\n\n    amountGtThan0Validator(target, propertyName, arguments);\n\n    amountGtThan0OrMinus1(target, propertyName, arguments);\n\n    return method?.apply(this, arguments);\n  };\n}\n\nexport function StakingValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    // No need to check if addresses exist for network\n    // because this is checked at initialization and type checking of config\n\n    const { TOKEN_STAKING, STAKING_REWARD_TOKEN } = this.stakingConfig || {};\n\n    // Check if addresses are valid.\n    if (\n      !utils.isAddress(TOKEN_STAKING) ||\n      !utils.isAddress(STAKING_REWARD_TOKEN)\n    ) {\n      console.error(`[StakingValidator] You need to pass valid addresses`);\n      return [];\n    }\n\n    const isParamOptional = optionalValidator(target, propertyName, arguments);\n\n    isEthAddressValidator(target, propertyName, arguments, isParamOptional);\n\n    amountGtThan0Validator(target, propertyName, arguments, isParamOptional);\n\n    return method?.apply(this, arguments);\n  };\n}\n\nexport function SignStakingValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    // No need to check if addresses exist for network\n    // because this is checked at initialization and type checking of config\n\n    const { TOKEN_STAKING, STAKING_REWARD_TOKEN, STAKING_HELPER } =\n      this.stakingConfig || {};\n\n    // Check if addresses are valid.\n    if (\n      !utils.isAddress(TOKEN_STAKING) ||\n      !utils.isAddress(STAKING_REWARD_TOKEN) ||\n      !STAKING_HELPER ||\n      !utils.isAddress(TOKEN_STAKING)\n    ) {\n      console.error(`[StakingValidator] You need to pass valid addresses`);\n      return [];\n    }\n\n    const isParamOptional = optionalValidator(target, propertyName, arguments);\n\n    isEthAddressValidator(target, propertyName, arguments, isParamOptional);\n\n    amountGtThan0Validator(target, propertyName, arguments, isParamOptional);\n\n    return method?.apply(this, arguments);\n  };\n}\n\nexport function FaucetValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    const FAUCET = this.faucetConfig?.FAUCET;\n\n    if (!FAUCET || (FAUCET && !utils.isAddress(FAUCET))) {\n      console.error(`[FaucetValidator] You need to pass valid addresses`);\n      return [];\n    }\n\n    const isParamOptional = optionalValidator(target, propertyName, arguments);\n\n    isEthAddressValidator(target, propertyName, arguments, isParamOptional);\n\n    amountGtThan0Validator(target, propertyName, arguments, isParamOptional);\n\n    return method?.apply(this, arguments);\n  };\n}\n\nexport function WETHValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    const WETH_GATEWAY = this.wethGatewayConfig?.WETH_GATEWAY || '';\n\n    if (!utils.isAddress(WETH_GATEWAY)) {\n      console.error(`[WethGatewayValidator] You need to pass valid addresses`);\n      return [];\n    }\n\n    isEthAddressValidator(target, propertyName, arguments);\n\n    amountGtThan0Validator(target, propertyName, arguments);\n\n    amountGtThan0OrMinus1(target, propertyName, arguments);\n\n    return method?.apply(this, arguments);\n  };\n}\n\nexport function GovValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    const {\n      AAVE_GOVERNANCE_V2,\n      AAVE_GOVERNANCE_V2_HELPER,\n      AAVE_GOVERNANCE_V2_EXECUTOR_SHORT,\n      AAVE_GOVERNANCE_V2_EXECUTOR_LONG,\n    } = this.governanceConfig || {};\n\n    if (\n      !utils.isAddress(AAVE_GOVERNANCE_V2) ||\n      !utils.isAddress(AAVE_GOVERNANCE_V2_HELPER) ||\n      !utils.isAddress(AAVE_GOVERNANCE_V2_EXECUTOR_SHORT) ||\n      !utils.isAddress(AAVE_GOVERNANCE_V2_EXECUTOR_LONG)\n    ) {\n      console.error(`[GovernanceValidator] You need to pass valid addresses`);\n      return [];\n    }\n\n    isEthAddressValidator(target, propertyName, arguments);\n\n    amount0OrPositiveValidator(target, propertyName, arguments);\n\n    return method?.apply(this, arguments);\n  };\n}\n\nexport function GovDelegationValidator(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  target: any,\n  propertyName: string,\n  descriptor: TypedPropertyDescriptor<any>\n): any {\n  const method = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function () {\n    isEthAddressValidator(target, propertyName, arguments);\n    isEthAddressOrEnsValidator(target, propertyName, arguments);\n    amountGtThan0Validator(target, propertyName, arguments);\n    amount0OrPositiveValidator(target, propertyName, arguments);\n\n    return method?.apply(this, arguments);\n  };\n}\n","import { BigNumber } from 'ethers';\nimport { transactionType, Configuration, Network } from '../types';\n\nconst DEFAULT_SURPLUS = 30; // 30%\n// polygon gas estimation is very off for some reason\nconst POLYGON_SURPLUS = 60; // 60%\n\nexport const estimateGas = async (\n  tx: transactionType,\n  config: Configuration,\n  gasSurplus?: number\n): Promise<BigNumber> => {\n  const estimatedGas = await config.provider.estimateGas(tx);\n  return estimatedGas.add(\n    estimatedGas.mul(gasSurplus || DEFAULT_SURPLUS).div(100)\n  );\n};\n\nexport const estimateGasByNetwork = async (\n  tx: transactionType,\n  config: Configuration,\n  gasSurplus?: number\n): Promise<BigNumber> => {\n  const estimatedGas = await config.provider.estimateGas(tx);\n\n  const { network } = config;\n  if (network === Network.polygon) {\n    return estimatedGas.add(estimatedGas.mul(POLYGON_SURPLUS).div(100));\n  }\n\n  return estimatedGas.add(\n    estimatedGas.mul(gasSurplus || DEFAULT_SURPLUS).div(100)\n  );\n};\n\nexport const getGasPrice = async (\n  config: Configuration\n): Promise<BigNumber> => {\n  const gasPrice = await config.provider.getGasPrice();\n  return gasPrice;\n};\n","import { BigNumber, Contract, PopulatedTransaction } from 'ethers';\nimport {\n  Configuration,\n  tEthereumAddress,\n  TransactionGenerationMethod,\n  transactionType,\n  GasResponse,\n  ProtocolAction,\n  EthereumTransactionTypeExtended,\n  eEthereumTxType,\n} from '../types';\nimport { ContractsFactory } from '../interfaces/ContractsFactory';\nimport { estimateGasByNetwork, getGasPrice } from '../utils/gasStation';\nimport { DEFAULT_NULL_VALUE_ON_TX, gasLimitRecommendations } from '../config';\n\nexport default class BaseService<T extends Contract> {\n  readonly contractInstances: { [address: string]: T };\n\n  readonly contractFactory: ContractsFactory;\n\n  readonly config: Configuration;\n\n  constructor(config: Configuration, contractFactory: ContractsFactory) {\n    this.config = config;\n    this.contractFactory = contractFactory;\n    this.contractInstances = {};\n  }\n\n  public getContractInstance = (address: tEthereumAddress): T => {\n    if (!this.contractInstances[address]) {\n      const { provider }: Configuration = this.config;\n      this.contractInstances[address] = this.contractFactory.connect(\n        address,\n        provider\n      ) as T;\n    }\n\n    return this.contractInstances[address];\n  };\n\n  readonly generateTxCallback = ({\n    rawTxMethod,\n    from,\n    value,\n    gasSurplus,\n    action,\n  }: TransactionGenerationMethod): (() => Promise<transactionType>) => async () => {\n    const txRaw: PopulatedTransaction = await rawTxMethod();\n\n    const tx: transactionType = {\n      ...txRaw,\n      from,\n      value: value || DEFAULT_NULL_VALUE_ON_TX,\n    };\n\n    tx.gasLimit = await estimateGasByNetwork(tx, this.config, gasSurplus);\n\n    if (\n      action &&\n      gasLimitRecommendations[action] &&\n      tx.gasLimit.lte(BigNumber.from(gasLimitRecommendations[action].limit))\n    ) {\n      tx.gasLimit = BigNumber.from(gasLimitRecommendations[action].recommended);\n    }\n\n    return tx;\n  };\n\n  readonly generateTxPriceEstimation = (\n    txs: EthereumTransactionTypeExtended[],\n    txCallback: () => Promise<transactionType>,\n    action: string = ProtocolAction.default\n  ): GasResponse => async (force = false) => {\n    try {\n      const gasPrice = await getGasPrice(this.config);\n      const hasPendingApprovals = txs.find(\n        (tx) => tx.txType === eEthereumTxType.ERC20_APPROVAL\n      );\n      if (!hasPendingApprovals || force) {\n        const {\n          gasLimit,\n          gasPrice: gasPriceProv,\n        }: transactionType = await txCallback();\n        if (!gasLimit) {\n          // If we don't recieve the correct gas we throw a error\n          throw new Error('Transaction calculation error');\n        }\n\n        return {\n          gasLimit: gasLimit.toString(),\n          gasPrice: gasPriceProv\n            ? gasPriceProv.toString()\n            : gasPrice.toString(),\n        };\n      }\n      return {\n        gasLimit: gasLimitRecommendations[action].recommended,\n        gasPrice: gasPrice.toString(),\n      };\n    } catch (error) {\n      console.error(\n        'Calculate error on calculate estimation gas price.',\n        error\n      );\n      return null;\n    }\n  };\n}\n","import {\n  IParaSwapLiquiditySwapAdapter__factory,\n  IParaSwapLiquiditySwapAdapter,\n} from '../contract-types';\nimport LiquiditySwapAdapterInterface from '../interfaces/LiquiditySwapAdapterParaswap';\nimport {\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  LendingPoolMarketConfig,\n  ProtocolAction,\n  transactionType,\n} from '../types';\nimport { SwapAndDepositMethodType } from '../types/LiquiditySwapAdapterParaswapMethodTypes';\nimport { LiquiditySwapValidator } from '../validators/methodValidators';\nimport { IsEthAddress, IsPositiveAmount } from '../validators/paramValidators';\nimport BaseService from './BaseService';\n\nexport function augustusFromAmountOffsetFromCalldata(calldata: string) {\n  switch (calldata.slice(0, 10)) {\n    case '0xda8567c8': // Augustus V3 multiSwap\n      return 100; // 4 + 3 * 32\n    case '0x58b9d179': // Augustus V4 swapOnUniswap\n      return 4; // 4 + 0 * 32\n    case '0x0863b7ac': // Augustus V4 swapOnUniswapFork\n      return 68; // 4 + 2 * 32\n    case '0x8f00eccb': // Augustus V4 multiSwap\n      return 68; // 4 + 2 * 32\n    case '0xec1d21dd': // Augustus V4 megaSwap\n      return 68; // 4 + 2 * 32\n    case '0x54840d1a': // Augustus V5 swapOnUniswap\n      return 4; // 4 + 0 * 32\n    case '0xf5661034': // Augustus V5 swapOnUniswapFork\n      return 68; // 4 + 2 * 32\n    case '0x64466805': // Augustus V5 swapOnZeroXv4\n      return 68; // 4 + 2 * 32\n    case '0xa94e78ef': // Augustus V5 multiSwap\n      return 68; // 4 + 2 * 32\n    case '0x46c67b6d': // Augustus V5 megaSwap\n      return 68; // 4 + 2 * 32\n    default:\n      throw new Error('Unrecognized function selector for Augustus');\n  }\n}\n\nexport default class LiquiditySwapAdapterService\n  extends BaseService<IParaSwapLiquiditySwapAdapter>\n  implements LiquiditySwapAdapterInterface {\n  readonly liquiditySwapAdapterAddress: string;\n\n  readonly swapCollateralConfig: LendingPoolMarketConfig | undefined;\n\n  constructor(\n    config: Configuration,\n    swapCollateralConfig: LendingPoolMarketConfig | undefined\n  ) {\n    super(config, IParaSwapLiquiditySwapAdapter__factory);\n    this.swapCollateralConfig = swapCollateralConfig;\n\n    this.liquiditySwapAdapterAddress =\n      this.swapCollateralConfig?.SWAP_COLLATERAL_ADAPTER || '';\n  }\n\n  @LiquiditySwapValidator\n  public swapAndDeposit(\n    @IsEthAddress('user')\n    @IsEthAddress('assetToSwapFrom')\n    @IsEthAddress('assetToSwapTo')\n    @IsEthAddress('augustus')\n    @IsPositiveAmount('amountToSwap')\n    @IsPositiveAmount('minAmountToReceive')\n    {\n      user,\n      assetToSwapFrom,\n      assetToSwapTo,\n      amountToSwap,\n      minAmountToReceive,\n      permitParams,\n      augustus,\n      swapCallData,\n      swapAll,\n    }: SwapAndDepositMethodType,\n    txs?: EthereumTransactionTypeExtended[]\n  ): EthereumTransactionTypeExtended {\n    const liquiditySwapContract = this.getContractInstance(\n      this.liquiditySwapAdapterAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        liquiditySwapContract.populateTransaction.swapAndDeposit(\n          assetToSwapFrom,\n          assetToSwapTo,\n          amountToSwap,\n          minAmountToReceive,\n          swapAll\n            ? augustusFromAmountOffsetFromCalldata(swapCallData as string)\n            : 0,\n          swapCallData,\n          augustus,\n          permitParams\n        ),\n      from: user,\n    });\n\n    return {\n      tx: txCallback,\n      txType: eEthereumTxType.DLP_ACTION,\n      gas: this.generateTxPriceEstimation(\n        txs || [],\n        txCallback,\n        ProtocolAction.swapCollateral\n      ),\n    };\n  }\n}\n","import { constants, utils, BigNumberish, BytesLike } from 'ethers';\nimport {\n  API_ETH_MOCK_ADDRESS,\n  DEFAULT_APPROVE_AMOUNT,\n  MAX_UINT_AMOUNT,\n  SURPLUS,\n} from '../../config';\nimport { ILendingPool, ILendingPool__factory } from '../../contract-types';\nimport IERC20ServiceInterface from '../../interfaces/ERC20';\nimport SynthetixInterface from '../../interfaces/Synthetix';\nimport LendingPoolInterface from '../../interfaces/v2/LendingPool';\nimport {\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  InterestRate,\n  ProtocolAction,\n  TokenMetadataType,\n  transactionType,\n  tStringDecimalUnits,\n  tEthereumAddress,\n  LendingPoolMarketConfig,\n} from '../../types';\nimport { getTxValue, parseNumber } from '../../utils/parsings';\nimport {\n  LPFlashLiquidationValidator,\n  LPRepayWithCollateralValidator,\n  LPSwapCollateralValidator,\n  LPValidator,\n} from '../../validators/methodValidators';\nimport {\n  LPBorrowParamsType,\n  LPDepositParamsType,\n  LPLiquidationCall,\n  LPRepayParamsType,\n  LPRepayWithCollateral,\n  LPSetUsageAsCollateral,\n  LPSwapBorrowRateMode,\n  LPSwapCollateral,\n  LPWithdrawParamsType,\n  LPFlashLiquidation,\n} from '../../types/LendingPoolMethodTypes';\nimport WETHGatewayInterface from '../../interfaces/WETHGateway';\nimport {\n  IsEthAddress,\n  IsPositiveAmount,\n  IsPositiveOrMinusOneAmount,\n} from '../../validators/paramValidators';\nimport LiquiditySwapAdapterInterface from '../../interfaces/LiquiditySwapAdapterParaswap';\nimport RepayWithCollateralAdapterInterface from '../../interfaces/RepayWithCollateralAdapter';\nimport BaseService from '../BaseService';\nimport { augustusFromAmountOffsetFromCalldata } from '../LiquiditySwapAdapterParaswap';\n\nconst buildParaSwapLiquiditySwapParams = (\n  assetToSwapTo: tEthereumAddress,\n  minAmountToReceive: BigNumberish,\n  swapAllBalanceOffset: BigNumberish,\n  swapCalldata: string | Buffer | BytesLike,\n  augustus: tEthereumAddress,\n  permitAmount: BigNumberish,\n  deadline: BigNumberish,\n  v: BigNumberish,\n  r: string | Buffer | BytesLike,\n  s: string | Buffer | BytesLike\n) => {\n  return utils.defaultAbiCoder.encode(\n    [\n      'address',\n      'uint256',\n      'uint256',\n      'bytes',\n      'address',\n      'tuple(uint256,uint256,uint8,bytes32,bytes32)',\n    ],\n    [\n      assetToSwapTo,\n      minAmountToReceive,\n      swapAllBalanceOffset,\n      swapCalldata,\n      augustus,\n      [permitAmount, deadline, v, r, s],\n    ]\n  );\n};\n\nexport default class LendingPool\n  extends BaseService<ILendingPool>\n  implements LendingPoolInterface {\n  readonly market: string;\n\n  readonly erc20Service: IERC20ServiceInterface;\n\n  readonly lendingPoolAddress: string;\n\n  readonly synthetixService: SynthetixInterface;\n\n  readonly wethGatewayService: WETHGatewayInterface;\n\n  readonly liquiditySwapAdapterService: LiquiditySwapAdapterInterface;\n\n  readonly repayWithCollateralAdapterService: RepayWithCollateralAdapterInterface;\n\n  readonly lendingPoolConfig: LendingPoolMarketConfig | undefined;\n\n  readonly flashLiquidationAddress: string;\n\n  readonly swapCollateralAddress: string;\n\n  readonly repayWithCollateralAddress: string;\n\n  constructor(\n    config: Configuration,\n    erc20Service: IERC20ServiceInterface,\n    synthetixService: SynthetixInterface,\n    wethGatewayService: WETHGatewayInterface,\n    liquiditySwapAdapterService: LiquiditySwapAdapterInterface,\n    repayWithCollateralAdapterService: RepayWithCollateralAdapterInterface,\n    market: string,\n    lendingPoolConfig: LendingPoolMarketConfig | undefined\n  ) {\n    super(config, ILendingPool__factory);\n    this.erc20Service = erc20Service;\n    this.synthetixService = synthetixService;\n    this.wethGatewayService = wethGatewayService;\n    this.liquiditySwapAdapterService = liquiditySwapAdapterService;\n    this.repayWithCollateralAdapterService = repayWithCollateralAdapterService;\n    this.market = market;\n    this.lendingPoolConfig = lendingPoolConfig;\n\n    const {\n      LENDING_POOL,\n      FLASH_LIQUIDATION_ADAPTER,\n      REPAY_WITH_COLLATERAL_ADAPTER,\n      SWAP_COLLATERAL_ADAPTER,\n    } = this.lendingPoolConfig || {};\n\n    this.lendingPoolAddress = LENDING_POOL || '';\n    this.flashLiquidationAddress = FLASH_LIQUIDATION_ADAPTER || '';\n    this.swapCollateralAddress = SWAP_COLLATERAL_ADAPTER || '';\n    this.repayWithCollateralAddress = REPAY_WITH_COLLATERAL_ADAPTER || '';\n  }\n\n  @LPValidator\n  public async deposit(\n    @IsEthAddress('user')\n    @IsEthAddress('reserve')\n    @IsPositiveAmount('amount')\n    @IsEthAddress('onBehalfOf')\n    { user, reserve, amount, onBehalfOf, referralCode }: LPDepositParamsType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    if (reserve.toLowerCase() === API_ETH_MOCK_ADDRESS.toLowerCase()) {\n      return this.wethGatewayService.depositETH({\n        lendingPool: this.lendingPoolAddress,\n        user,\n        amount,\n        onBehalfOf,\n        referralCode,\n      });\n    }\n    const {\n      isApproved,\n      approve,\n      decimalsOf,\n    }: IERC20ServiceInterface = this.erc20Service;\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const reserveDecimals: number = await decimalsOf(reserve);\n    const convertedAmount: tStringDecimalUnits = parseNumber(\n      amount,\n      reserveDecimals\n    );\n\n    const fundsAvailable: boolean = await this.synthetixService.synthetixValidation(\n      user,\n      reserve,\n      convertedAmount\n    );\n    if (!fundsAvailable) {\n      throw new Error('Not enough funds to execute operation');\n    }\n\n    const approved = await isApproved(\n      reserve,\n      user,\n      this.lendingPoolAddress,\n      amount\n    );\n    if (!approved) {\n      const approveTx: EthereumTransactionTypeExtended = approve(\n        user,\n        reserve,\n        this.lendingPoolAddress,\n        DEFAULT_APPROVE_AMOUNT\n      );\n      txs.push(approveTx);\n    }\n\n    const lendingPoolContract: ILendingPool = this.getContractInstance(\n      this.lendingPoolAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        lendingPoolContract.populateTransaction.deposit(\n          reserve,\n          convertedAmount,\n          onBehalfOf || user,\n          referralCode || '0'\n        ),\n      from: user,\n      value: getTxValue(reserve, convertedAmount),\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.DLP_ACTION,\n      gas: this.generateTxPriceEstimation(\n        txs,\n        txCallback,\n        ProtocolAction.deposit\n      ),\n    });\n\n    return txs;\n  }\n\n  @LPValidator\n  public async withdraw(\n    @IsEthAddress('user')\n    @IsEthAddress('reserve')\n    @IsPositiveOrMinusOneAmount('amount')\n    @IsEthAddress('onBehalfOf')\n    @IsEthAddress('aTokenAddress')\n    { user, reserve, amount, onBehalfOf, aTokenAddress }: LPWithdrawParamsType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    if (reserve.toLowerCase() === API_ETH_MOCK_ADDRESS.toLowerCase()) {\n      if (!aTokenAddress) {\n        throw new Error(\n          'To withdraw ETH you need to pass the aWETH token address'\n        );\n      }\n\n      return this.wethGatewayService.withdrawETH({\n        lendingPool: this.lendingPoolAddress,\n        user,\n        amount,\n        onBehalfOf,\n        aTokenAddress,\n      });\n    }\n    const { decimalsOf }: IERC20ServiceInterface = this.erc20Service;\n    const decimals: number = await decimalsOf(reserve);\n\n    const convertedAmount: tStringDecimalUnits =\n      amount === '-1'\n        ? constants.MaxUint256.toString()\n        : parseNumber(amount, decimals);\n\n    const lendingPoolContract: ILendingPool = this.getContractInstance(\n      this.lendingPoolAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        lendingPoolContract.populateTransaction.withdraw(\n          reserve,\n          convertedAmount,\n          onBehalfOf || user\n        ),\n      from: user,\n      action: ProtocolAction.withdraw,\n    });\n\n    return [\n      {\n        tx: txCallback,\n        txType: eEthereumTxType.DLP_ACTION,\n        gas: this.generateTxPriceEstimation(\n          [],\n          txCallback,\n          ProtocolAction.withdraw\n        ),\n      },\n    ];\n  }\n\n  @LPValidator\n  public async borrow(\n    @IsEthAddress('user')\n    @IsEthAddress('reserve')\n    @IsPositiveAmount('amount')\n    @IsEthAddress('debtTokenAddress')\n    @IsEthAddress('onBehalfOf')\n    {\n      user,\n      reserve,\n      amount,\n      interestRateMode,\n      debtTokenAddress,\n      onBehalfOf,\n      referralCode,\n    }: LPBorrowParamsType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    if (reserve.toLowerCase() === API_ETH_MOCK_ADDRESS.toLowerCase()) {\n      if (!debtTokenAddress) {\n        throw new Error(\n          `To borrow ETH you need to pass the stable or variable WETH debt Token Address corresponding the interestRateMode`\n        );\n      }\n      return this.wethGatewayService.borrowETH({\n        lendingPool: this.lendingPoolAddress,\n        user,\n        amount,\n        debtTokenAddress,\n        interestRateMode,\n        referralCode,\n      });\n    }\n    const { decimalsOf }: IERC20ServiceInterface = this.erc20Service;\n    const reserveDecimals = await decimalsOf(reserve);\n    const formatAmount: tStringDecimalUnits = parseNumber(\n      amount,\n      reserveDecimals\n    );\n\n    const numericRateMode = interestRateMode === InterestRate.Variable ? 2 : 1;\n\n    const lendingPoolContract = this.getContractInstance(\n      this.lendingPoolAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        lendingPoolContract.populateTransaction.borrow(\n          reserve,\n          formatAmount,\n          numericRateMode,\n          referralCode || 0,\n          onBehalfOf || user\n        ),\n      from: user,\n    });\n\n    return [\n      {\n        tx: txCallback,\n        txType: eEthereumTxType.DLP_ACTION,\n        gas: this.generateTxPriceEstimation([], txCallback),\n      },\n    ];\n  }\n\n  @LPValidator\n  public async repay(\n    @IsEthAddress('user')\n    @IsEthAddress('reserve')\n    @IsPositiveOrMinusOneAmount('amount')\n    @IsEthAddress('onBehalfOf')\n    { user, reserve, amount, interestRateMode, onBehalfOf }: LPRepayParamsType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    if (reserve.toLowerCase() === API_ETH_MOCK_ADDRESS.toLowerCase()) {\n      return this.wethGatewayService.repayETH({\n        lendingPool: this.lendingPoolAddress,\n        user,\n        amount,\n        interestRateMode,\n        onBehalfOf,\n      });\n    }\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const {\n      isApproved,\n      approve,\n      decimalsOf,\n    }: IERC20ServiceInterface = this.erc20Service;\n\n    const lendingPoolContract = this.getContractInstance(\n      this.lendingPoolAddress\n    );\n    const { populateTransaction }: ILendingPool = lendingPoolContract;\n    const numericRateMode = interestRateMode === InterestRate.Variable ? 2 : 1;\n    const decimals: number = await decimalsOf(reserve);\n\n    const convertedAmount: tStringDecimalUnits =\n      amount === '-1'\n        ? constants.MaxUint256.toString()\n        : parseNumber(amount, decimals);\n\n    if (amount !== '-1') {\n      const fundsAvailable: boolean = await this.synthetixService.synthetixValidation(\n        user,\n        reserve,\n        convertedAmount\n      );\n      if (!fundsAvailable) {\n        throw new Error('Not enough funds to execute operation');\n      }\n    }\n\n    const approved: boolean = await isApproved(\n      reserve,\n      user,\n      this.lendingPoolAddress,\n      amount\n    );\n\n    if (!approved) {\n      const approveTx: EthereumTransactionTypeExtended = approve(\n        user,\n        reserve,\n        this.lendingPoolAddress,\n        DEFAULT_APPROVE_AMOUNT\n      );\n      txs.push(approveTx);\n    }\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        populateTransaction.repay(\n          reserve,\n          convertedAmount,\n          numericRateMode,\n          onBehalfOf || user\n        ),\n      from: user,\n      value: getTxValue(reserve, convertedAmount),\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.DLP_ACTION,\n      gas: this.generateTxPriceEstimation(\n        txs,\n        txCallback,\n        ProtocolAction.repay\n      ),\n    });\n\n    return txs;\n  }\n\n  @LPValidator\n  public async swapBorrowRateMode(\n    @IsEthAddress('user')\n    @IsEthAddress('reserve')\n    { user, reserve, interestRateMode }: LPSwapBorrowRateMode\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const numericRateMode = interestRateMode === InterestRate.Variable ? 2 : 1;\n\n    const lendingPoolContract = this.getContractInstance(\n      this.lendingPoolAddress\n    );\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        lendingPoolContract.populateTransaction.swapBorrowRateMode(\n          reserve,\n          numericRateMode\n        ),\n      from: user,\n    });\n\n    return [\n      {\n        txType: eEthereumTxType.DLP_ACTION,\n        tx: txCallback,\n        gas: this.generateTxPriceEstimation([], txCallback),\n      },\n    ];\n  }\n\n  @LPValidator\n  public async setUsageAsCollateral(\n    @IsEthAddress('user')\n    @IsEthAddress('reserve')\n    { user, reserve, usageAsCollateral }: LPSetUsageAsCollateral\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const lendingPoolContract = this.getContractInstance(\n      this.lendingPoolAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        lendingPoolContract.populateTransaction.setUserUseReserveAsCollateral(\n          reserve,\n          usageAsCollateral\n        ),\n      from: user,\n    });\n\n    return [\n      {\n        tx: txCallback,\n        txType: eEthereumTxType.DLP_ACTION,\n        gas: this.generateTxPriceEstimation([], txCallback),\n      },\n    ];\n  }\n\n  @LPValidator\n  public async liquidationCall(\n    @IsEthAddress('liquidator')\n    @IsEthAddress('liquidatedUser')\n    @IsEthAddress('debtReserve')\n    @IsEthAddress('collateralReserve')\n    @IsPositiveAmount('purchaseAmount')\n    {\n      liquidator,\n      liquidatedUser,\n      debtReserve,\n      collateralReserve,\n      purchaseAmount,\n      getAToken,\n      liquidateAll,\n    }: LPLiquidationCall\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const {\n      isApproved,\n      approve,\n      getTokenData,\n    }: IERC20ServiceInterface = this.erc20Service;\n\n    const approved = await isApproved(\n      debtReserve,\n      liquidator,\n      this.lendingPoolAddress,\n      purchaseAmount\n    );\n\n    if (!approved) {\n      const approveTx: EthereumTransactionTypeExtended = approve(\n        liquidator,\n        debtReserve,\n        this.lendingPoolAddress,\n        DEFAULT_APPROVE_AMOUNT\n      );\n\n      txs.push(approveTx);\n    }\n\n    const [debtReserveInfo]: TokenMetadataType[] = await Promise.all([\n      getTokenData(debtReserve),\n    ]);\n\n    const reserveDecimals: number = debtReserveInfo.decimals;\n\n    const convertedAmount: tStringDecimalUnits = liquidateAll\n      ? MAX_UINT_AMOUNT\n      : parseNumber(purchaseAmount, reserveDecimals);\n\n    const lendingPoolContract = this.getContractInstance(\n      this.lendingPoolAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        lendingPoolContract.populateTransaction.liquidationCall(\n          collateralReserve,\n          debtReserve,\n          liquidatedUser,\n          convertedAmount,\n          getAToken || false\n        ),\n      from: liquidator,\n      value: getTxValue(debtReserve, convertedAmount),\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.DLP_ACTION,\n      gas: this.generateTxPriceEstimation(\n        txs,\n        txCallback,\n        ProtocolAction.liquidationCall\n      ),\n    });\n\n    return txs;\n  }\n\n  @LPSwapCollateralValidator\n  public async swapCollateral(\n    @IsEthAddress('user')\n    @IsEthAddress('fromAsset')\n    @IsEthAddress('fromAToken')\n    @IsEthAddress('toAsset')\n    @IsEthAddress('onBehalfOf')\n    @IsEthAddress('augustus')\n    @IsPositiveAmount('fromAmount')\n    @IsPositiveAmount('minToAmount')\n    {\n      user,\n      flash,\n      fromAsset,\n      fromAToken,\n      toAsset,\n      fromAmount,\n      minToAmount,\n      permitSignature,\n      swapAll,\n      onBehalfOf,\n      referralCode,\n      augustus,\n      swapCallData,\n    }: LPSwapCollateral\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n\n    const permitParams = permitSignature || {\n      amount: '0',\n      deadline: '0',\n      v: 0,\n      r: '0x0000000000000000000000000000000000000000000000000000000000000000',\n      s: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    };\n\n    const approved: boolean = await this.erc20Service.isApproved(\n      fromAToken,\n      user,\n      this.swapCollateralAddress,\n      fromAmount\n    );\n\n    if (!approved) {\n      const approveTx: EthereumTransactionTypeExtended = this.erc20Service.approve(\n        user,\n        fromAToken,\n        this.swapCollateralAddress,\n        constants.MaxUint256.toString()\n      );\n\n      txs.push(approveTx);\n    }\n\n    const tokenDecimals: number = await this.erc20Service.decimalsOf(fromAsset);\n\n    const convertedAmount: string = parseNumber(fromAmount, tokenDecimals);\n\n    const tokenToDecimals: number = await this.erc20Service.decimalsOf(toAsset);\n\n    const amountSlippageConverted: string = parseNumber(\n      minToAmount,\n      tokenToDecimals\n    );\n\n    const lendingPoolContract = this.getContractInstance(\n      this.lendingPoolAddress\n    );\n\n    const params = buildParaSwapLiquiditySwapParams(\n      toAsset,\n      amountSlippageConverted,\n      swapAll\n        ? augustusFromAmountOffsetFromCalldata(swapCallData as string)\n        : 0,\n      swapCallData,\n      augustus,\n      permitParams.amount,\n      permitParams.deadline,\n      permitParams.v,\n      permitParams.r,\n      permitParams.s\n    );\n\n    if (flash) {\n      const amountWithSurplus: string = (\n        Number(fromAmount) +\n        (Number(fromAmount) * Number(SURPLUS)) / 100\n      ).toString();\n\n      const convertedAmountWithSurplus: string = parseNumber(\n        amountWithSurplus,\n        tokenDecimals\n      );\n\n      const txCallback: () => Promise<transactionType> = this.generateTxCallback(\n        {\n          rawTxMethod: () =>\n            lendingPoolContract.populateTransaction.flashLoan(\n              this.swapCollateralAddress,\n              [fromAsset],\n              swapAll ? [convertedAmountWithSurplus] : [convertedAmount],\n              [0], // interest rate mode to NONE for flashloan to not open debt\n              onBehalfOf || user,\n              params,\n              referralCode || '0'\n            ),\n          from: user,\n        }\n      );\n\n      txs.push({\n        tx: txCallback,\n        txType: eEthereumTxType.DLP_ACTION,\n        gas: this.generateTxPriceEstimation(\n          txs,\n          txCallback,\n          ProtocolAction.swapCollateral\n        ),\n      });\n      return txs;\n    }\n\n    // Direct call to swap and deposit\n    const swapAndDepositTx: EthereumTransactionTypeExtended = await this.liquiditySwapAdapterService.swapAndDeposit(\n      {\n        user,\n        assetToSwapFrom: fromAsset,\n        assetToSwapTo: toAsset,\n        amountToSwap: convertedAmount,\n        minAmountToReceive: amountSlippageConverted,\n        swapAll,\n        swapCallData,\n        augustus,\n        permitParams,\n      },\n      txs\n    );\n\n    txs.push(swapAndDepositTx);\n    return txs;\n  }\n\n  @LPRepayWithCollateralValidator\n  public async repayWithCollateral(\n    @IsEthAddress('user')\n    @IsEthAddress('fromAsset')\n    @IsEthAddress('fromAToken')\n    @IsEthAddress('assetToRepay')\n    @IsEthAddress('onBehalfOf')\n    @IsPositiveAmount('repayWithAmount')\n    @IsPositiveAmount('repayAmount')\n    {\n      user,\n      fromAsset,\n      fromAToken,\n      assetToRepay,\n      repayWithAmount,\n      repayAmount,\n      permitSignature,\n      repayAllDebt,\n      rateMode,\n      onBehalfOf,\n      referralCode,\n      flash,\n      useEthPath,\n    }: LPRepayWithCollateral\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n\n    const permitParams = permitSignature || {\n      amount: '0',\n      deadline: '0',\n      v: 0,\n      r: '0x0000000000000000000000000000000000000000000000000000000000000000',\n      s: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    };\n\n    const approved: boolean = await this.erc20Service.isApproved(\n      fromAToken,\n      user,\n      this.repayWithCollateralAddress,\n      repayWithAmount\n    );\n\n    if (!approved) {\n      const approveTx: EthereumTransactionTypeExtended = this.erc20Service.approve(\n        user,\n        fromAToken,\n        this.repayWithCollateralAddress,\n        constants.MaxUint256.toString()\n      );\n\n      txs.push(approveTx);\n    }\n\n    const fromDecimals: number = await this.erc20Service.decimalsOf(fromAsset);\n    const convertedRepayWithAmount: string = parseNumber(\n      repayWithAmount,\n      fromDecimals\n    );\n\n    const repayAmountWithSurplus: string = (\n      Number(repayAmount) +\n      (Number(repayAmount) * Number(SURPLUS)) / 100\n    ).toString();\n\n    const decimals: number = await this.erc20Service.decimalsOf(assetToRepay);\n    const convertedRepayAmount: string = repayAllDebt\n      ? parseNumber(repayAmountWithSurplus, decimals)\n      : parseNumber(repayAmount, decimals);\n\n    let numericInterestRate = 0;\n    if (rateMode) {\n      numericInterestRate = rateMode === InterestRate.Stable ? 1 : 2;\n    }\n\n    if (flash) {\n      const params: string = utils.defaultAbiCoder.encode(\n        [\n          'address',\n          'uint256',\n          'uint256',\n          'uint256',\n          'uint256',\n          'uint8',\n          'bytes32',\n          'bytes32',\n          'bool',\n        ],\n        [\n          fromAsset,\n          convertedRepayWithAmount,\n          numericInterestRate,\n          permitParams.amount,\n          permitParams.deadline,\n          permitParams.v,\n          permitParams.r,\n          permitParams.s,\n          useEthPath || false,\n        ]\n      );\n\n      const lendingPoolContract = this.getContractInstance(\n        this.lendingPoolAddress\n      );\n\n      const txCallback: () => Promise<transactionType> = this.generateTxCallback(\n        {\n          rawTxMethod: () =>\n            lendingPoolContract.populateTransaction.flashLoan(\n              this.repayWithCollateralAddress,\n              [assetToRepay],\n              [convertedRepayAmount],\n              [0], // interest rate mode to NONE for flashloan to not open debt\n              onBehalfOf || user,\n              params,\n              referralCode || '0'\n            ),\n          from: user,\n        }\n      );\n\n      txs.push({\n        tx: txCallback,\n        txType: eEthereumTxType.DLP_ACTION,\n        gas: this.generateTxPriceEstimation(\n          txs,\n          txCallback,\n          ProtocolAction.repayCollateral\n        ),\n      });\n\n      return txs;\n    }\n\n    const swapAndRepayTx: EthereumTransactionTypeExtended = this.repayWithCollateralAdapterService.swapAndRepay(\n      {\n        user,\n        collateralAsset: fromAsset,\n        debtAsset: assetToRepay,\n        collateralAmount: convertedRepayWithAmount,\n        debtRepayAmount: convertedRepayAmount,\n        debtRateMode: numericInterestRate,\n        permit: permitParams,\n        useEthPath,\n      },\n      txs\n    );\n\n    txs.push(swapAndRepayTx);\n\n    return txs;\n  }\n\n  @LPFlashLiquidationValidator\n  public async flashLiquidation(\n    @IsEthAddress('user')\n    @IsEthAddress('collateralAsset')\n    @IsEthAddress('borrowedAsset')\n    @IsPositiveAmount('debtTokenCover')\n    @IsEthAddress('initiator')\n    {\n      user,\n      collateralAsset,\n      borrowedAsset,\n      debtTokenCover,\n      liquidateAll,\n      initiator,\n      useEthPath,\n    }: LPFlashLiquidation\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const addSurplus = (amount: string): string => {\n      return (\n        Number(amount) +\n        (Number(amount) * Number(amount)) / 100\n      ).toString();\n    };\n\n    const txs: EthereumTransactionTypeExtended[] = [];\n\n    const lendingPoolContract: ILendingPool = this.getContractInstance(\n      this.lendingPoolAddress\n    );\n\n    const tokenDecimals: number = await this.erc20Service.decimalsOf(\n      borrowedAsset\n    );\n\n    const convertedDebt = parseNumber(debtTokenCover, tokenDecimals);\n\n    const convertedDebtTokenCover: string = liquidateAll\n      ? constants.MaxUint256.toString()\n      : convertedDebt;\n\n    const flashBorrowAmount = liquidateAll\n      ? parseNumber(addSurplus(debtTokenCover), tokenDecimals)\n      : convertedDebt;\n\n    const params: string = utils.defaultAbiCoder.encode(\n      ['address', 'address', 'address', 'uint256', 'bool'],\n      [\n        collateralAsset,\n        borrowedAsset,\n        user,\n        convertedDebtTokenCover,\n        useEthPath || false,\n      ]\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        lendingPoolContract.populateTransaction.flashLoan(\n          this.flashLiquidationAddress,\n          [borrowedAsset],\n          [flashBorrowAmount],\n          [0],\n          initiator,\n          params,\n          '0'\n        ),\n      from: initiator,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.DLP_ACTION,\n      gas: this.generateTxPriceEstimation(\n        txs,\n        txCallback,\n        ProtocolAction.liquidationFlash\n      ),\n    });\n    return txs;\n  }\n}\n","import { BigNumber } from 'ethers';\nimport IERC20ServiceInterface from '../interfaces/ERC20';\nimport {\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  tEthereumAddress,\n  transactionType,\n  tStringCurrencyUnits,\n  tStringDecimalUnits,\n  TokenMetadataType,\n} from '../types';\nimport { API_ETH_MOCK_ADDRESS, SUPER_BIG_ALLOWANCE_NUMBER } from '../config';\nimport { IERC20Detailed, IERC20Detailed__factory } from '../contract-types';\nimport BaseService from './BaseService';\nimport { parseNumber } from '../utils/parsings';\n\nexport default class ERC20Service\n  extends BaseService<IERC20Detailed>\n  implements IERC20ServiceInterface {\n  readonly tokenDecimals: { [address: string]: number };\n\n  constructor(config: Configuration) {\n    super(config, IERC20Detailed__factory);\n    this.tokenDecimals = {};\n  }\n\n  public approve = (\n    user: tEthereumAddress,\n    token: tEthereumAddress,\n    spender: tEthereumAddress,\n    amount: tStringDecimalUnits\n  ): EthereumTransactionTypeExtended => {\n    const erc20Contract = this.getContractInstance(token);\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        erc20Contract.populateTransaction.approve(spender, amount),\n      from: user,\n    });\n\n    return {\n      tx: txCallback,\n      txType: eEthereumTxType.ERC20_APPROVAL,\n      gas: this.generateTxPriceEstimation([], txCallback),\n    };\n  };\n\n  public isApproved = async (\n    token: tEthereumAddress,\n    userAddress: tEthereumAddress,\n    spender: tEthereumAddress,\n    amount: tStringCurrencyUnits\n  ): Promise<boolean> => {\n    if (token.toLowerCase() === API_ETH_MOCK_ADDRESS.toLowerCase()) return true;\n    const decimals = await this.decimalsOf(token);\n    const erc20Contract: IERC20Detailed = this.getContractInstance(token);\n    const allowance: BigNumber = await erc20Contract.allowance(\n      userAddress,\n      spender\n    );\n    const amountBNWithDecimals: BigNumber =\n      amount === '-1'\n        ? BigNumber.from(SUPER_BIG_ALLOWANCE_NUMBER)\n        : BigNumber.from(parseNumber(amount, decimals));\n    return allowance.gte(amountBNWithDecimals);\n  };\n\n  public decimalsOf = async (token: tEthereumAddress): Promise<number> => {\n    if (token.toLowerCase() === API_ETH_MOCK_ADDRESS.toLowerCase()) return 18;\n    if (!this.tokenDecimals[token]) {\n      const erc20Contract = this.getContractInstance(token);\n      this.tokenDecimals[token] = await erc20Contract.decimals();\n    }\n\n    return this.tokenDecimals[token];\n  };\n\n  public getTokenData = async (\n    token: tEthereumAddress\n  ): Promise<TokenMetadataType> => {\n    if (token.toLowerCase() === API_ETH_MOCK_ADDRESS.toLowerCase()) {\n      return {\n        name: 'Ethereum',\n        symbol: 'ETH',\n        decimals: 18,\n        address: token,\n      };\n    }\n    // Needed because MKR does not return string for symbol and Name\n    if (\n      token.toLowerCase() ===\n      '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'.toLowerCase()\n    ) {\n      return {\n        name: 'Maker',\n        symbol: 'MKR',\n        decimals: 18,\n        address: token,\n      };\n    }\n\n    const {\n      name: nameGetter,\n      symbol: symbolGetter,\n      decimals: decimalsGetter,\n    }: IERC20Detailed = this.getContractInstance(token);\n\n    const [name, symbol, decimals]: [\n      string,\n      string,\n      number\n    ] = await Promise.all([nameGetter(), symbolGetter(), decimalsGetter()]);\n\n    return {\n      name,\n      symbol,\n      decimals,\n      address: token,\n    };\n  };\n}\n","import { DEFAULT_NULL_VALUE_ON_TX } from '../config';\nimport {\n  IFaucet,\n  IMinter,\n  IFaucet__factory,\n  IMinter__factory,\n} from '../contract-types';\nimport FaucetInterface from '../interfaces/Faucet';\nimport {\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  LendingPoolMarketConfig,\n  transactionType,\n} from '../types';\nimport { FaucetParamsType } from '../types/FaucetMethodTypes';\nimport { mintAmountsPerToken } from '../utils/parsings';\nimport { FaucetValidator } from '../validators/methodValidators';\nimport { IsEthAddress } from '../validators/paramValidators';\nimport BaseService from './BaseService';\n\nexport default class FaucetService\n  extends BaseService<IMinter>\n  implements FaucetInterface {\n  readonly faucetAddress: string;\n\n  readonly faucetContract: IFaucet;\n\n  readonly faucetConfig: LendingPoolMarketConfig | undefined;\n\n  constructor(\n    config: Configuration,\n    faucetConfig: LendingPoolMarketConfig | undefined\n  ) {\n    super(config, IMinter__factory);\n\n    this.faucetConfig = faucetConfig;\n\n    const { provider } = this.config;\n\n    this.faucetAddress = this.faucetConfig?.FAUCET || '';\n\n    if (this.faucetAddress !== '') {\n      this.faucetContract = IFaucet__factory.connect(\n        this.faucetAddress,\n        provider\n      );\n    }\n  }\n\n  @FaucetValidator\n  public async mint(\n    @IsEthAddress('userAddress')\n    @IsEthAddress('reserve')\n    { userAddress, reserve, tokenSymbol }: FaucetParamsType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const amount: string = mintAmountsPerToken[tokenSymbol];\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        this.faucetContract.populateTransaction.mint(reserve, amount),\n      from: userAddress,\n      value: DEFAULT_NULL_VALUE_ON_TX,\n    });\n\n    return [\n      {\n        tx: txCallback,\n        txType: eEthereumTxType.FAUCET_MINT,\n        gas: this.generateTxPriceEstimation([], txCallback),\n      },\n    ];\n  }\n}\n","import IERC20ServiceInterface from '../interfaces/ERC20';\nimport { DEFAULT_APPROVE_AMOUNT } from '../config';\nimport {\n  ILendToAaveMigrator,\n  ILendToAaveMigrator__factory,\n} from '../contract-types';\nimport LTAMigratorInterface from '../interfaces/LTAMigrator';\nimport {\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  MigratorConfig,\n  tEthereumAddress,\n  transactionType,\n  tStringCurrencyUnits,\n} from '../types';\nimport { parseNumber } from '../utils/parsings';\nimport BaseService from './BaseService';\nimport { LTAMigratorValidator } from '../validators/methodValidators';\nimport { IsEthAddress, IsPositiveAmount } from '../validators/paramValidators';\n\nexport default class LTAMigratorService\n  extends BaseService<ILendToAaveMigrator>\n  implements LTAMigratorInterface {\n  readonly erc20Service: IERC20ServiceInterface;\n\n  readonly migratorAddress: string;\n\n  readonly migratorConfig: MigratorConfig | undefined;\n\n  constructor(\n    config: Configuration,\n    erc20Service: IERC20ServiceInterface,\n    migratorConfig: MigratorConfig | undefined\n  ) {\n    super(config, ILendToAaveMigrator__factory);\n    this.erc20Service = erc20Service;\n    this.migratorConfig = migratorConfig;\n\n    this.migratorAddress = this.migratorConfig?.LEND_TO_AAVE_MIGRATOR || '';\n  }\n\n  @LTAMigratorValidator\n  public async migrateLendToAave(\n    @IsEthAddress() user: tEthereumAddress,\n    @IsPositiveAmount() amount: tStringCurrencyUnits\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n\n    const { isApproved, approve, decimalsOf } = this.erc20Service;\n\n    const migratorContract: ILendToAaveMigrator = this.getContractInstance(\n      this.migratorAddress\n    );\n    const lendToken: string = await migratorContract.LEND();\n\n    const approved: boolean = await isApproved(\n      lendToken,\n      user,\n      this.migratorAddress,\n      amount\n    );\n\n    if (!approved) {\n      txs.push(\n        approve(user, lendToken, this.migratorAddress, DEFAULT_APPROVE_AMOUNT)\n      );\n    }\n\n    const decimals: number = await decimalsOf(lendToken);\n    const convertedAmount: string = await parseNumber(amount, decimals);\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        migratorContract.populateTransaction.migrateFromLEND(convertedAmount),\n      from: user,\n    });\n\n    txs.push({\n      txType: eEthereumTxType.MIGRATION_LEND_AAVE,\n      tx: txCallback,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n\n    return txs;\n  }\n}\n","import { constants, utils, Signature } from 'ethers';\nimport IERC20ServiceInterface from '../interfaces/ERC20';\nimport { DEFAULT_APPROVE_AMOUNT, MAX_UINT_AMOUNT } from '../config';\nimport {\n  IStakedToken,\n  IAaveStakingHelper,\n  IAaveStakingHelper__factory,\n  IStakedToken__factory,\n} from '../contract-types';\nimport StakingInterface from '../interfaces/Staking';\nimport {\n  ChainId,\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  StakingNetworkConfig,\n  tEthereumAddress,\n  transactionType,\n  tStringCurrencyUnits,\n  tStringDecimalUnits,\n} from '../types';\nimport { parseNumber } from '../utils/parsings';\nimport {\n  SignStakingValidator,\n  StakingValidator,\n} from '../validators/methodValidators';\nimport {\n  IsEthAddress,\n  IsPositiveAmount,\n  IsPositiveOrMinusOneAmount,\n  Optional,\n} from '../validators/paramValidators';\nimport BaseService from './BaseService';\n\nexport default class StakingService\n  extends BaseService<IStakedToken>\n  implements StakingInterface {\n  readonly stakingHelperContract: IAaveStakingHelper;\n\n  public readonly stakingContractAddress: tEthereumAddress;\n\n  public readonly stakingRewardTokenContractAddress: tEthereumAddress;\n\n  readonly stakingHelperContractAddress: tEthereumAddress | undefined;\n\n  readonly erc20Service: IERC20ServiceInterface;\n\n  readonly tokenStake: string;\n\n  readonly stakingConfig: StakingNetworkConfig | undefined;\n\n  constructor(\n    config: Configuration,\n    erc20Service: IERC20ServiceInterface,\n    tokenStake: string,\n    stakingConfig: StakingNetworkConfig | undefined\n  ) {\n    super(config, IStakedToken__factory);\n    this.stakingConfig = stakingConfig;\n    this.tokenStake = tokenStake;\n    this.erc20Service = erc20Service;\n\n    const { provider } = this.config;\n\n    const { TOKEN_STAKING, STAKING_REWARD_TOKEN, STAKING_HELPER } =\n      this.stakingConfig || {};\n\n    this.stakingContractAddress = TOKEN_STAKING || '';\n    this.stakingRewardTokenContractAddress = STAKING_REWARD_TOKEN || '';\n    this.stakingHelperContractAddress = STAKING_HELPER;\n\n    if (this.stakingHelperContractAddress) {\n      this.stakingHelperContract = IAaveStakingHelper__factory.connect(\n        this.stakingHelperContractAddress,\n        provider\n      );\n    }\n  }\n\n  @SignStakingValidator\n  public async signStaking(\n    @IsEthAddress() user: tEthereumAddress,\n    @IsPositiveAmount() amount: tStringCurrencyUnits,\n    nonce: string\n  ): Promise<string> {\n    if (!this.stakingHelperContractAddress) return '';\n\n    const { getTokenData } = this.erc20Service;\n    const stakingContract: IStakedToken = this.getContractInstance(\n      this.stakingContractAddress\n    );\n    const stakedToken: string = await stakingContract.STAKED_TOKEN();\n    const { name, decimals } = await getTokenData(stakedToken);\n    const convertedAmount: tStringDecimalUnits = parseNumber(amount, decimals);\n\n    const typeData = {\n      types: {\n        EIP712Domain: [\n          { name: 'name', type: 'string' },\n          { name: 'version', type: 'string' },\n          { name: 'chainId', type: 'uint256' },\n          { name: 'verifyingContract', type: 'address' },\n        ],\n        Permit: [\n          { name: 'owner', type: 'address' },\n          { name: 'spender', type: 'address' },\n          { name: 'value', type: 'uint256' },\n          { name: 'nonce', type: 'uint256' },\n          { name: 'deadline', type: 'uint256' },\n        ],\n      },\n      primaryType: 'Permit' as const,\n      domain: {\n        name,\n        version: '1',\n        chainId: ChainId[this.config.network],\n        verifyingContract: stakedToken,\n      },\n      message: {\n        owner: user,\n        spender: this.stakingHelperContractAddress,\n        value: convertedAmount,\n        nonce,\n        deadline: constants.MaxUint256.toString(),\n      },\n    };\n\n    return JSON.stringify(typeData);\n  }\n\n  @StakingValidator\n  public async stakeWithPermit(\n    @IsEthAddress() user: tEthereumAddress,\n    @IsPositiveAmount() amount: tStringCurrencyUnits,\n    signature: string\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    if (!this.stakingHelperContractAddress) return [];\n\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const { decimalsOf } = this.erc20Service;\n    const stakingContract: IStakedToken = this.getContractInstance(\n      this.stakingContractAddress\n    );\n    const stakedToken: string = await stakingContract.STAKED_TOKEN();\n    const stakedTokenDecimals: number = await decimalsOf(stakedToken);\n    const convertedAmount: tStringDecimalUnits = parseNumber(\n      amount,\n      stakedTokenDecimals\n    );\n    const sig: Signature = utils.splitSignature(signature);\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        this.stakingHelperContract.populateTransaction.stake(\n          user,\n          convertedAmount,\n          sig.v,\n          sig.r,\n          sig.s\n        ),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.STAKE_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n\n    return txs;\n  }\n\n  @StakingValidator\n  public async stake(\n    @IsEthAddress() user: tEthereumAddress,\n    @IsPositiveAmount() amount: tStringCurrencyUnits,\n    @Optional @IsEthAddress() onBehalfOf?: tEthereumAddress\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const { decimalsOf, isApproved, approve } = this.erc20Service;\n    const stakingContract: IStakedToken = this.getContractInstance(\n      this.stakingContractAddress\n    );\n    const stakedToken: string = await stakingContract.STAKED_TOKEN();\n    const stakedTokenDecimals: number = await decimalsOf(stakedToken);\n    const convertedAmount: tStringDecimalUnits = parseNumber(\n      amount,\n      stakedTokenDecimals\n    );\n    const approved: boolean = await isApproved(\n      stakedToken,\n      user,\n      this.stakingContractAddress,\n      amount\n    );\n    if (!approved) {\n      const approveTx = approve(\n        user,\n        stakedToken,\n        this.stakingContractAddress,\n        DEFAULT_APPROVE_AMOUNT\n      );\n      txs.push(approveTx);\n    }\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        stakingContract.populateTransaction.stake(\n          onBehalfOf || user,\n          convertedAmount\n        ),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.STAKE_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n\n    return txs;\n  }\n\n  @StakingValidator\n  public async redeem(\n    @IsEthAddress() user: tEthereumAddress,\n    @IsPositiveOrMinusOneAmount() amount: tStringCurrencyUnits\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    let convertedAmount: tStringDecimalUnits;\n    const stakingContract: IStakedToken = this.getContractInstance(\n      this.stakingContractAddress\n    );\n    if (amount === '-1') {\n      convertedAmount = MAX_UINT_AMOUNT;\n    } else {\n      const { decimalsOf } = this.erc20Service;\n\n      const stakedToken: string = await stakingContract.STAKED_TOKEN();\n      const stakedTokenDecimals: number = await decimalsOf(stakedToken);\n      convertedAmount = parseNumber(amount, stakedTokenDecimals);\n    }\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        stakingContract.populateTransaction.redeem(user, convertedAmount),\n      from: user,\n      gasSurplus: 20,\n    });\n\n    return [\n      {\n        tx: txCallback,\n        txType: eEthereumTxType.STAKE_ACTION,\n        gas: this.generateTxPriceEstimation([], txCallback),\n      },\n    ];\n  }\n\n  @StakingValidator\n  public async cooldown(\n    @IsEthAddress() user: tEthereumAddress\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const stakingContract: IStakedToken = this.getContractInstance(\n      this.stakingContractAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () => stakingContract.populateTransaction.cooldown(),\n      from: user,\n    });\n\n    return [\n      {\n        tx: txCallback,\n        txType: eEthereumTxType.STAKE_ACTION,\n        gas: this.generateTxPriceEstimation([], txCallback),\n      },\n    ];\n  }\n\n  @StakingValidator\n  public async claimRewards(\n    @IsEthAddress() user: tEthereumAddress,\n    @IsPositiveOrMinusOneAmount() amount: tStringCurrencyUnits\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    let convertedAmount: tStringDecimalUnits;\n    const stakingContract: IStakedToken = this.getContractInstance(\n      this.stakingContractAddress\n    );\n    if (amount === '-1') {\n      convertedAmount = MAX_UINT_AMOUNT;\n    } else {\n      const { decimalsOf } = this.erc20Service;\n      const stakedToken: string = await stakingContract.REWARD_TOKEN();\n      const stakedTokenDecimals: number = await decimalsOf(stakedToken);\n      convertedAmount = parseNumber(amount, stakedTokenDecimals);\n    }\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        stakingContract.populateTransaction.claimRewards(user, convertedAmount),\n      from: user,\n      gasSurplus: 20,\n    });\n\n    return [\n      {\n        tx: txCallback,\n        txType: eEthereumTxType.STAKE_ACTION,\n        gas: this.generateTxPriceEstimation([], txCallback),\n      },\n    ];\n  }\n}\n","import { BigNumber } from 'ethers';\nimport BaseService from './BaseService';\nimport { Configuration, tStringDecimalUnits } from '../types';\nimport { ISynthetix, ISynthetix__factory } from '../contract-types';\nimport SynthetixInterface from '../interfaces/Synthetix';\nimport { cosntantAddressesByNetwork } from '../config';\n\nexport default class SynthetixService\n  extends BaseService<ISynthetix>\n  implements SynthetixInterface {\n  readonly synthAddress: string;\n  constructor(config: Configuration) {\n    super(config, ISynthetix__factory);\n    const { network } = this.config;\n\n    this.synthAddress =\n      cosntantAddressesByNetwork[network]?.SYNTHETIX_PROXY_ADDRESS || '';\n  }\n\n  public synthetixValidation = async (\n    userAddress: string,\n    reserve: string,\n    amount: tStringDecimalUnits\n  ): Promise<boolean> => {\n    if (reserve.toUpperCase() === this.synthAddress.toUpperCase()) {\n      return this.isSnxTransferable(userAddress, amount);\n    }\n    return true;\n  };\n\n  readonly isSnxTransferable = async (\n    userAddress: string,\n    amount: tStringDecimalUnits\n  ): Promise<boolean> => {\n    const synthContract = this.getContractInstance(this.synthAddress);\n\n    const transferableAmount: BigNumber = await synthContract.transferableSynthetix(\n      userAddress\n    );\n    return BigNumber.from(amount).lte(transferableAmount);\n  };\n}\n","import { constants } from 'ethers';\nimport {\n  IAaveIncentivesController,\n  IAaveIncentivesController__factory,\n} from '../contract-types';\nimport {\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  IncentivesConfig,\n  tEthereumAddress,\n  transactionType,\n} from '../types';\nimport { IncentivesValidator } from '../validators/methodValidators';\nimport { IsEthAddress } from '../validators/paramValidators';\nimport BaseService from './BaseService';\n\nexport type ClaimRewardsMethodType = {\n  user: string;\n  assets: string[];\n  to: string;\n};\n\nexport interface IncentivesControllerInterface {\n  incentivesControllerRewardTokenAddress: tEthereumAddress;\n  claimRewards: (\n    args: ClaimRewardsMethodType\n  ) => EthereumTransactionTypeExtended[];\n}\n\nexport default class IncentivesController\n  extends BaseService<IAaveIncentivesController>\n  implements IncentivesControllerInterface {\n  public readonly incentivesControllerRewardTokenAddress: tEthereumAddress;\n  readonly incentivesControllerAddress: string;\n\n  readonly incentivesConfig: IncentivesConfig | undefined;\n\n  constructor(\n    config: Configuration,\n    incentivesConfig: IncentivesConfig | undefined\n  ) {\n    super(config, IAaveIncentivesController__factory);\n    this.incentivesConfig = incentivesConfig;\n\n    const { INCENTIVES_CONTROLLER, INCENTIVES_CONTROLLER_REWARD_TOKEN } =\n      this.incentivesConfig || {};\n\n    this.incentivesControllerAddress = INCENTIVES_CONTROLLER || '';\n    this.incentivesControllerRewardTokenAddress =\n      INCENTIVES_CONTROLLER_REWARD_TOKEN || '';\n  }\n\n  @IncentivesValidator\n  public claimRewards(\n    @IsEthAddress('user')\n    // @IsEthAddressArray('assets')\n    @IsEthAddress('to')\n    { user, assets, to }: ClaimRewardsMethodType\n  ): EthereumTransactionTypeExtended[] {\n    const incentivesContract: IAaveIncentivesController = this.getContractInstance(\n      this.incentivesControllerAddress\n    );\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        incentivesContract.populateTransaction.claimRewards(\n          assets,\n          constants.MaxUint256.toString(),\n          to || user\n        ),\n      from: user,\n    });\n\n    return [\n      {\n        tx: txCallback,\n        txType: eEthereumTxType.REWARD_ACTION,\n        gas: this.generateTxPriceEstimation([], txCallback),\n      },\n    ];\n  }\n}\n","import { TxBuilderConfig } from '../types';\n\nexport const defaultConfig: TxBuilderConfig = {\n  governance: {\n    mainnet: {\n      AAVE_GOVERNANCE_V2: '0xEC568fffba86c094cf06b22134B23074DFE2252c',\n      AAVE_GOVERNANCE_V2_EXECUTOR_SHORT:\n        '0x61910EcD7e8e942136CE7Fe7943f956cea1CC2f7',\n      AAVE_GOVERNANCE_V2_EXECUTOR_LONG:\n        '0xEE56e2B3D491590B5b31738cC34d5232F378a8D5',\n      AAVE_GOVERNANCE_V2_HELPER: '0x16ff7583ea21055bf5f929ec4b896d997ff35847',\n    },\n    kovan: {\n      AAVE_GOVERNANCE_V2: '0xc2eBaB3Bac8f2f5028f5C7317027A41EBFCa31D2',\n      AAVE_GOVERNANCE_V2_EXECUTOR_SHORT:\n        '0x462eD5dc919BE6C96639D5f31ab919EBA8F31831',\n      AAVE_GOVERNANCE_V2_EXECUTOR_LONG:\n        '0x7e5195b0A6a60b371Ba3276032CF6958eADFA652',\n      AAVE_GOVERNANCE_V2_HELPER: '0xffd5BEb5712952FC9a9DDC7499487422B29Fdda6',\n    },\n  },\n  lendingPool: {\n    mainnet: {\n      proto: {\n        LENDING_POOL: '0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9',\n        WETH_GATEWAY: '0xcc9a0B7c43DC2a5F023Bb9b738E45B0Ef6B06E04',\n        FLASH_LIQUIDATION_ADAPTER: '0xE377fB98512D7b04827e56BC84e1838804a8019D',\n        REPAY_WITH_COLLATERAL_ADAPTER:\n          '0x498c5431eb517101582988fbb36431ddaac8f4b1',\n        SWAP_COLLATERAL_ADAPTER: '0x135896DE8421be2ec868E0b811006171D9df802A',\n      },\n      amm: {\n        LENDING_POOL: '0x7937d4799803fbbe595ed57278bc4ca21f3bffcb',\n        WETH_GATEWAY: '0xcc9a0B7c43DC2a5F023Bb9b738E45B0Ef6B06E04',\n        FLASH_LIQUIDATION_ADAPTER: '0xE377fB98512D7b04827e56BC84e1838804a8019D',\n        REPAY_WITH_COLLATERAL_ADAPTER:\n          '0x498c5431eb517101582988fbb36431ddaac8f4b1',\n        SWAP_COLLATERAL_ADAPTER: '0x135896DE8421be2ec868E0b811006171D9df802A',\n      },\n    },\n    kovan: {\n      proto: {\n        LENDING_POOL: '0xE0fBa4Fc209b4948668006B2bE61711b7f465bAe',\n        WETH_GATEWAY: '0xA61ca04DF33B72b235a8A28CfB535bb7A5271B70',\n        FLASH_LIQUIDATION_ADAPTER: '0x9D50F0b23b1805773f607F0B4678d724322B7AC2',\n        REPAY_WITH_COLLATERAL_ADAPTER:\n          '0xf86Be05f535EC2d217E4c6116B3fa147ee5C05A1',\n        SWAP_COLLATERAL_ADAPTER: '0xC18451d36aA370fDACe8d45839bF975F48f7AEa1',\n        FAUCET: '0x600103d518cC5E8f3319D532eB4e5C268D32e604',\n      },\n      amm: {\n        LENDING_POOL: '0x762E2a3BBe729240ea44D31D5a81EAB44d34ef01',\n        WETH_GATEWAY: '0xA61ca04DF33B72b235a8A28CfB535bb7A5271B70',\n        FLASH_LIQUIDATION_ADAPTER: '0x9D50F0b23b1805773f607F0B4678d724322B7AC2',\n        REPAY_WITH_COLLATERAL_ADAPTER:\n          '0xf86Be05f535EC2d217E4c6116B3fa147ee5C05A1',\n        SWAP_COLLATERAL_ADAPTER: '0xC18451d36aA370fDACe8d45839bF975F48f7AEa1',\n        FAUCET: '0x600103d518cC5E8f3319D532eB4e5C268D32e604',\n      },\n    },\n    polygon: {\n      proto: {\n        LENDING_POOL: '0x8dFf5E27EA6b7AC08EbFdf9eB090F32ee9a30fcf',\n        WETH_GATEWAY: '0xbEadf48d62aCC944a06EEaE0A9054A90E5A7dc97',\n        SWAP_COLLATERAL_ADAPTER: '0x35784a624D4FfBC3594f4d16fA3801FeF063241c',\n      },\n    },\n    mumbai: {\n      proto: {\n        LENDING_POOL: '0x9198F13B08E299d85E096929fA9781A1E3d5d827',\n        WETH_GATEWAY: '0xee9eE614Ad26963bEc1Bec0D2c92879ae1F209fA',\n        FAUCET: '0x0b3C23243106A69449e79C14c58BB49E358f9B10',\n      },\n    },\n  },\n  staking: {\n    mainnet: {\n      aave: {\n        TOKEN_STAKING: '0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n        STAKING_REWARD_TOKEN: '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9',\n        STAKING_HELPER: '0xce0424653fb2fd48ed1b621bdbd60db16b2e388a',\n      },\n      balancer: {\n        TOKEN_STAKING: '0xa1116930326D21fB917d5A27F1E9943A9595fb47',\n        STAKING_REWARD_TOKEN: '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9',\n      },\n    },\n    kovan: {\n      aave: {\n        TOKEN_STAKING: '0xf2fbf9A6710AfDa1c4AaB2E922DE9D69E0C97fd2',\n        STAKING_REWARD_TOKEN: '0xb597cd8d3217ea6477232f9217fa70837ff667af',\n        STAKING_HELPER: '0xf267aCc8BF1D8b41c89b6dc1a0aD8439dfbc890c',\n      },\n      balancer: {\n        TOKEN_STAKING: '0x31ce45Ab6E26C72c47C52c27498D460099545ef2',\n        STAKING_REWARD_TOKEN: '0xb597cd8d3217ea6477232f9217fa70837ff667af',\n      },\n    },\n  },\n  incentives: {\n    mainnet: {\n      INCENTIVES_CONTROLLER: '0xd784927Ff2f95ba542BfC824c8a8a98F3495f6b5',\n      INCENTIVES_CONTROLLER_REWARD_TOKEN:\n        '0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n    },\n    polygon: {\n      INCENTIVES_CONTROLLER: '0x357d51124f59836ded84c8a1730d72b749d8bc23',\n      INCENTIVES_CONTROLLER_REWARD_TOKEN:\n        '0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270',\n    },\n    mumbai: {\n      INCENTIVES_CONTROLLER: '0xd41aE58e803Edf4304334acCE4DC4Ec34a63C644',\n      INCENTIVES_CONTROLLER_REWARD_TOKEN:\n        '0x9c3c9283d3e44854697cd22d3faa240cfb032889',\n    },\n  },\n  migrator: {\n    mainnet: {\n      LEND_TO_AAVE_MIGRATOR: '0x317625234562b1526ea2fac4030ea499c5291de4',\n    },\n    kovan: {\n      LEND_TO_AAVE_MIGRATOR: '0x8cC8965FEf45a448bdbe3C749683b280eF2E17Ea',\n    },\n  },\n};\n","import { ethers, providers } from 'ethers';\nimport FaucetInterface from './interfaces/Faucet';\nimport IERC20ServiceInterface from './interfaces/ERC20';\nimport LTAMigratorInterface from './interfaces/LTAMigrator';\nimport StakingInterface from './interfaces/Staking';\nimport SynthetixInterface from './interfaces/Synthetix';\nimport ERC20Service from './services/ERC20';\nimport FaucetService from './services/Faucet';\nimport LTAMigratorService from './services/LTAMigrator';\nimport StakingService from './services/Staking';\nimport SynthetixService from './services/SynthetixService';\nimport {\n  ChainId,\n  Configuration,\n  DefaultProviderKeys,\n  Network,\n  TxBuilderConfig,\n} from './types';\nimport IncentivesController, {\n  IncentivesControllerInterface,\n} from './services/IncentivesController';\nimport { defaultConfig } from './config/defaultConfig';\n\nexport default class BaseTxBuilder {\n  readonly configuration: Configuration;\n\n  public erc20Service: IERC20ServiceInterface;\n\n  public synthetixService: SynthetixInterface;\n\n  public ltaMigratorService: LTAMigratorInterface;\n\n  public incentiveService: IncentivesControllerInterface;\n\n  readonly stakings: { [stake: string]: StakingInterface };\n\n  readonly faucets: { [market: string]: FaucetInterface };\n\n  readonly txBuilderConfig: TxBuilderConfig;\n\n  constructor(\n    network: Network = Network.mainnet,\n    injectedProvider?: providers.Provider | string | undefined,\n    defaultProviderKeys?: DefaultProviderKeys,\n    config: TxBuilderConfig = defaultConfig\n  ) {\n    this.txBuilderConfig = config;\n    let provider: providers.Provider;\n    // TODO: this is probably not enough as we use network down the road\n    const chainId = ChainId[network];\n\n    if (!injectedProvider) {\n      if (defaultProviderKeys && Object.keys(defaultProviderKeys).length > 1) {\n        provider = ethers.getDefaultProvider(network, defaultProviderKeys);\n      } else {\n        provider = ethers.getDefaultProvider(network);\n        console.log(\n          `These API keys are a provided as a community resource by the backend services for low-traffic projects and for early prototyping.\n          It is highly recommended to use own keys: https://docs.ethers.io/v5/api-keys/`\n        );\n      }\n    } else if (typeof injectedProvider === 'string') {\n      provider = new providers.StaticJsonRpcProvider(injectedProvider, chainId);\n    } else if (injectedProvider instanceof providers.Provider) {\n      provider = injectedProvider;\n    } else {\n      provider = new providers.Web3Provider(injectedProvider, chainId);\n    }\n\n    this.configuration = { network, provider };\n\n    this.erc20Service = new ERC20Service(this.configuration);\n    this.synthetixService = new SynthetixService(this.configuration);\n\n    this.ltaMigratorService = new LTAMigratorService(\n      this.configuration,\n      this.erc20Service,\n      this.txBuilderConfig.migrator?.[network]\n    );\n\n    this.incentiveService = new IncentivesController(\n      this.configuration,\n      this.txBuilderConfig.incentives?.[network]\n    );\n\n    this.stakings = {};\n    this.faucets = {};\n  }\n\n  public getFaucet = (market: string): FaucetInterface => {\n    if (!this.faucets[market]) {\n      const { network } = this.configuration;\n      this.faucets[market] = new FaucetService(\n        this.configuration,\n        this.txBuilderConfig.lendingPool?.[network]?.[market]\n      );\n    }\n    return this.faucets[market];\n  };\n\n  public getStaking = (stake: string): StakingInterface => {\n    if (!this.stakings[stake]) {\n      const { network } = this.configuration;\n      const stakingConfig = this.txBuilderConfig.staking?.[network]?.[stake];\n\n      this.stakings[stake] = new StakingService(\n        this.configuration,\n        this.erc20Service,\n        stake,\n        stakingConfig\n      );\n    }\n    return this.stakings[stake];\n  };\n}\n","import { constants } from 'ethers';\nimport { IWETHGateway, IWETHGateway__factory } from '../contract-types';\nimport BaseDebtTokenInterface from '../interfaces/BaseDebtToken';\nimport IERC20ServiceInterface from '../interfaces/ERC20';\nimport WETHGatewayInterface from '../interfaces/WETHGateway';\nimport {\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  InterestRate,\n  LendingPoolMarketConfig,\n  ProtocolAction,\n  transactionType,\n  tStringDecimalUnits,\n} from '../types';\nimport {\n  WETHBorrowParamsType,\n  WETHDepositParamsType,\n  WETHRepayParamsType,\n  WETHWithdrawParamsType,\n} from '../types/WethGatewayMethodTypes';\nimport { parseNumber } from '../utils/parsings';\nimport { WETHValidator } from '../validators/methodValidators';\nimport {\n  IsEthAddress,\n  IsPositiveAmount,\n  IsPositiveOrMinusOneAmount,\n} from '../validators/paramValidators';\nimport BaseService from './BaseService';\n\nexport default class WETHGatewayService\n  extends BaseService<IWETHGateway>\n  implements WETHGatewayInterface {\n  readonly wethGatewayAddress: string;\n\n  readonly config: Configuration;\n\n  readonly baseDebtTokenService: BaseDebtTokenInterface;\n\n  readonly erc20Service: IERC20ServiceInterface;\n\n  readonly wethGatewayConfig: LendingPoolMarketConfig | undefined;\n\n  constructor(\n    config: Configuration,\n    baseDebtTokenService: BaseDebtTokenInterface,\n    erc20Service: IERC20ServiceInterface,\n    wethGatewayConfig: LendingPoolMarketConfig | undefined\n  ) {\n    super(config, IWETHGateway__factory);\n    this.wethGatewayConfig = wethGatewayConfig;\n    this.baseDebtTokenService = baseDebtTokenService;\n    this.erc20Service = erc20Service;\n\n    this.wethGatewayAddress = this.wethGatewayConfig?.WETH_GATEWAY || '';\n  }\n\n  @WETHValidator\n  public async depositETH(\n    @IsEthAddress('lendingPool')\n    @IsEthAddress('user')\n    @IsEthAddress('onBehalfOf')\n    @IsPositiveAmount('amount')\n    {\n      lendingPool,\n      user,\n      amount,\n      onBehalfOf,\n      referralCode,\n    }: WETHDepositParamsType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const convertedAmount: tStringDecimalUnits = parseNumber(amount, 18);\n\n    const wethGatewayContract: IWETHGateway = this.getContractInstance(\n      this.wethGatewayAddress\n    );\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        wethGatewayContract.populateTransaction.depositETH(\n          lendingPool,\n          onBehalfOf || user,\n          referralCode || '0'\n        ),\n      from: user,\n      value: convertedAmount,\n    });\n\n    return [\n      {\n        tx: txCallback,\n        txType: eEthereumTxType.DLP_ACTION,\n        gas: this.generateTxPriceEstimation([], txCallback),\n      },\n    ];\n  }\n\n  @WETHValidator\n  public async borrowETH(\n    @IsEthAddress('lendingPool')\n    @IsEthAddress('user')\n    @IsPositiveAmount('amount')\n    @IsEthAddress('debtTokenAddress')\n    {\n      lendingPool,\n      user,\n      amount,\n      debtTokenAddress,\n      interestRateMode,\n      referralCode,\n    }: WETHBorrowParamsType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const convertedAmount: tStringDecimalUnits = parseNumber(amount, 18);\n    const numericRateMode = interestRateMode === InterestRate.Variable ? 2 : 1;\n\n    const delegationApproved: boolean = await this.baseDebtTokenService.isDelegationApproved(\n      debtTokenAddress,\n      user,\n      this.wethGatewayAddress,\n      amount\n    );\n\n    if (!delegationApproved) {\n      const approveDelegationTx: EthereumTransactionTypeExtended = this.baseDebtTokenService.approveDelegation(\n        user,\n        this.wethGatewayAddress,\n        debtTokenAddress,\n        constants.MaxUint256.toString()\n      );\n\n      txs.push(approveDelegationTx);\n    }\n    const wethGatewayContract: IWETHGateway = this.getContractInstance(\n      this.wethGatewayAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        wethGatewayContract.populateTransaction.borrowETH(\n          lendingPool,\n          convertedAmount,\n          numericRateMode,\n          referralCode || '0'\n        ),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.DLP_ACTION,\n      gas: this.generateTxPriceEstimation(\n        txs,\n        txCallback,\n        ProtocolAction.borrowETH\n      ),\n    });\n\n    return txs;\n  }\n\n  @WETHValidator\n  public async withdrawETH(\n    @IsEthAddress('lendingPool')\n    @IsEthAddress('user')\n    @IsEthAddress('onBehalfOf')\n    @IsPositiveOrMinusOneAmount('amount')\n    @IsEthAddress('aTokenAddress')\n    {\n      lendingPool,\n      user,\n      amount,\n      onBehalfOf,\n      aTokenAddress,\n    }: WETHWithdrawParamsType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const { isApproved, approve }: IERC20ServiceInterface = this.erc20Service;\n    const convertedAmount: tStringDecimalUnits =\n      amount === '-1'\n        ? constants.MaxUint256.toString()\n        : parseNumber(amount, 18);\n\n    const approved: boolean = await isApproved(\n      aTokenAddress,\n      user,\n      this.wethGatewayAddress,\n      amount\n    );\n\n    if (!approved) {\n      const approveTx: EthereumTransactionTypeExtended = approve(\n        user,\n        aTokenAddress,\n        this.wethGatewayAddress,\n        constants.MaxUint256.toString()\n      );\n      txs.push(approveTx);\n    }\n    const wethGatewayContract: IWETHGateway = this.getContractInstance(\n      this.wethGatewayAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        wethGatewayContract.populateTransaction.withdrawETH(\n          lendingPool,\n          convertedAmount,\n          onBehalfOf || user\n        ),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.DLP_ACTION,\n      gas: this.generateTxPriceEstimation(\n        txs,\n        txCallback,\n        ProtocolAction.withdrawETH\n      ),\n    });\n\n    return txs;\n  }\n\n  @WETHValidator\n  public async repayETH(\n    @IsEthAddress('lendingPool')\n    @IsEthAddress('user')\n    @IsEthAddress('onBehalfOf')\n    @IsPositiveAmount('amount')\n    {\n      lendingPool,\n      user,\n      amount,\n      interestRateMode,\n      onBehalfOf,\n    }: WETHRepayParamsType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const convertedAmount: tStringDecimalUnits = parseNumber(amount, 18);\n    const numericRateMode = interestRateMode === InterestRate.Variable ? 2 : 1;\n    const wethGatewayContract: IWETHGateway = this.getContractInstance(\n      this.wethGatewayAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        wethGatewayContract.populateTransaction.repayETH(\n          lendingPool,\n          convertedAmount,\n          numericRateMode,\n          onBehalfOf || user\n        ),\n      gasSurplus: 30,\n      from: user,\n      value: convertedAmount,\n    });\n\n    return [\n      {\n        tx: txCallback,\n        txType: eEthereumTxType.DLP_ACTION,\n        gas: this.generateTxPriceEstimation([], txCallback),\n      },\n    ];\n  }\n}\n","import { BigNumber } from 'ethers';\nimport { IDebtTokenBase, IDebtTokenBase__factory } from '../contract-types';\nimport BaseDebtTokenInterface from '../interfaces/BaseDebtToken';\nimport IERC20ServiceInterface from '../interfaces/ERC20';\nimport {\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  tEthereumAddress,\n  transactionType,\n  tStringCurrencyUnits,\n  tStringDecimalUnits,\n} from '../types';\nimport { parseNumber } from '../utils/parsings';\nimport BaseService from './BaseService';\n\nexport default class BaseDebtToken\n  extends BaseService<IDebtTokenBase>\n  implements BaseDebtTokenInterface {\n  readonly erc20Service: IERC20ServiceInterface;\n\n  constructor(config: Configuration, erc20Service: IERC20ServiceInterface) {\n    super(config, IDebtTokenBase__factory);\n    this.erc20Service = erc20Service;\n  }\n\n  public approveDelegation(\n    user: tEthereumAddress,\n    delegatee: tEthereumAddress,\n    debtTokenAddress: tEthereumAddress,\n    amount: tStringDecimalUnits\n  ): EthereumTransactionTypeExtended {\n    const debtTokenContract: IDebtTokenBase = this.getContractInstance(\n      debtTokenAddress\n    );\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        debtTokenContract.populateTransaction.approveDelegation(\n          delegatee,\n          amount\n        ),\n      from: user,\n    });\n\n    return {\n      tx: txCallback,\n      txType: eEthereumTxType.ERC20_APPROVAL,\n      gas: this.generateTxPriceEstimation([], txCallback),\n    };\n  }\n\n  public async isDelegationApproved(\n    debtTokenAddress: tEthereumAddress,\n    allowanceGiver: tEthereumAddress,\n    allowanceReceiver: tEthereumAddress,\n    amount: tStringCurrencyUnits\n  ): Promise<boolean> {\n    const decimals: number = await this.erc20Service.decimalsOf(\n      debtTokenAddress\n    );\n    const debtTokenContract: IDebtTokenBase = this.getContractInstance(\n      debtTokenAddress\n    );\n    const delegatedAllowance: BigNumber = await debtTokenContract.borrowAllowance(\n      allowanceGiver,\n      allowanceReceiver\n    );\n    const amountBNWithDecimals: BigNumber = BigNumber.from(\n      parseNumber(amount, decimals)\n    );\n\n    return delegatedAllowance.gt(amountBNWithDecimals);\n  }\n}\n","import {\n  IRepayWithCollateral,\n  IRepayWithCollateral__factory,\n} from '../contract-types';\nimport RepayWithCollateralAdapterInterface from '../interfaces/RepayWithCollateralAdapter';\nimport {\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  LendingPoolMarketConfig,\n  ProtocolAction,\n  transactionType,\n} from '../types';\nimport { RepayWithCollateralType } from '../types/RepayWithCollateralMethodTypes';\nimport { RepayWithCollateralValidator } from '../validators/methodValidators';\nimport { IsEthAddress, IsPositiveAmount } from '../validators/paramValidators';\nimport BaseService from './BaseService';\n\nexport default class RepayWithCollateralAdapterService\n  extends BaseService<IRepayWithCollateral>\n  implements RepayWithCollateralAdapterInterface {\n  readonly repayWithCollateralAddress: string;\n\n  readonly repayWithCollateralConfig: LendingPoolMarketConfig | undefined;\n\n  constructor(\n    config: Configuration,\n    repayWithCollateralConfig: LendingPoolMarketConfig | undefined\n  ) {\n    super(config, IRepayWithCollateral__factory);\n    this.repayWithCollateralConfig = repayWithCollateralConfig;\n\n    this.repayWithCollateralAddress =\n      this.repayWithCollateralConfig?.REPAY_WITH_COLLATERAL_ADAPTER || '';\n  }\n\n  @RepayWithCollateralValidator\n  public swapAndRepay(\n    @IsEthAddress('user')\n    @IsEthAddress('collateralAsset')\n    @IsEthAddress('debtAsset')\n    @IsPositiveAmount('collateralAmount')\n    @IsPositiveAmount('debtRepayAmount')\n    {\n      user,\n      collateralAsset,\n      debtAsset,\n      collateralAmount,\n      debtRepayAmount,\n      debtRateMode,\n      permit,\n      useEthPath,\n    }: RepayWithCollateralType,\n    txs?: EthereumTransactionTypeExtended[]\n  ): EthereumTransactionTypeExtended {\n    const repayWithCollateralContract: IRepayWithCollateral = this.getContractInstance(\n      this.repayWithCollateralAddress\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        repayWithCollateralContract.populateTransaction.swapAndRepay(\n          collateralAsset,\n          debtAsset,\n          collateralAmount,\n          debtRepayAmount,\n          debtRateMode,\n          permit,\n          useEthPath || false\n        ),\n      from: user,\n    });\n\n    return {\n      tx: txCallback,\n      txType: eEthereumTxType.DLP_ACTION,\n      gas: this.generateTxPriceEstimation(\n        txs || [],\n        txCallback,\n        ProtocolAction.repayCollateral\n      ),\n    };\n  }\n}\n","import { BytesLike } from 'ethers';\nimport { tEthereumAddress } from '.';\n\nexport enum ExecutorType {\n  Short,\n  Long,\n}\n\nexport type GovCreateType = {\n  user: tEthereumAddress;\n  targets: tEthereumAddress[];\n  values: string[];\n  signatures: string[];\n  calldatas: BytesLike[];\n  withDelegateCalls: boolean[];\n  ipfsHash: BytesLike;\n  executor: ExecutorType;\n};\nexport type GovCancelType = {\n  user: tEthereumAddress;\n  proposalId: number;\n};\nexport type GovQueueType = {\n  user: tEthereumAddress;\n  proposalId: number;\n};\nexport type GovExecuteType = {\n  user: tEthereumAddress;\n  proposalId: number;\n};\nexport type GovSubmitVoteType = {\n  user: tEthereumAddress;\n  proposalId: number;\n  support: boolean;\n};\nexport type GovSubmitVoteSignType = {\n  user: tEthereumAddress;\n  proposalId: number;\n  support: boolean;\n  signature: string;\n};\n\nexport type GovSignVotingType = {\n  user: tEthereumAddress;\n  support: boolean;\n  proposalId: number;\n  nonce: number;\n};\n\nexport type GovGetProposalsType = {\n  skip: number;\n  limit: number;\n};\n\nexport type GovGetProposalType = {\n  proposalId: number;\n};\n\nexport type GovGetVotingSupplyType = {\n  block: number;\n  strategy: tEthereumAddress;\n};\n\nexport type GovGetVotingAtBlockType = {\n  user: tEthereumAddress;\n  strategy: tEthereumAddress;\n  block: number;\n};\n\nexport type GovGetTokensVotingPower = {\n  user: tEthereumAddress;\n  tokens: tEthereumAddress[];\n};\n\nexport type GovGetVoteOnProposal = {\n  proposalId: string;\n  user: tEthereumAddress;\n};\n","import { BigNumber } from 'ethers';\nimport { tEthereumAddress } from '.';\n\nexport enum ProposalState {\n  Pending = 'Pending',\n  Canceled = 'Canceled',\n  Active = 'Active',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Queued = 'Queued',\n  Expired = 'Expired',\n  Executed = 'Executed',\n}\n\nexport type Proposal = {\n  id: number;\n  title: string;\n  description: string;\n  shortDescription: string;\n  creator: tEthereumAddress;\n  executor: tEthereumAddress;\n  targets: tEthereumAddress[];\n  values: BigNumber[];\n  signatures: string[];\n  calldatas: string[];\n  withDelegatecalls: boolean[];\n  startBlock: number;\n  endBlock: number;\n  executionTime: string;\n  executionTimeWithGracePeriod: string;\n  forVotes: string;\n  againstVotes: string;\n  executed: boolean;\n  canceled: boolean;\n  strategy: string;\n  ipfsHash: string;\n  state: ProposalState;\n  minimumQuorum: string;\n  minimumDiff: string;\n  proposalCreated: number;\n  totalVotingSupply: string;\n};\n\nexport type ProposalRPC = {\n  totalVotingSupply: BigNumber;\n  minimumQuorum: BigNumber;\n  minimumDiff: BigNumber;\n  executionTimeWithGracePeriod: BigNumber;\n  proposalCreated: BigNumber;\n  id: BigNumber;\n  creator: string;\n  executor: string;\n  targets: string[];\n  values: BigNumber[];\n  signatures: string[];\n  calldatas: string[];\n  withDelegatecalls: boolean[];\n  startBlock: BigNumber;\n  endBlock: BigNumber;\n  executionTime: BigNumber;\n  forVotes: BigNumber;\n  againstVotes: BigNumber;\n  executed: boolean;\n  canceled: boolean;\n  strategy: string;\n  ipfsHash: string;\n  proposalState: number;\n};\n\nexport type ProposalMetadata = {\n  title: string;\n  description: string;\n  shortDescription: string;\n  ipfsHash: string;\n};\n\nexport type Power = {\n  votingPower: BigNumber;\n  delegatedAddressVotingPower: string;\n  propositionPower: BigNumber;\n  delegatedAddressPropositionPower: string;\n};\n\nexport type Vote = { support: boolean; votingPower: BigNumber };\n","import axios from 'axios';\nimport { base58 } from 'ethers/lib/utils';\nimport { ProposalMetadata } from '../types/GovernanceV2ReturnTypes';\n\nconst ipfsEndpoint = 'https://cloudflare-ipfs.com/ipfs';\n\nexport function getLink(hash: string): string {\n  return `${ipfsEndpoint}/${hash}`;\n}\n\ninterface MemorizeMetadata {\n  [key: string]: ProposalMetadata;\n}\n\nconst MEMORIZE: MemorizeMetadata = {};\n\nexport async function getProposalMetadata(\n  hash: string\n): Promise<ProposalMetadata> {\n  const ipfsHash = base58.encode(Buffer.from(`1220${hash.slice(2)}`, 'hex'));\n  if (MEMORIZE[ipfsHash]) return MEMORIZE[ipfsHash];\n  try {\n    const { data } = await axios.get(getLink(ipfsHash), { timeout: 2000 });\n\n    if (!data?.title) {\n      throw Error('Missing title field at proposal metadata.');\n    }\n    if (!data?.description) {\n      throw Error('Missing description field at proposal metadata.');\n    }\n    if (!data?.shortDescription) {\n      throw Error('Missing shortDescription field at proposal metadata.');\n    }\n\n    MEMORIZE[ipfsHash] = {\n      ipfsHash,\n      title: data.title,\n      description: data.description,\n      shortDescription: data.shortDescription,\n    };\n    return MEMORIZE[ipfsHash];\n  } catch (e) {\n    console.error(`@aave/protocol-js: IPFS fetch Error: ${e.message}`);\n    return {\n      ipfsHash,\n      title: `Proposal - ${ipfsHash}`,\n      description: `Proposal with invalid metadata format or IPFS gateway is down`,\n      shortDescription: `Proposal with invalid metadata format or IPFS gateway is down`,\n    };\n  }\n}\n","import { Signature, utils } from 'ethers';\nimport { formatEther } from 'ethers/lib/utils';\nimport {\n  IGovernanceStrategy,\n  IGovernanceStrategy__factory,\n  IGovernanceV2Helper,\n  IGovernanceV2Helper__factory,\n} from '../../contract-types';\nimport { IAaveGovernanceV2__factory } from '../../contract-types/factories/IAaveGovernanceV2__factory';\nimport { IAaveGovernanceV2 } from '../../contract-types/IAaveGovernanceV2';\nimport AaveGovernanceV2Interface from '../../interfaces/v2/AaveGovernanceV2';\nimport {\n  ChainId,\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  GovernanceConfig,\n  tEthereumAddress,\n  transactionType,\n} from '../../types';\nimport {\n  ExecutorType,\n  GovCancelType,\n  GovCreateType,\n  GovExecuteType,\n  GovGetProposalsType,\n  GovGetProposalType,\n  GovGetVotingAtBlockType,\n  GovGetVotingSupplyType,\n  GovQueueType,\n  GovSignVotingType,\n  GovSubmitVoteSignType,\n  GovSubmitVoteType,\n  GovGetTokensVotingPower as GovGetPower,\n  GovGetVoteOnProposal,\n} from '../../types/GovernanceV2MethodTypes';\nimport {\n  Proposal,\n  ProposalState,\n  Power,\n  ProposalRPC,\n  Vote,\n} from '../../types/GovernanceV2ReturnTypes';\nimport { getProposalMetadata } from '../../utils/ipfs';\nimport { GovValidator } from '../../validators/methodValidators';\nimport {\n  Is0OrPositiveAmount,\n  IsEthAddress,\n} from '../../validators/paramValidators';\nimport BaseService from '../BaseService';\n\nconst parseProposal = async (rawProposal: ProposalRPC): Promise<Proposal> => {\n  const {\n    id,\n    creator,\n    executor,\n    targets,\n    values,\n    signatures,\n    calldatas,\n    withDelegatecalls,\n    startBlock,\n    endBlock,\n    executionTime,\n    forVotes,\n    againstVotes,\n    executed,\n    canceled,\n    strategy,\n    ipfsHash: ipfsHex,\n    totalVotingSupply,\n    minimumQuorum,\n    minimumDiff,\n    executionTimeWithGracePeriod,\n    proposalCreated,\n    proposalState,\n  } = rawProposal;\n\n  const proposalMetadata = await getProposalMetadata(ipfsHex);\n  const proposal: Proposal = {\n    id: Number(id.toString()),\n    creator,\n    executor,\n    targets,\n    values,\n    signatures,\n    calldatas,\n    withDelegatecalls,\n    startBlock: Number(startBlock.toString()),\n    endBlock: Number(endBlock.toString()),\n    executionTime: executionTime.toString(),\n    forVotes: forVotes.toString(),\n    againstVotes: againstVotes.toString(),\n    executed,\n    canceled,\n    strategy,\n    ipfsHash: proposalMetadata.ipfsHash,\n    state: Object.values(ProposalState)[proposalState],\n    minimumQuorum: minimumQuorum.toString(),\n    minimumDiff: minimumDiff.toString(),\n    executionTimeWithGracePeriod: executionTimeWithGracePeriod.toString(),\n    title: proposalMetadata.title,\n    description: proposalMetadata.description,\n    shortDescription: proposalMetadata.shortDescription,\n    proposalCreated: Number(proposalCreated.toString()),\n    totalVotingSupply: totalVotingSupply.toString(),\n  };\n\n  return proposal;\n};\nexport default class AaveGovernanceV2Service\n  extends BaseService<IAaveGovernanceV2>\n  implements AaveGovernanceV2Interface {\n  readonly aaveGovernanceV2Address: string;\n\n  readonly aaveGovernanceV2HelperAddress: string;\n\n  readonly executors: tEthereumAddress[] = [];\n\n  readonly governanceConfig: GovernanceConfig | undefined;\n\n  constructor(\n    config: Configuration,\n    governanceConfig: GovernanceConfig | undefined\n  ) {\n    super(config, IAaveGovernanceV2__factory);\n    this.governanceConfig = governanceConfig;\n\n    const {\n      AAVE_GOVERNANCE_V2,\n      AAVE_GOVERNANCE_V2_HELPER,\n      AAVE_GOVERNANCE_V2_EXECUTOR_SHORT,\n      AAVE_GOVERNANCE_V2_EXECUTOR_LONG,\n    } = this.governanceConfig || {};\n\n    this.aaveGovernanceV2Address = AAVE_GOVERNANCE_V2 || '';\n    this.aaveGovernanceV2HelperAddress = AAVE_GOVERNANCE_V2_HELPER || '';\n    this.executors[ExecutorType.Short] =\n      AAVE_GOVERNANCE_V2_EXECUTOR_SHORT || '';\n    this.executors[ExecutorType.Long] = AAVE_GOVERNANCE_V2_EXECUTOR_LONG || '';\n  }\n\n  @GovValidator\n  public async create(\n    @IsEthAddress('user')\n    {\n      user,\n      targets,\n      values,\n      signatures,\n      calldatas,\n      withDelegateCalls,\n      ipfsHash,\n      executor,\n    }: GovCreateType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n\n    const govContract: IAaveGovernanceV2 = this.getContractInstance(\n      this.aaveGovernanceV2Address\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        govContract.populateTransaction.create(\n          this.executors[executor],\n          targets,\n          values,\n          signatures,\n          calldatas,\n          withDelegateCalls,\n          ipfsHash\n        ),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.GOVERNANCE_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n    return txs;\n  }\n\n  @GovValidator\n  public async cancel(\n    @IsEthAddress('user')\n    @Is0OrPositiveAmount('proposalId')\n    { user, proposalId }: GovCancelType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const govContract: IAaveGovernanceV2 = this.getContractInstance(\n      this.aaveGovernanceV2Address\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () => govContract.populateTransaction.cancel(proposalId),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.GOVERNANCE_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n    return txs;\n  }\n\n  @GovValidator\n  public async queue(\n    @IsEthAddress('user')\n    @Is0OrPositiveAmount('proposalId')\n    { user, proposalId }: GovQueueType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const govContract: IAaveGovernanceV2 = this.getContractInstance(\n      this.aaveGovernanceV2Address\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () => govContract.populateTransaction.queue(proposalId),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.GOVERNANCE_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n    return txs;\n  }\n\n  @GovValidator\n  public async execute(\n    @IsEthAddress('user')\n    @Is0OrPositiveAmount('proposalId')\n    { user, proposalId }: GovExecuteType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const govContract: IAaveGovernanceV2 = this.getContractInstance(\n      this.aaveGovernanceV2Address\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () => govContract.populateTransaction.execute(proposalId),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.GOVERNANCE_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n    return txs;\n  }\n\n  @GovValidator\n  public async submitVote(\n    @IsEthAddress('user')\n    @Is0OrPositiveAmount('proposalId')\n    { user, proposalId, support }: GovSubmitVoteType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const govContract: IAaveGovernanceV2 = this.getContractInstance(\n      this.aaveGovernanceV2Address\n    );\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        govContract.populateTransaction.submitVote(proposalId, support),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.GOVERNANCE_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n    return txs;\n  }\n\n  @GovValidator\n  public async signVoting(\n    @Is0OrPositiveAmount('proposalId')\n    { support, proposalId }: GovSignVotingType\n  ): Promise<string> {\n    const typeData = {\n      types: {\n        EIP712Domain: [\n          { name: 'name', type: 'string' },\n          { name: 'chainId', type: 'uint256' },\n          { name: 'verifyingContract', type: 'address' },\n        ],\n        VoteEmitted: [\n          { name: 'id', type: 'uint256' },\n          { name: 'support', type: 'bool' },\n        ],\n      },\n      primaryType: 'VoteEmitted' as const,\n      domain: {\n        name: 'Aave Governance v2',\n        chainId: ChainId[this.config.network],\n        verifyingContract: this.aaveGovernanceV2Address,\n      },\n      message: {\n        support,\n        id: proposalId,\n      },\n    };\n\n    return JSON.stringify(typeData);\n  }\n\n  @GovValidator\n  public async submitVoteBySignature(\n    @IsEthAddress('user')\n    @Is0OrPositiveAmount('proposalId')\n    { user, proposalId, support, signature }: GovSubmitVoteSignType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const govContract: IAaveGovernanceV2 = this.getContractInstance(\n      this.aaveGovernanceV2Address\n    );\n\n    const sig: Signature = utils.splitSignature(signature);\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        govContract.populateTransaction.submitVoteBySignature(\n          proposalId,\n          support,\n          sig.v,\n          sig.r,\n          sig.s\n        ),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.GOVERNANCE_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n    return txs;\n  }\n\n  @GovValidator\n  public async getProposals({\n    skip,\n    limit,\n  }: GovGetProposalsType): Promise<Proposal[]> {\n    const { provider }: Configuration = this.config;\n    const helper: IGovernanceV2Helper = IGovernanceV2Helper__factory.connect(\n      this.aaveGovernanceV2HelperAddress,\n      provider\n    );\n\n    const result = await helper.getProposals(\n      skip.toString(),\n      limit.toString(),\n      this.aaveGovernanceV2Address\n    );\n\n    const proposals: Promise<Proposal[]> = Promise.all(\n      result.map(\n        async (rawProposal: ProposalRPC): Promise<Proposal> =>\n          parseProposal(rawProposal)\n      )\n    );\n\n    return proposals;\n  }\n\n  @GovValidator\n  public async getProposal({\n    proposalId,\n  }: GovGetProposalType): Promise<Proposal> {\n    const { provider }: Configuration = this.config;\n    const helper: IGovernanceV2Helper = IGovernanceV2Helper__factory.connect(\n      this.aaveGovernanceV2HelperAddress,\n      provider\n    );\n\n    const proposal = await helper.getProposal(\n      proposalId,\n      this.aaveGovernanceV2Address\n    );\n\n    return parseProposal(proposal);\n  }\n\n  @GovValidator\n  public async getPropositionPowerAt({\n    user,\n    block,\n    strategy,\n  }: GovGetVotingAtBlockType): Promise<string> {\n    const { provider }: Configuration = this.config;\n    const proposalStrategy: IGovernanceStrategy = IGovernanceStrategy__factory.connect(\n      strategy,\n      provider\n    );\n\n    const power = await proposalStrategy.getPropositionPowerAt(\n      user,\n      block.toString()\n    );\n    return formatEther(power);\n  }\n\n  @GovValidator\n  public async getVotingPowerAt({\n    user,\n    block,\n    strategy,\n  }: GovGetVotingAtBlockType): Promise<string> {\n    const { provider }: Configuration = this.config;\n    const proposalStrategy: IGovernanceStrategy = IGovernanceStrategy__factory.connect(\n      strategy,\n      provider\n    );\n\n    const power = await proposalStrategy.getVotingPowerAt(\n      user,\n      block.toString()\n    );\n    return formatEther(power);\n  }\n\n  @GovValidator\n  public async getTotalPropositionSupplyAt({\n    block,\n    strategy,\n  }: GovGetVotingSupplyType): Promise<string> {\n    const { provider }: Configuration = this.config;\n    const proposalStrategy: IGovernanceStrategy = IGovernanceStrategy__factory.connect(\n      strategy,\n      provider\n    );\n\n    const total = await proposalStrategy.getTotalPropositionSupplyAt(\n      block.toString()\n    );\n    return formatEther(total);\n  }\n\n  @GovValidator\n  public async getTotalVotingSupplyAt({\n    block,\n    strategy,\n  }: GovGetVotingSupplyType): Promise<string> {\n    const { provider }: Configuration = this.config;\n    const proposalStrategy: IGovernanceStrategy = IGovernanceStrategy__factory.connect(\n      strategy,\n      provider\n    );\n\n    const total = await proposalStrategy.getTotalVotingSupplyAt(\n      block.toString()\n    );\n    return formatEther(total);\n  }\n\n  @GovValidator\n  public async getTokensPower({ user, tokens }: GovGetPower): Promise<Power[]> {\n    const { provider }: Configuration = this.config;\n    const helper: IGovernanceV2Helper = IGovernanceV2Helper__factory.connect(\n      this.aaveGovernanceV2HelperAddress,\n      provider\n    );\n    const power = helper.getTokensPower(user, tokens);\n    return power as Promise<Power[]>;\n  }\n\n  @GovValidator\n  public async getVoteOnProposal({\n    proposalId,\n    user,\n  }: GovGetVoteOnProposal): Promise<Vote> {\n    const govContract: IAaveGovernanceV2 = this.getContractInstance(\n      this.aaveGovernanceV2Address\n    );\n    return govContract.getVoteOnProposal(proposalId, user) as Promise<Vote>;\n  }\n}\n","import { splitSignature } from 'ethers/lib/utils';\nimport {\n  IGovernancePowerDelegationToken,\n  IGovernancePowerDelegationToken__factory,\n} from '../../contract-types';\nimport GovernanceDelegationTokenInterface from '../../interfaces/v2/GovernanceDelegationToken';\nimport {\n  ChainId,\n  Configuration,\n  eEthereumTxType,\n  EthereumTransactionTypeExtended,\n  tEthereumAddress,\n  transactionType,\n  tStringDecimalUnits,\n} from '../../types';\nimport {\n  GovDelegate,\n  GovDelegateBySig,\n  GovDelegateByType,\n  GovDelegateByTypeBySig,\n  GovGetDelegateeByType,\n  GovGetNonce,\n  GovGetPowerAtBlock,\n  GovGetPowerCurrent,\n  GovPrepareDelegateSig,\n  GovPrepareDelegateSigByType,\n} from '../../types/GovDelegationMethodTypes';\nimport { canBeEnsAddress } from '../../utils/parsings';\nimport { GovDelegationValidator } from '../../validators/methodValidators';\nimport {\n  Is0OrPositiveAmount,\n  IsEthAddress,\n  IsEthAddressOrENS,\n  IsPositiveAmount,\n} from '../../validators/paramValidators';\nimport BaseService from '../BaseService';\n\nexport default class GovernanceDelegationTokenService\n  extends BaseService<IGovernancePowerDelegationToken>\n  implements GovernanceDelegationTokenInterface {\n  constructor(config: Configuration) {\n    super(config, IGovernancePowerDelegationToken__factory);\n  }\n\n  @GovDelegationValidator\n  public async delegate(\n    @IsEthAddress('user')\n    @IsEthAddressOrENS('delegatee')\n    @IsEthAddress('governanceToken')\n    { user, delegatee, governanceToken }: GovDelegate\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const governanceDelegationToken: IGovernancePowerDelegationToken = this.getContractInstance(\n      governanceToken\n    );\n\n    const delegateeAddress: string = await this.getDelegateeAddress(delegatee);\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        governanceDelegationToken.populateTransaction.delegate(\n          delegateeAddress\n        ),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.GOV_DELEGATION_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n\n    return txs;\n  }\n\n  @GovDelegationValidator\n  public async delegateByType(\n    @IsEthAddress('user')\n    @IsEthAddressOrENS('delegatee')\n    @IsEthAddress('governanceToken')\n    { user, delegatee, delegationType, governanceToken }: GovDelegateByType\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const governanceDelegationToken: IGovernancePowerDelegationToken = this.getContractInstance(\n      governanceToken\n    );\n\n    const delegateeAddress: string = await this.getDelegateeAddress(delegatee);\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        governanceDelegationToken.populateTransaction.delegateByType(\n          delegateeAddress,\n          delegationType\n        ),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.GOV_DELEGATION_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n\n    return txs;\n  }\n\n  @GovDelegationValidator\n  public async delegateBySig(\n    @IsEthAddress('user')\n    @IsEthAddressOrENS('delegatee')\n    @IsEthAddress('governanceToken')\n    { user, delegatee, expiry, signature, governanceToken }: GovDelegateBySig\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const governanceDelegationToken: IGovernancePowerDelegationToken = this.getContractInstance(\n      governanceToken\n    );\n    const nonce = await this.getNonce({ user, governanceToken });\n    const { v, r, s } = splitSignature(signature);\n\n    const delegateeAddress: string = await this.getDelegateeAddress(delegatee);\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        governanceDelegationToken.populateTransaction.delegateBySig(\n          delegateeAddress,\n          nonce,\n          expiry,\n          v,\n          r,\n          s\n        ),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.GOV_DELEGATION_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n\n    return txs;\n  }\n\n  @GovDelegationValidator\n  public async delegateByTypeBySig(\n    @IsEthAddress('user')\n    @IsEthAddressOrENS('delegatee')\n    @IsEthAddress('governanceToken')\n    {\n      user,\n      delegatee,\n      delegationType,\n      expiry,\n      signature,\n      governanceToken,\n    }: GovDelegateByTypeBySig\n  ): Promise<EthereumTransactionTypeExtended[]> {\n    const txs: EthereumTransactionTypeExtended[] = [];\n    const governanceDelegationToken: IGovernancePowerDelegationToken = this.getContractInstance(\n      governanceToken\n    );\n    const nonce = await this.getNonce({ user, governanceToken });\n    const { v, r, s } = splitSignature(signature);\n\n    const delegateeAddress: string = await this.getDelegateeAddress(delegatee);\n\n    const txCallback: () => Promise<transactionType> = this.generateTxCallback({\n      rawTxMethod: () =>\n        governanceDelegationToken.populateTransaction.delegateByTypeBySig(\n          delegateeAddress,\n          delegationType,\n          nonce,\n          expiry,\n          v,\n          r,\n          s\n        ),\n      from: user,\n    });\n\n    txs.push({\n      tx: txCallback,\n      txType: eEthereumTxType.GOV_DELEGATION_ACTION,\n      gas: this.generateTxPriceEstimation(txs, txCallback),\n    });\n\n    return txs;\n  }\n\n  @GovDelegationValidator\n  public async prepareDelegateSignature(\n    @IsEthAddressOrENS('delegatee')\n    @IsEthAddress('governanceToken')\n    @Is0OrPositiveAmount('nonce')\n    {\n      delegatee,\n      nonce,\n      expiry,\n      governanceTokenName,\n      governanceToken,\n    }: GovPrepareDelegateSig\n  ): Promise<string> {\n    const delegateeAddress: string = await this.getDelegateeAddress(delegatee);\n\n    const typeData = {\n      types: {\n        EIP712Domain: [\n          { name: 'name', type: 'string' },\n          { name: 'chainId', type: 'uint256' },\n          { name: 'verifyingContract', type: 'address' },\n        ],\n        Delegate: [\n          { name: 'delegatee', type: 'address' },\n          { name: 'nonce', type: 'uint256' },\n          { name: 'expiry', type: 'uint256' },\n        ],\n      },\n      primaryType: 'Delegate' as const,\n      domain: {\n        name: governanceTokenName,\n        chainId: ChainId[this.config.network],\n        verifyingContract: governanceToken,\n      },\n      message: {\n        delegatee: delegateeAddress,\n        nonce,\n        expiry,\n      },\n    };\n\n    return JSON.stringify(typeData);\n  }\n\n  @GovDelegationValidator\n  public async prepareDelegateByTypeSignature(\n    @IsEthAddressOrENS('delegatee')\n    @IsEthAddress('governanceToken')\n    @Is0OrPositiveAmount('nonce')\n    {\n      delegatee,\n      type,\n      nonce,\n      expiry,\n      governanceTokenName,\n      governanceToken,\n    }: GovPrepareDelegateSigByType\n  ): Promise<string> {\n    const delegateeAddress: string = await this.getDelegateeAddress(delegatee);\n\n    const typeData = {\n      types: {\n        EIP712Domain: [\n          { name: 'name', type: 'string' },\n          { name: 'chainId', type: 'uint256' },\n          { name: 'verifyingContract', type: 'address' },\n        ],\n        DelegateByType: [\n          { name: 'delegatee', type: 'address' },\n          { name: 'type', type: 'uint256' },\n          { name: 'nonce', type: 'uint256' },\n          { name: 'expiry', type: 'uint256' },\n        ],\n      },\n      primaryType: 'DelegateByType' as const,\n      domain: {\n        name: governanceTokenName,\n        chainId: ChainId[this.config.network],\n        verifyingContract: governanceToken,\n      },\n      message: {\n        delegatee: delegateeAddress,\n        type,\n        nonce,\n        expiry,\n      },\n    };\n\n    return JSON.stringify(typeData);\n  }\n\n  @GovDelegationValidator\n  public async getDelegateeByType(\n    @IsEthAddress('delegator')\n    @IsEthAddress('governanceToken')\n    { delegator, delegationType, governanceToken }: GovGetDelegateeByType\n  ): Promise<tEthereumAddress> {\n    const governanceDelegationToken: IGovernancePowerDelegationToken = this.getContractInstance(\n      governanceToken\n    );\n    return governanceDelegationToken.getDelegateeByType(\n      delegator,\n      delegationType\n    );\n  }\n\n  @GovDelegationValidator\n  public async getPowerCurrent(\n    @IsEthAddress('user')\n    @IsEthAddress('governanceToken')\n    { user, delegationType, governanceToken }: GovGetPowerCurrent\n  ): Promise<tStringDecimalUnits> {\n    const governanceDelegationToken: IGovernancePowerDelegationToken = this.getContractInstance(\n      governanceToken\n    );\n    return (\n      await governanceDelegationToken.getPowerCurrent(user, delegationType)\n    ).toString();\n  }\n\n  @GovDelegationValidator\n  public async getPowerAtBlock(\n    @IsEthAddress('user')\n    @IsEthAddress('governanceToken')\n    @IsPositiveAmount('blockNumber')\n    { user, blockNumber, delegationType, governanceToken }: GovGetPowerAtBlock\n  ): Promise<tStringDecimalUnits> {\n    const governanceDelegationToken: IGovernancePowerDelegationToken = this.getContractInstance(\n      governanceToken\n    );\n    return (\n      await governanceDelegationToken.getPowerAtBlock(\n        user,\n        blockNumber,\n        delegationType\n      )\n    ).toString();\n  }\n\n  @GovDelegationValidator\n  public async getNonce(\n    @IsEthAddress('user')\n    @IsEthAddress('governanceToken')\n    { user, governanceToken }: GovGetNonce\n  ): Promise<tStringDecimalUnits> {\n    const governanceDelegationToken: IGovernancePowerDelegationToken = this.getContractInstance(\n      governanceToken\n    );\n    // eslint-disable-next-line no-underscore-dangle\n    return (await governanceDelegationToken._nonces(user)).toString();\n  }\n\n  private async getDelegateeAddress(delegatee: string): Promise<string> {\n    if (canBeEnsAddress(delegatee)) {\n      const delegateeAddress = await this.config.provider.resolveName(\n        delegatee\n      );\n      if (!delegateeAddress)\n        throw new Error(`Address ${delegatee} is not a valid ENS address`);\n\n      return delegateeAddress;\n    }\n\n    return delegatee;\n  }\n}\n","import { providers } from 'ethers';\nimport { Network, DefaultProviderKeys, TxBuilderConfig } from './types';\nimport TxBuilderInterface from './interfaces/TxBuilder';\nimport LendingPoolInterface from './interfaces/v2/LendingPool';\nimport LendingPool from './services/v2/LendingPool';\nimport BaseTxBuilder from './txBuilder';\nimport WETHGatewayInterface from './interfaces/WETHGateway';\nimport WETHGatewayService from './services/WETHGateway';\nimport BaseDebtTokenInterface from './interfaces/BaseDebtToken';\nimport BaseDebtToken from './services/BaseDebtToken';\nimport LiquiditySwapAdapterService from './services/LiquiditySwapAdapterParaswap';\nimport LiquiditySwapAdapterInterface from './interfaces/LiquiditySwapAdapterParaswap';\nimport RepayWithCollateralAdapterService from './services/RepayWithCollateralAdapter';\nimport RepayWithCollateralAdapterInterface from './interfaces/RepayWithCollateralAdapter';\nimport AaveGovernanceV2Interface from './interfaces/v2/AaveGovernanceV2';\nimport GovernanceDelegationTokenInterface from './interfaces/v2/GovernanceDelegationToken';\nimport AaveGovernanceV2Service from './services/v2/AaveGovernanceV2';\nimport GovernanceDelegationTokenService from './services/v2/GovernanceDelegationTokenService';\n\nexport default class TxBuilder\n  extends BaseTxBuilder\n  implements TxBuilderInterface {\n  readonly lendingPools: {\n    [market: string]: LendingPoolInterface;\n  };\n\n  readonly wethGateways: {\n    [market: string]: WETHGatewayInterface;\n  };\n\n  readonly swapCollateralAdapters: {\n    [market: string]: LiquiditySwapAdapterInterface;\n  };\n\n  readonly repayWithCollateralAdapters: {\n    [market: string]: RepayWithCollateralAdapterInterface;\n  };\n\n  readonly baseDebtTokenService: BaseDebtTokenInterface;\n\n  public aaveGovernanceV2Service: AaveGovernanceV2Interface;\n\n  public governanceDelegationTokenService: GovernanceDelegationTokenInterface;\n\n  constructor(\n    network: Network = Network.mainnet,\n    injectedProvider?: providers.Provider | string | undefined,\n    defaultProviderKeys?: DefaultProviderKeys,\n    config?: TxBuilderConfig\n  ) {\n    super(network, injectedProvider, defaultProviderKeys, config);\n\n    this.wethGateways = {};\n    this.lendingPools = {};\n    this.swapCollateralAdapters = {};\n    this.repayWithCollateralAdapters = {};\n    this.baseDebtTokenService = new BaseDebtToken(\n      this.configuration,\n      this.erc20Service\n    );\n\n    this.aaveGovernanceV2Service = new AaveGovernanceV2Service(\n      this.configuration,\n      this.txBuilderConfig.governance?.[network]\n    );\n\n    this.governanceDelegationTokenService = new GovernanceDelegationTokenService(\n      this.configuration\n    );\n  }\n\n  public getRepayWithCollateralAdapter = (\n    market: string\n  ): RepayWithCollateralAdapterInterface => {\n    const { network } = this.configuration;\n\n    if (!this.repayWithCollateralAdapters[market]) {\n      this.repayWithCollateralAdapters[\n        market\n      ] = new RepayWithCollateralAdapterService(\n        this.configuration,\n        this.txBuilderConfig.lendingPool?.[network]?.[market]\n      );\n    }\n\n    return this.repayWithCollateralAdapters[market];\n  };\n\n  public getSwapCollateralAdapter = (\n    market: string\n  ): LiquiditySwapAdapterInterface => {\n    const { network } = this.configuration;\n\n    if (!this.swapCollateralAdapters[market]) {\n      this.swapCollateralAdapters[market] = new LiquiditySwapAdapterService(\n        this.configuration,\n        this.txBuilderConfig.lendingPool?.[network]?.[market]\n      );\n    }\n\n    return this.swapCollateralAdapters[market];\n  };\n\n  public getWethGateway = (market: string): WETHGatewayInterface => {\n    const { network } = this.configuration;\n    if (!this.wethGateways[market]) {\n      this.wethGateways[market] = new WETHGatewayService(\n        this.configuration,\n        this.baseDebtTokenService,\n        this.erc20Service,\n        this.txBuilderConfig.lendingPool?.[network]?.[market]\n      );\n    }\n\n    return this.wethGateways[market];\n  };\n\n  public getLendingPool = (market: string): LendingPoolInterface => {\n    const { network } = this.configuration;\n    if (!this.lendingPools[market]) {\n      this.lendingPools[market] = new LendingPool(\n        this.configuration,\n        this.erc20Service,\n        this.synthetixService,\n        this.getWethGateway(market),\n        this.getSwapCollateralAdapter(market),\n        this.getRepayWithCollateralAdapter(market),\n        market,\n        this.txBuilderConfig.lendingPool?.[network]?.[market]\n      );\n    }\n\n    return this.lendingPools[market];\n  };\n}\n"],"names":["BigNumberZD","BigNumber","clone","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","valueToBigNumber","amount","valueToZDBigNumber","bn10","bn10PowLookup","pow10","decimals","pow","normalize","n","normalizeBN","toString","dividedBy","WAD","HALF_WAD","RAY","HALF_RAY","WAD_RAY_RATIO","wadMul","a","b","plus","multipliedBy","div","wadDiv","halfB","rayMul","rayDiv","rayToWad","halfRatio","wadToRay","decimalPlaces","rayPow","p","x","z","modulo","eq","binomialApproximatedRayPow","base","exp","expMinusOne","minus","expMinusTwo","gt","basePowerTwo","basePowerThree","firstTerm","secondTerm","thirdTerm","rayToDecimal","BorrowRateMode","SECONDS_PER_YEAR","ETH_DECIMALS","USD_DECIMALS","RAY_DECIMALS","LTV_PRECISION","calculateCompoundedInterest","rate","currentTimestamp","lastUpdateTimestamp","timeDelta","ratePerSecond","RayMath","getCompoundedBalance","_principalBalance","_reserveIndex","_reserveRate","_lastUpdateTimestamp","principalBalance","compoundedInterest","cumulatedInterest","principalBalanceRay","calculateLinearInterest","timeDeltaInSeconds","getReserveNormalizedIncome","index","getLinearBalance","balance","getCompoundedStableBalance","_userStableRate","calculateHealthFactorFromBalances","collateralBalanceETH","borrowBalanceETH","currentLiquidationThreshold","calculateHealthFactorFromBalancesBigUnits","calculateAvailableBorrowsETH","currentLtv","availableBorrowsETH","calculateAverageRate","index0","index1","timestamp0","timestamp1","getCompoundedBorrowBalance","reserve","userReserve","principalBorrows","borrowRateMode","Variable","variableBorrowRate","variableBorrowIndex","borrowRate","borrowBalanceRay","totalFeesETH","lt","borrowFee","calculateCumulatedBalance","poolReserve","liquidityRate","liquidityIndex","userBalanceIndex","calculateCurrentUnderlyingBalance","principalATokenBalance","redirectedBalance","interestRedirectionAddress","computeUserReserveData","usdPriceEth","priceInEth","price","currentUnderlyingBalance","currentUnderlyingBalanceETH","currentUnderlyingBalanceUSD","toFixed","principalBorrowsETH","principalBorrowsUSD","currentBorrows","currentBorrowsETH","currentBorrowsUSD","originationFeeETH","originationFee","originationFeeUSD","computeRawUserSummaryData","poolReservesData","rawUserReserves","userId","totalLiquidityETH","totalCollateralETH","totalBorrowsETH","userReservesData","map","find","id","Error","computedUserReserve","usageAsCollateralEnabled","usageAsCollateralEnabledOnUser","baseLTVasCollateral","reserveLiquidationThreshold","sort","symbol","healthFactor","totalCollateralUSD","totalLiquidityUSD","totalBorrowsUSD","totalFeesUSD","totalBorrowsWithFeesETH","totalBorrowsWithFeesUSD","totalBorrowsAndFeesETH","maxAmountToWithdrawInEth","currentLoanToValue","reservesData","formatUserSummaryData","userData","reserveDecimals","reserveLiquidationBonus","formatReserves","reserves","reserveIndexes30DaysAgo","reserve30DaysAgo","res","paramsHistory","avg30DaysVariableBorrowRate","timestamp","undefined","avg30DaysLiquidityRate","stableBorrowRate","totalLiquidity","availableLiquidity","totalBorrows","totalBorrowsVariable","totalBorrowsStable","calculateInterestRates","amountToDeposit","amountToBorrow","borrowMode","optimalUtilisationRate","baseVariableBorrowRate","totalDeposits","utilizationRate","currentStableBorrowRate","currentVariableBorrowRate","currentLiquidityRate","excessUtilizationRateRatio","stableRateSlope1","stableRateSlope2","variableRateSlope1","variableRateSlope2","weightedVariableRate","weightedStableRate","averageStableBorrowRate","getEthAndUsdBalance","balanceInEth","balanceInUsd","rewardsInfo","underlyingBalance","scaledATokenBalance","underlyingBalanceETH","underlyingBalanceUSD","variableBorrows","scaledVariableDebt","variableBorrowsETH","variableBorrowsUSD","stableBorrows","principalStableDebt","stableBorrowLastUpdateTimestamp","stableBorrowsETH","stableBorrowsUSD","calculateSupplies","totalScaledVariableDebt","totalPrincipalStableDebt","averageStableRate","stableDebtLastUpdateTimestamp","totalStableDebt","totalVariableDebt","aTokenRewards","calculateRewards","aTokenIncentivesIndex","aTokenincentivesUserIndex","incentivePrecision","rewardTokenDecimals","aIncentivesLastUpdateTimestamp","aEmissionPerSecond","emissionEndTimestamp","rewardTokenPriceEth","aTokenRewardsETH","aTokenRewardsUSD","vTokenRewards","vTokenIncentivesIndex","vTokenincentivesUserIndex","vIncentivesLastUpdateTimestamp","vEmissionPerSecond","vTokenRewardsETH","vTokenRewardsUSD","sTokenRewards","sTokenIncentivesIndex","sTokenincentivesUserIndex","sIncentivesLastUpdateTimestamp","sEmissionPerSecond","sTokenRewardsETH","sTokenRewardsUSD","exactStableBorrowRate","totalRewards","totalRewardsETH","totalRewardsUSD","stableBorrowAPR","stableBorrowAPY","calculateReserveDebt","totalDebt","hasEmission","Math","floor","Date","now","aIncentivesAPY","calculateIncentivesAPY","vIncentivesAPY","sIncentivesAPY","supplyAPY","variableBorrowAPY","reserveFactor","variableBorrowAPR","supplyAPR","calculateReserveDebtSuppliesRaw","emissionPerSecond","rewardTokenPriceInEth","tokenTotalSupplyNormalized","tokenPriceInEth","emissionPerSecondNormalized","emissionPerYear","totalSupplyNormalized","principalUserBalance","reserveIndex","userIndex","precision","reserveIndexTimestamp","totalSupply","actualCurrentTimestamp","currentReserveIndex","reward","InterestRate","Market","Network","ChainId","eEthereumTxType","ProtocolAction","GovernanceVote","Stake","DEFAULT_NULL_VALUE_ON_TX","from","toHexString","DEFAULT_APPROVE_AMOUNT","constants","MaxUint256","MAX_UINT_AMOUNT","SUPER_BIG_ALLOWANCE_NUMBER","API_ETH_MOCK_ADDRESS","uniswapEthAmount","SURPLUS","gasLimitRecommendations","limit","recommended","deposit","withdraw","liquidationCall","liquidationFlash","repay","borrowETH","withdrawETH","swapCollateral","repayCollateral","cosntantAddressesByNetwork","mainnet","SYNTHETIX_PROXY_ADDRESS","IAaveGovernanceV2__factory","connect","address","signerOrProvider","Contract","_abi","anonymous","inputs","indexed","internalType","name","type","outputs","stateMutability","components","IAaveIncentivesController__factory","IAaveStakingHelper__factory","IDebtTokenBase__factory","IERC20Detailed__factory","IFaucet__factory","IGovernancePowerDelegationToken__factory","IGovernanceStrategy__factory","IGovernanceV2Helper__factory","ILendingPool__factory","ILendToAaveMigrator__factory","IMinter__factory","IRepayWithCollateral__factory","IStakedToken__factory","IParaSwapLiquiditySwapAdapter__factory","ISynthetix__factory","IWETHGateway__factory","parseNumber","value","getTxValue","toLowerCase","mintAmountsPerToken","AAVE","BAT","BUSD","DAI","ENJ","KNC","LEND","LINK","MANA","MKR","WETH","REN","REP","SNX","SUSD","TUSD","UNI","USDC","USDT","WBTC","YFI","ZRX","UNIUSDC","UNIDAI","UNIUSDT","UNIDAIETH","UNIUSDCETH","UNISETHETH","UNILENDETH","UNILINKETH","UNIMKRETH","canBeEnsAddress","ensAddress","endsWith","isEthAddressMetadataKey","Symbol","isEthAddressOrENSMetadataKey","isPositiveMetadataKey","isPositiveOrMinusOneMetadataKey","is0OrPositiveMetadataKey","optionalMetadataKey","IsEthAddress","field","target","propertyKey","parameterIndex","existingPossibleAddresses","Reflect","getOwnMetadata","push","defineMetadata","IsEthAddressOrENS","IsPositiveAmount","params","Is0OrPositiveAmount","IsPositiveOrMinusOneAmount","Optional","existingOptionalParameters","optionalValidator","propertyName","methodArguments","optionalParameters","isParamOptional","forEach","isEthAddressValidator","addressParameters","storedParams","utils","isAddress","isOptional","isEthAddressOrEnsValidator","amountGtThan0Validator","amountParameters","Number","amount0OrPositiveValidator","amountGtThan0OrMinus1","amountMinusOneParameters","LPFlashLiquidationValidator","descriptor","method","lendingPoolConfig","LENDING_POOL","FLASH_LIQUIDATION_ADAPTER","console","error","arguments","apply","LPRepayWithCollateralValidator","REPAY_WITH_COLLATERAL_ADAPTER","LPSwapCollateralValidator","SWAP_COLLATERAL_ADAPTER","LPValidator","LTAMigratorValidator","LEND_TO_AAVE_MIGRATOR","migratorConfig","IncentivesValidator","incentivesConfig","INCENTIVES_CONTROLLER","INCENTIVES_CONTROLLER_REWARD_TOKEN","LiquiditySwapValidator","swapCollateralConfig","RepayWithCollateralValidator","repayWithCollateralConfig","StakingValidator","stakingConfig","TOKEN_STAKING","STAKING_REWARD_TOKEN","SignStakingValidator","STAKING_HELPER","FaucetValidator","FAUCET","faucetConfig","WETHValidator","WETH_GATEWAY","wethGatewayConfig","GovValidator","governanceConfig","AAVE_GOVERNANCE_V2","AAVE_GOVERNANCE_V2_HELPER","AAVE_GOVERNANCE_V2_EXECUTOR_SHORT","AAVE_GOVERNANCE_V2_EXECUTOR_LONG","GovDelegationValidator","DEFAULT_SURPLUS","POLYGON_SURPLUS","estimateGasByNetwork","tx","config","gasSurplus","provider","estimateGas","estimatedGas","network","polygon","add","mul","getGasPrice","gasPrice","BaseService","contractFactory","contractInstances","rawTxMethod","action","txRaw","gasLimit","lte","txs","txCallback","force","hasPendingApprovals","txType","ERC20_APPROVAL","gasPriceProv","augustusFromAmountOffsetFromCalldata","calldata","slice","LiquiditySwapAdapterService","liquiditySwapAdapterAddress","swapAndDeposit","user","assetToSwapFrom","assetToSwapTo","amountToSwap","minAmountToReceive","permitParams","augustus","swapCallData","swapAll","liquiditySwapContract","getContractInstance","generateTxCallback","populateTransaction","DLP_ACTION","gas","generateTxPriceEstimation","__decorate","__param","buildParaSwapLiquiditySwapParams","swapAllBalanceOffset","swapCalldata","permitAmount","deadline","v","r","s","defaultAbiCoder","encode","LendingPool","erc20Service","synthetixService","wethGatewayService","liquiditySwapAdapterService","repayWithCollateralAdapterService","market","lendingPoolAddress","flashLiquidationAddress","swapCollateralAddress","repayWithCollateralAddress","onBehalfOf","referralCode","depositETH","lendingPool","isApproved","approve","decimalsOf","convertedAmount","synthetixValidation","fundsAvailable","approved","approveTx","lendingPoolContract","aTokenAddress","borrow","interestRateMode","debtTokenAddress","formatAmount","numericRateMode","repayETH","swapBorrowRateMode","setUsageAsCollateral","usageAsCollateral","setUserUseReserveAsCollateral","liquidator","liquidatedUser","debtReserve","collateralReserve","purchaseAmount","getAToken","liquidateAll","getTokenData","Promise","all","debtReserveInfo","flash","fromAsset","fromAToken","toAsset","fromAmount","minToAmount","permitSignature","tokenDecimals","tokenToDecimals","amountSlippageConverted","amountWithSurplus","convertedAmountWithSurplus","flashLoan","swapAndDepositTx","repayWithCollateral","assetToRepay","repayWithAmount","repayAmount","repayAllDebt","rateMode","useEthPath","fromDecimals","convertedRepayWithAmount","repayAmountWithSurplus","convertedRepayAmount","numericInterestRate","Stable","swapAndRepayTx","swapAndRepay","collateralAsset","debtAsset","collateralAmount","debtRepayAmount","debtRateMode","permit","flashLiquidation","borrowedAsset","debtTokenCover","initiator","addSurplus","convertedDebt","convertedDebtTokenCover","flashBorrowAmount","ERC20Service","token","spender","erc20Contract","userAddress","allowance","amountBNWithDecimals","gte","nameGetter","symbolGetter","decimalsGetter","FaucetService","faucetAddress","faucetContract","mint","tokenSymbol","FAUCET_MINT","LTAMigratorService","migratorAddress","migrateLendToAave","migratorContract","lendToken","migrateFromLEND","MIGRATION_LEND_AAVE","StakingService","tokenStake","stakingContractAddress","stakingRewardTokenContractAddress","stakingHelperContractAddress","stakingHelperContract","signStaking","nonce","stakingContract","STAKED_TOKEN","stakedToken","typeData","types","EIP712Domain","Permit","primaryType","domain","version","chainId","verifyingContract","message","owner","JSON","stringify","stakeWithPermit","signature","stakedTokenDecimals","sig","splitSignature","stake","STAKE_ACTION","redeem","cooldown","claimRewards","REWARD_TOKEN","SynthetixService","toUpperCase","synthAddress","isSnxTransferable","synthContract","transferableSynthetix","transferableAmount","IncentivesController","incentivesControllerAddress","incentivesControllerRewardTokenAddress","assets","to","incentivesContract","REWARD_ACTION","defaultConfig","governance","kovan","proto","amm","mumbai","staking","aave","balancer","incentives","migrator","BaseTxBuilder","injectedProvider","defaultProviderKeys","faucets","configuration","txBuilderConfig","stakings","Object","keys","length","ethers","getDefaultProvider","log","providers","StaticJsonRpcProvider","Provider","Web3Provider","ltaMigratorService","incentiveService","WETHGatewayService","baseDebtTokenService","wethGatewayAddress","wethGatewayContract","isDelegationApproved","delegationApproved","approveDelegationTx","approveDelegation","BaseDebtToken","delegatee","debtTokenContract","allowanceGiver","allowanceReceiver","borrowAllowance","delegatedAllowance","RepayWithCollateralAdapterService","repayWithCollateralContract","ExecutorType","ProposalState","ipfsEndpoint","getLink","hash","MEMORIZE","getProposalMetadata","ipfsHash","base58","Buffer","axios","get","timeout","data","title","description","shortDescription","parseProposal","rawProposal","creator","executor","targets","values","signatures","calldatas","withDelegatecalls","startBlock","endBlock","executionTime","forVotes","againstVotes","executed","canceled","strategy","ipfsHex","totalVotingSupply","minimumQuorum","minimumDiff","executionTimeWithGracePeriod","proposalCreated","proposalState","proposalMetadata","proposal","state","AaveGovernanceV2Service","aaveGovernanceV2Address","aaveGovernanceV2HelperAddress","executors","Short","Long","create","withDelegateCalls","govContract","GOVERNANCE_ACTION","cancel","proposalId","queue","execute","submitVote","support","signVoting","VoteEmitted","submitVoteBySignature","getProposals","skip","helper","result","proposals","getProposal","getPropositionPowerAt","block","proposalStrategy","power","formatEther","getVotingPowerAt","getTotalPropositionSupplyAt","total","getTotalVotingSupplyAt","getTokensPower","tokens","getVoteOnProposal","GovernanceDelegationTokenService","delegate","governanceToken","governanceDelegationToken","getDelegateeAddress","delegateeAddress","GOV_DELEGATION_ACTION","delegateByType","delegationType","delegateBySig","expiry","getNonce","delegateByTypeBySig","prepareDelegateSignature","governanceTokenName","Delegate","prepareDelegateByTypeSignature","DelegateByType","getDelegateeByType","delegator","getPowerCurrent","getPowerAtBlock","blockNumber","_nonces","resolveName","TxBuilder","repayWithCollateralAdapters","swapCollateralAdapters","wethGateways","lendingPools","getWethGateway","getSwapCollateralAdapter","getRepayWithCollateralAdapter","aaveGovernanceV2Service","governanceDelegationTokenService"],"mappings":"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"}